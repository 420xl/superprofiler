<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="998" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="981.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="981.00"> </text><svg id="frames" x="10" width="1180" total_samples="709575"><g><title>hashbrown::map::make_hash (73 samples, 0.01%)</title><rect x="0.0296%" y="645" width="0.0103%" height="15" fill="rgb(227,0,7)" fg:x="210" fg:w="73"/><text x="0.2796%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (72 samples, 0.01%)</title><rect x="0.0297%" y="629" width="0.0101%" height="15" fill="rgb(217,0,24)" fg:x="211" fg:w="72"/><text x="0.2797%" y="639.50"></text></g><g><title>rg::args::ArgMatches::is_present (145 samples, 0.02%)</title><rect x="0.0280%" y="725" width="0.0204%" height="15" fill="rgb(221,193,54)" fg:x="199" fg:w="145"/><text x="0.2780%" y="735.50"></text></g><g><title>clap::args::arg_matches::ArgMatches::is_present (145 samples, 0.02%)</title><rect x="0.0280%" y="709" width="0.0204%" height="15" fill="rgb(248,212,6)" fg:x="199" fg:w="145"/><text x="0.2780%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (140 samples, 0.02%)</title><rect x="0.0287%" y="693" width="0.0197%" height="15" fill="rgb(208,68,35)" fg:x="204" fg:w="140"/><text x="0.2787%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (137 samples, 0.02%)</title><rect x="0.0292%" y="677" width="0.0193%" height="15" fill="rgb(232,128,0)" fg:x="207" fg:w="137"/><text x="0.2792%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (135 samples, 0.02%)</title><rect x="0.0295%" y="661" width="0.0190%" height="15" fill="rgb(207,160,47)" fg:x="209" fg:w="135"/><text x="0.2795%" y="671.50"></text></g><g><title>num_cpus::linux::Cgroup::cpu_quota (112 samples, 0.02%)</title><rect x="0.0521%" y="565" width="0.0158%" height="15" fill="rgb(228,23,34)" fg:x="370" fg:w="112"/><text x="0.3021%" y="575.50"></text></g><g><title>num_cpus::linux::Cgroup::quota_us (109 samples, 0.02%)</title><rect x="0.0526%" y="549" width="0.0154%" height="15" fill="rgb(218,30,26)" fg:x="373" fg:w="109"/><text x="0.3026%" y="559.50"></text></g><g><title>num_cpus::linux::Cgroup::param (109 samples, 0.02%)</title><rect x="0.0526%" y="533" width="0.0154%" height="15" fill="rgb(220,122,19)" fg:x="373" fg:w="109"/><text x="0.3026%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (95 samples, 0.01%)</title><rect x="0.0834%" y="453" width="0.0134%" height="15" fill="rgb(250,228,42)" fg:x="592" fg:w="95"/><text x="0.3334%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (114 samples, 0.02%)</title><rect x="0.0827%" y="469" width="0.0161%" height="15" fill="rgb(240,193,28)" fg:x="587" fg:w="114"/><text x="0.3327%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (92 samples, 0.01%)</title><rect x="0.1119%" y="453" width="0.0130%" height="15" fill="rgb(216,20,37)" fg:x="794" fg:w="92"/><text x="0.3619%" y="463.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (86 samples, 0.01%)</title><rect x="0.1127%" y="437" width="0.0121%" height="15" fill="rgb(206,188,39)" fg:x="800" fg:w="86"/><text x="0.3627%" y="447.50"></text></g><g><title>alloc::string::String::pop (251 samples, 0.04%)</title><rect x="0.1005%" y="469" width="0.0354%" height="15" fill="rgb(217,207,13)" fg:x="713" fg:w="251"/><text x="0.3505%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (76 samples, 0.01%)</title><rect x="0.1505%" y="405" width="0.0107%" height="15" fill="rgb(231,73,38)" fg:x="1068" fg:w="76"/><text x="0.4005%" y="415.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_suffix_of (279 samples, 0.04%)</title><rect x="0.1418%" y="437" width="0.0393%" height="15" fill="rgb(225,20,46)" fg:x="1006" fg:w="279"/><text x="0.3918%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::ends_with (243 samples, 0.03%)</title><rect x="0.1468%" y="421" width="0.0342%" height="15" fill="rgb(210,31,41)" fg:x="1042" fg:w="243"/><text x="0.3968%" y="431.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (141 samples, 0.02%)</title><rect x="0.1612%" y="405" width="0.0199%" height="15" fill="rgb(221,200,47)" fg:x="1144" fg:w="141"/><text x="0.4112%" y="415.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (128 samples, 0.02%)</title><rect x="0.1631%" y="389" width="0.0180%" height="15" fill="rgb(226,26,5)" fg:x="1157" fg:w="128"/><text x="0.4131%" y="399.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (101 samples, 0.01%)</title><rect x="0.1669%" y="373" width="0.0142%" height="15" fill="rgb(249,33,26)" fg:x="1184" fg:w="101"/><text x="0.4169%" y="383.50"></text></g><g><title>core::char::methods::encode_utf8_raw (153 samples, 0.02%)</title><rect x="0.1845%" y="421" width="0.0216%" height="15" fill="rgb(235,183,28)" fg:x="1309" fg:w="153"/><text x="0.4345%" y="431.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (106 samples, 0.01%)</title><rect x="0.1911%" y="405" width="0.0149%" height="15" fill="rgb(221,5,38)" fg:x="1356" fg:w="106"/><text x="0.4411%" y="415.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (76 samples, 0.01%)</title><rect x="0.1953%" y="389" width="0.0107%" height="15" fill="rgb(247,18,42)" fg:x="1386" fg:w="76"/><text x="0.4453%" y="399.50"></text></g><g><title>core::str::&lt;impl str&gt;::ends_with (503 samples, 0.07%)</title><rect x="0.1359%" y="469" width="0.0709%" height="15" fill="rgb(241,131,45)" fg:x="964" fg:w="503"/><text x="0.3859%" y="479.50"></text></g><g><title>&lt;char as core::str::pattern::Pattern&gt;::is_suffix_of (488 samples, 0.07%)</title><rect x="0.1380%" y="453" width="0.0688%" height="15" fill="rgb(249,31,29)" fg:x="979" fg:w="488"/><text x="0.3880%" y="463.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::encode_utf8 (170 samples, 0.02%)</title><rect x="0.1828%" y="437" width="0.0240%" height="15" fill="rgb(225,111,53)" fg:x="1297" fg:w="170"/><text x="0.4328%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (116 samples, 0.02%)</title><rect x="0.2128%" y="437" width="0.0163%" height="15" fill="rgb(238,160,17)" fg:x="1510" fg:w="116"/><text x="0.4628%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (136 samples, 0.02%)</title><rect x="0.2924%" y="277" width="0.0192%" height="15" fill="rgb(214,148,48)" fg:x="2075" fg:w="136"/><text x="0.5424%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (126 samples, 0.02%)</title><rect x="0.2938%" y="261" width="0.0178%" height="15" fill="rgb(232,36,49)" fg:x="2085" fg:w="126"/><text x="0.5438%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (208 samples, 0.03%)</title><rect x="0.2885%" y="293" width="0.0293%" height="15" fill="rgb(209,103,24)" fg:x="2047" fg:w="208"/><text x="0.5385%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (434 samples, 0.06%)</title><rect x="0.2769%" y="309" width="0.0612%" height="15" fill="rgb(229,88,8)" fg:x="1965" fg:w="434"/><text x="0.5269%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (472 samples, 0.07%)</title><rect x="0.2730%" y="357" width="0.0665%" height="15" fill="rgb(213,181,19)" fg:x="1937" fg:w="472"/><text x="0.5230%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (470 samples, 0.07%)</title><rect x="0.2733%" y="341" width="0.0662%" height="15" fill="rgb(254,191,54)" fg:x="1939" fg:w="470"/><text x="0.5233%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (448 samples, 0.06%)</title><rect x="0.2764%" y="325" width="0.0631%" height="15" fill="rgb(241,83,37)" fg:x="1961" fg:w="448"/><text x="0.5264%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (528 samples, 0.07%)</title><rect x="0.2676%" y="373" width="0.0744%" height="15" fill="rgb(233,36,39)" fg:x="1899" fg:w="528"/><text x="0.5176%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (581 samples, 0.08%)</title><rect x="0.2657%" y="389" width="0.0819%" height="15" fill="rgb(226,3,54)" fg:x="1885" fg:w="581"/><text x="0.5157%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (626 samples, 0.09%)</title><rect x="0.2642%" y="405" width="0.0882%" height="15" fill="rgb(245,192,40)" fg:x="1875" fg:w="626"/><text x="0.5142%" y="415.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (89 samples, 0.01%)</title><rect x="0.3525%" y="405" width="0.0125%" height="15" fill="rgb(238,167,29)" fg:x="2501" fg:w="89"/><text x="0.6025%" y="415.50"></text></g><g><title>&lt;core::ops::range::RangeToInclusive&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (80 samples, 0.01%)</title><rect x="0.3537%" y="389" width="0.0113%" height="15" fill="rgb(232,182,51)" fg:x="2510" fg:w="80"/><text x="0.6037%" y="399.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,058 samples, 0.29%)</title><rect x="0.0778%" y="485" width="0.2900%" height="15" fill="rgb(231,60,39)" fg:x="552" fg:w="2058"/><text x="0.3278%" y="495.50"></text></g><g><title>std::io::BufRead::read_line (1,143 samples, 0.16%)</title><rect x="0.2067%" y="469" width="0.1611%" height="15" fill="rgb(208,69,12)" fg:x="1467" fg:w="1143"/><text x="0.4567%" y="479.50"></text></g><g><title>std::io::append_to_string (1,134 samples, 0.16%)</title><rect x="0.2080%" y="453" width="0.1598%" height="15" fill="rgb(235,93,37)" fg:x="1476" fg:w="1134"/><text x="0.4580%" y="463.50"></text></g><g><title>std::io::BufRead::read_line::{{closure}} (896 samples, 0.13%)</title><rect x="0.2416%" y="437" width="0.1263%" height="15" fill="rgb(213,116,39)" fg:x="1714" fg:w="896"/><text x="0.4916%" y="447.50"></text></g><g><title>std::io::read_until (884 samples, 0.12%)</title><rect x="0.2432%" y="421" width="0.1246%" height="15" fill="rgb(222,207,29)" fg:x="1726" fg:w="884"/><text x="0.4932%" y="431.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::ne (87 samples, 0.01%)</title><rect x="0.3933%" y="405" width="0.0123%" height="15" fill="rgb(206,96,30)" fg:x="2791" fg:w="87"/><text x="0.6433%" y="415.50"></text></g><g><title>core::array::&lt;impl core::ops::index::Index&lt;I&gt; for [T (108 samples, 0.02%)</title><rect x="0.4315%" y="357" width="0.0152%" height="15" fill="rgb(218,138,4)" fg:x="3062" fg:w="108"/><text x="0.6815%" y="367.50"></text></g><g><title> N]&gt;::index (108 samples, 0.02%)</title><rect x="0.4315%" y="341" width="0.0152%" height="15" fill="rgb(250,191,14)" fg:x="3062" fg:w="108"/><text x="0.6815%" y="351.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (101 samples, 0.01%)</title><rect x="0.4325%" y="325" width="0.0142%" height="15" fill="rgb(239,60,40)" fg:x="3069" fg:w="101"/><text x="0.6825%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (80 samples, 0.01%)</title><rect x="0.4355%" y="309" width="0.0113%" height="15" fill="rgb(206,27,48)" fg:x="3090" fg:w="80"/><text x="0.6855%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (194 samples, 0.03%)</title><rect x="0.4559%" y="357" width="0.0273%" height="15" fill="rgb(225,35,8)" fg:x="3235" fg:w="194"/><text x="0.7059%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (170 samples, 0.02%)</title><rect x="0.4593%" y="341" width="0.0240%" height="15" fill="rgb(250,213,24)" fg:x="3259" fg:w="170"/><text x="0.7093%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (111 samples, 0.02%)</title><rect x="0.4676%" y="325" width="0.0156%" height="15" fill="rgb(247,123,22)" fg:x="3318" fg:w="111"/><text x="0.7176%" y="335.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (670 samples, 0.09%)</title><rect x="0.4136%" y="373" width="0.0944%" height="15" fill="rgb(231,138,38)" fg:x="2935" fg:w="670"/><text x="0.6636%" y="383.50"></text></g><g><title>core::slice::memchr::memchr (136 samples, 0.02%)</title><rect x="0.4889%" y="357" width="0.0192%" height="15" fill="rgb(231,145,46)" fg:x="3469" fg:w="136"/><text x="0.7389%" y="367.50"></text></g><g><title>core::slice::memchr::memchr_general_case (87 samples, 0.01%)</title><rect x="0.4958%" y="341" width="0.0123%" height="15" fill="rgb(251,118,11)" fg:x="3518" fg:w="87"/><text x="0.7458%" y="351.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (801 samples, 0.11%)</title><rect x="0.4056%" y="405" width="0.1129%" height="15" fill="rgb(217,147,25)" fg:x="2878" fg:w="801"/><text x="0.6556%" y="415.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (796 samples, 0.11%)</title><rect x="0.4063%" y="389" width="0.1122%" height="15" fill="rgb(247,81,37)" fg:x="2883" fg:w="796"/><text x="0.6563%" y="399.50"></text></g><g><title>core::str::&lt;impl str&gt;::get_unchecked (74 samples, 0.01%)</title><rect x="0.5081%" y="373" width="0.0104%" height="15" fill="rgb(209,12,38)" fg:x="3605" fg:w="74"/><text x="0.7581%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (105 samples, 0.01%)</title><rect x="0.5515%" y="293" width="0.0148%" height="15" fill="rgb(227,1,9)" fg:x="3913" fg:w="105"/><text x="0.8015%" y="303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (153 samples, 0.02%)</title><rect x="0.5465%" y="309" width="0.0216%" height="15" fill="rgb(248,47,43)" fg:x="3878" fg:w="153"/><text x="0.7965%" y="319.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (297 samples, 0.04%)</title><rect x="0.5285%" y="341" width="0.0419%" height="15" fill="rgb(221,10,30)" fg:x="3750" fg:w="297"/><text x="0.7785%" y="351.50"></text></g><g><title>core::slice::memchr::memchr (173 samples, 0.02%)</title><rect x="0.5460%" y="325" width="0.0244%" height="15" fill="rgb(210,229,1)" fg:x="3874" fg:w="173"/><text x="0.7960%" y="335.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (340 samples, 0.05%)</title><rect x="0.5258%" y="373" width="0.0479%" height="15" fill="rgb(222,148,37)" fg:x="3731" fg:w="340"/><text x="0.7758%" y="383.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (337 samples, 0.05%)</title><rect x="0.5262%" y="357" width="0.0475%" height="15" fill="rgb(234,67,33)" fg:x="3734" fg:w="337"/><text x="0.7762%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any (380 samples, 0.05%)</title><rect x="0.5236%" y="405" width="0.0536%" height="15" fill="rgb(247,98,35)" fg:x="3715" fg:w="380"/><text x="0.7736%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (377 samples, 0.05%)</title><rect x="0.5240%" y="389" width="0.0531%" height="15" fill="rgb(247,138,52)" fg:x="3718" fg:w="377"/><text x="0.7740%" y="399.50"></text></g><g><title>core::array::&lt;impl core::ops::index::Index&lt;I&gt; for [T (173 samples, 0.02%)</title><rect x="0.6384%" y="325" width="0.0244%" height="15" fill="rgb(213,79,30)" fg:x="4530" fg:w="173"/><text x="0.8884%" y="335.50"></text></g><g><title> N]&gt;::index (173 samples, 0.02%)</title><rect x="0.6384%" y="309" width="0.0244%" height="15" fill="rgb(246,177,23)" fg:x="4530" fg:w="173"/><text x="0.8884%" y="319.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (144 samples, 0.02%)</title><rect x="0.6425%" y="293" width="0.0203%" height="15" fill="rgb(230,62,27)" fg:x="4559" fg:w="144"/><text x="0.8925%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (120 samples, 0.02%)</title><rect x="0.6459%" y="277" width="0.0169%" height="15" fill="rgb(216,154,8)" fg:x="4583" fg:w="120"/><text x="0.8959%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (87 samples, 0.01%)</title><rect x="0.6505%" y="261" width="0.0123%" height="15" fill="rgb(244,35,45)" fg:x="4616" fg:w="87"/><text x="0.9005%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (123 samples, 0.02%)</title><rect x="0.6628%" y="325" width="0.0173%" height="15" fill="rgb(251,115,12)" fg:x="4703" fg:w="123"/><text x="0.9128%" y="335.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (108 samples, 0.02%)</title><rect x="0.6649%" y="309" width="0.0152%" height="15" fill="rgb(240,54,50)" fg:x="4718" fg:w="108"/><text x="0.9149%" y="319.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (87 samples, 0.01%)</title><rect x="0.6679%" y="293" width="0.0123%" height="15" fill="rgb(233,84,52)" fg:x="4739" fg:w="87"/><text x="0.9179%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (320 samples, 0.05%)</title><rect x="0.6801%" y="325" width="0.0451%" height="15" fill="rgb(207,117,47)" fg:x="4826" fg:w="320"/><text x="0.9301%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (266 samples, 0.04%)</title><rect x="0.6877%" y="309" width="0.0375%" height="15" fill="rgb(249,43,39)" fg:x="4880" fg:w="266"/><text x="0.9377%" y="319.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (173 samples, 0.02%)</title><rect x="0.7008%" y="293" width="0.0244%" height="15" fill="rgb(209,38,44)" fg:x="4973" fg:w="173"/><text x="0.9508%" y="303.50"></text></g><g><title>core::ptr::slice_from_raw_parts (72 samples, 0.01%)</title><rect x="0.7151%" y="277" width="0.0101%" height="15" fill="rgb(236,212,23)" fg:x="5074" fg:w="72"/><text x="0.9651%" y="287.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1,075 samples, 0.15%)</title><rect x="0.6059%" y="341" width="0.1515%" height="15" fill="rgb(242,79,21)" fg:x="4299" fg:w="1075"/><text x="0.8559%" y="351.50"></text></g><g><title>core::slice::memchr::memchr (184 samples, 0.03%)</title><rect x="0.7314%" y="325" width="0.0259%" height="15" fill="rgb(211,96,35)" fg:x="5190" fg:w="184"/><text x="0.9814%" y="335.50"></text></g><g><title>core::slice::memchr::memchr_general_case (139 samples, 0.02%)</title><rect x="0.7378%" y="309" width="0.0196%" height="15" fill="rgb(253,215,40)" fg:x="5235" fg:w="139"/><text x="0.9878%" y="319.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,267 samples, 0.18%)</title><rect x="0.5944%" y="373" width="0.1786%" height="15" fill="rgb(211,81,21)" fg:x="4218" fg:w="1267"/><text x="0.8444%" y="383.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1,258 samples, 0.18%)</title><rect x="0.5957%" y="357" width="0.1773%" height="15" fill="rgb(208,190,38)" fg:x="4227" fg:w="1258"/><text x="0.8457%" y="367.50"></text></g><g><title>core::str::&lt;impl str&gt;::get_unchecked (111 samples, 0.02%)</title><rect x="0.7574%" y="341" width="0.0156%" height="15" fill="rgb(235,213,38)" fg:x="5374" fg:w="111"/><text x="1.0074%" y="351.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get_unchecked (94 samples, 0.01%)</title><rect x="0.7598%" y="325" width="0.0132%" height="15" fill="rgb(237,122,38)" fg:x="5391" fg:w="94"/><text x="1.0098%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,552 samples, 0.22%)</title><rect x="0.5789%" y="389" width="0.2187%" height="15" fill="rgb(244,218,35)" fg:x="4108" fg:w="1552"/><text x="0.8289%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (175 samples, 0.02%)</title><rect x="0.7730%" y="373" width="0.0247%" height="15" fill="rgb(240,68,47)" fg:x="5485" fg:w="175"/><text x="1.0230%" y="383.50"></text></g><g><title>num_cpus::linux::MountInfo::parse_line::{{closure}} (140 samples, 0.02%)</title><rect x="0.7779%" y="357" width="0.0197%" height="15" fill="rgb(210,16,53)" fg:x="5520" fg:w="140"/><text x="1.0279%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (117 samples, 0.02%)</title><rect x="0.7812%" y="341" width="0.0165%" height="15" fill="rgb(235,124,12)" fg:x="5543" fg:w="117"/><text x="1.0312%" y="351.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (104 samples, 0.01%)</title><rect x="0.7830%" y="325" width="0.0147%" height="15" fill="rgb(224,169,11)" fg:x="5556" fg:w="104"/><text x="1.0330%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1,578 samples, 0.22%)</title><rect x="0.5771%" y="405" width="0.2224%" height="15" fill="rgb(250,166,2)" fg:x="4095" fg:w="1578"/><text x="0.8271%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (126 samples, 0.02%)</title><rect x="0.8325%" y="341" width="0.0178%" height="15" fill="rgb(242,216,29)" fg:x="5907" fg:w="126"/><text x="1.0825%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (109 samples, 0.02%)</title><rect x="0.8349%" y="325" width="0.0154%" height="15" fill="rgb(230,116,27)" fg:x="5924" fg:w="109"/><text x="1.0849%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (80 samples, 0.01%)</title><rect x="0.8390%" y="309" width="0.0113%" height="15" fill="rgb(228,99,48)" fg:x="5953" fg:w="80"/><text x="1.0890%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (105 samples, 0.01%)</title><rect x="0.8581%" y="309" width="0.0148%" height="15" fill="rgb(253,11,6)" fg:x="6089" fg:w="105"/><text x="1.1081%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (135 samples, 0.02%)</title><rect x="0.8547%" y="325" width="0.0190%" height="15" fill="rgb(247,143,39)" fg:x="6065" fg:w="135"/><text x="1.1047%" y="335.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (501 samples, 0.07%)</title><rect x="0.8067%" y="357" width="0.0706%" height="15" fill="rgb(236,97,10)" fg:x="5724" fg:w="501"/><text x="1.0567%" y="367.50"></text></g><g><title>core::slice::memchr::memchr (169 samples, 0.02%)</title><rect x="0.8535%" y="341" width="0.0238%" height="15" fill="rgb(233,208,19)" fg:x="6056" fg:w="169"/><text x="1.1035%" y="351.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (583 samples, 0.08%)</title><rect x="0.8026%" y="389" width="0.0822%" height="15" fill="rgb(216,164,2)" fg:x="5695" fg:w="583"/><text x="1.0526%" y="399.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (579 samples, 0.08%)</title><rect x="0.8032%" y="373" width="0.0816%" height="15" fill="rgb(220,129,5)" fg:x="5699" fg:w="579"/><text x="1.0532%" y="383.50"></text></g><g><title>core::array::&lt;impl core::ops::index::Index&lt;I&gt; for [T (188 samples, 0.03%)</title><rect x="0.9401%" y="325" width="0.0265%" height="15" fill="rgb(242,17,10)" fg:x="6671" fg:w="188"/><text x="1.1901%" y="335.50"></text></g><g><title> N]&gt;::index (188 samples, 0.03%)</title><rect x="0.9401%" y="309" width="0.0265%" height="15" fill="rgb(242,107,0)" fg:x="6671" fg:w="188"/><text x="1.1901%" y="319.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (164 samples, 0.02%)</title><rect x="0.9435%" y="293" width="0.0231%" height="15" fill="rgb(251,28,31)" fg:x="6695" fg:w="164"/><text x="1.1935%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (147 samples, 0.02%)</title><rect x="0.9459%" y="277" width="0.0207%" height="15" fill="rgb(233,223,10)" fg:x="6712" fg:w="147"/><text x="1.1959%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (111 samples, 0.02%)</title><rect x="0.9510%" y="261" width="0.0156%" height="15" fill="rgb(215,21,27)" fg:x="6748" fg:w="111"/><text x="1.2010%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (147 samples, 0.02%)</title><rect x="0.9666%" y="325" width="0.0207%" height="15" fill="rgb(232,23,21)" fg:x="6859" fg:w="147"/><text x="1.2166%" y="335.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (119 samples, 0.02%)</title><rect x="0.9706%" y="309" width="0.0168%" height="15" fill="rgb(244,5,23)" fg:x="6887" fg:w="119"/><text x="1.2206%" y="319.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (106 samples, 0.01%)</title><rect x="0.9724%" y="293" width="0.0149%" height="15" fill="rgb(226,81,46)" fg:x="6900" fg:w="106"/><text x="1.2224%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (315 samples, 0.04%)</title><rect x="0.9874%" y="325" width="0.0444%" height="15" fill="rgb(247,70,30)" fg:x="7006" fg:w="315"/><text x="1.2374%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (265 samples, 0.04%)</title><rect x="0.9944%" y="309" width="0.0373%" height="15" fill="rgb(212,68,19)" fg:x="7056" fg:w="265"/><text x="1.2444%" y="319.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (192 samples, 0.03%)</title><rect x="1.0047%" y="293" width="0.0271%" height="15" fill="rgb(240,187,13)" fg:x="7129" fg:w="192"/><text x="1.2547%" y="303.50"></text></g><g><title>core::ptr::slice_from_raw_parts (79 samples, 0.01%)</title><rect x="1.0206%" y="277" width="0.0111%" height="15" fill="rgb(223,113,26)" fg:x="7242" fg:w="79"/><text x="1.2706%" y="287.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1,046 samples, 0.15%)</title><rect x="0.9101%" y="341" width="0.1474%" height="15" fill="rgb(206,192,2)" fg:x="6458" fg:w="1046"/><text x="1.1601%" y="351.50"></text></g><g><title>core::slice::memchr::memchr (133 samples, 0.02%)</title><rect x="1.0388%" y="325" width="0.0187%" height="15" fill="rgb(241,108,4)" fg:x="7371" fg:w="133"/><text x="1.2888%" y="335.50"></text></g><g><title>core::slice::memchr::memchr_general_case (79 samples, 0.01%)</title><rect x="1.0464%" y="309" width="0.0111%" height="15" fill="rgb(247,173,49)" fg:x="7425" fg:w="79"/><text x="1.2964%" y="319.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,244 samples, 0.18%)</title><rect x="0.8960%" y="373" width="0.1753%" height="15" fill="rgb(224,114,35)" fg:x="6358" fg:w="1244"/><text x="1.1460%" y="383.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1,227 samples, 0.17%)</title><rect x="0.8984%" y="357" width="0.1729%" height="15" fill="rgb(245,159,27)" fg:x="6375" fg:w="1227"/><text x="1.1484%" y="367.50"></text></g><g><title>core::str::&lt;impl str&gt;::get_unchecked (98 samples, 0.01%)</title><rect x="1.0575%" y="341" width="0.0138%" height="15" fill="rgb(245,172,44)" fg:x="7504" fg:w="98"/><text x="1.3075%" y="351.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get_unchecked (78 samples, 0.01%)</title><rect x="1.0604%" y="325" width="0.0110%" height="15" fill="rgb(236,23,11)" fg:x="7524" fg:w="78"/><text x="1.3104%" y="335.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (165 samples, 0.02%)</title><rect x="1.0713%" y="373" width="0.0233%" height="15" fill="rgb(205,117,38)" fg:x="7602" fg:w="165"/><text x="1.3213%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (146 samples, 0.02%)</title><rect x="1.0740%" y="357" width="0.0206%" height="15" fill="rgb(237,72,25)" fg:x="7621" fg:w="146"/><text x="1.3240%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::advance_by (1,530 samples, 0.22%)</title><rect x="0.8848%" y="389" width="0.2156%" height="15" fill="rgb(244,70,9)" fg:x="6278" fg:w="1530"/><text x="1.1348%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::nth (2,142 samples, 0.30%)</title><rect x="0.7995%" y="405" width="0.3019%" height="15" fill="rgb(217,125,39)" fg:x="5673" fg:w="2142"/><text x="1.0495%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (156 samples, 0.02%)</title><rect x="1.1014%" y="405" width="0.0220%" height="15" fill="rgb(235,36,10)" fg:x="7815" fg:w="156"/><text x="1.3514%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (152 samples, 0.02%)</title><rect x="1.1019%" y="389" width="0.0214%" height="15" fill="rgb(251,123,47)" fg:x="7819" fg:w="152"/><text x="1.3519%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (117 samples, 0.02%)</title><rect x="1.1069%" y="373" width="0.0165%" height="15" fill="rgb(221,13,13)" fg:x="7854" fg:w="117"/><text x="1.3569%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (113 samples, 0.02%)</title><rect x="1.1074%" y="357" width="0.0159%" height="15" fill="rgb(238,131,9)" fg:x="7858" fg:w="113"/><text x="1.3574%" y="367.50"></text></g><g><title>core::char::methods::encode_utf8_raw (107 samples, 0.02%)</title><rect x="1.1349%" y="357" width="0.0151%" height="15" fill="rgb(211,50,8)" fg:x="8053" fg:w="107"/><text x="1.3849%" y="367.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (71 samples, 0.01%)</title><rect x="1.1400%" y="341" width="0.0100%" height="15" fill="rgb(245,182,24)" fg:x="8089" fg:w="71"/><text x="1.3900%" y="351.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::encode_utf8 (126 samples, 0.02%)</title><rect x="1.1332%" y="373" width="0.0178%" height="15" fill="rgb(242,14,37)" fg:x="8041" fg:w="126"/><text x="1.3832%" y="383.50"></text></g><g><title>&lt;char as core::str::pattern::Pattern&gt;::into_searcher (189 samples, 0.03%)</title><rect x="1.1273%" y="389" width="0.0266%" height="15" fill="rgb(246,228,12)" fg:x="7999" fg:w="189"/><text x="1.3773%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (5,579 samples, 0.79%)</title><rect x="0.3711%" y="469" width="0.7862%" height="15" fill="rgb(213,55,15)" fg:x="2633" fg:w="5579"/><text x="0.6211%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5,548 samples, 0.78%)</title><rect x="0.3754%" y="453" width="0.7819%" height="15" fill="rgb(209,9,3)" fg:x="2664" fg:w="5548"/><text x="0.6254%" y="463.50"></text></g><g><title>core::ops::function::FnMut::call_mut (5,532 samples, 0.78%)</title><rect x="0.3777%" y="437" width="0.7796%" height="15" fill="rgb(230,59,30)" fg:x="2680" fg:w="5532"/><text x="0.6277%" y="447.50"></text></g><g><title>num_cpus::linux::MountInfo::parse_line (5,523 samples, 0.78%)</title><rect x="0.3790%" y="421" width="0.7784%" height="15" fill="rgb(209,121,21)" fg:x="2689" fg:w="5523"/><text x="0.6290%" y="431.50"></text></g><g><title>core::str::&lt;impl str&gt;::split (241 samples, 0.03%)</title><rect x="1.1233%" y="405" width="0.0340%" height="15" fill="rgb(220,109,13)" fg:x="7971" fg:w="241"/><text x="1.3733%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7,703 samples, 1.09%)</title><rect x="0.0744%" y="517" width="1.0856%" height="15" fill="rgb(232,18,1)" fg:x="528" fg:w="7703"/><text x="0.3244%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7,703 samples, 1.09%)</title><rect x="0.0744%" y="501" width="1.0856%" height="15" fill="rgb(215,41,42)" fg:x="528" fg:w="7703"/><text x="0.3244%" y="511.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_try_fold::{{closure}} (5,621 samples, 0.79%)</title><rect x="0.3678%" y="485" width="0.7922%" height="15" fill="rgb(224,123,36)" fg:x="2610" fg:w="5621"/><text x="0.6178%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,705 samples, 1.09%)</title><rect x="0.0743%" y="549" width="1.0859%" height="15" fill="rgb(240,125,3)" fg:x="527" fg:w="7705"/><text x="0.3243%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (7,705 samples, 1.09%)</title><rect x="0.0743%" y="533" width="1.0859%" height="15" fill="rgb(205,98,50)" fg:x="527" fg:w="7705"/><text x="0.3243%" y="543.50"></text></g><g><title>num_cpus::linux::MountInfo::load_cpu (7,746 samples, 1.09%)</title><rect x="0.0736%" y="565" width="1.0916%" height="15" fill="rgb(205,185,37)" fg:x="522" fg:w="7746"/><text x="0.3236%" y="575.50"></text></g><g><title>alloc::string::String::pop (151 samples, 0.02%)</title><rect x="1.1777%" y="469" width="0.0213%" height="15" fill="rgb(238,207,15)" fg:x="8357" fg:w="151"/><text x="1.4277%" y="479.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_suffix_of (130 samples, 0.02%)</title><rect x="1.2004%" y="437" width="0.0183%" height="15" fill="rgb(213,199,42)" fg:x="8518" fg:w="130"/><text x="1.4504%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::ends_with (113 samples, 0.02%)</title><rect x="1.2028%" y="421" width="0.0159%" height="15" fill="rgb(235,201,11)" fg:x="8535" fg:w="113"/><text x="1.4528%" y="431.50"></text></g><g><title>core::char::methods::encode_utf8_raw (74 samples, 0.01%)</title><rect x="1.2203%" y="421" width="0.0104%" height="15" fill="rgb(207,46,11)" fg:x="8659" fg:w="74"/><text x="1.4703%" y="431.50"></text></g><g><title>core::str::&lt;impl str&gt;::ends_with (229 samples, 0.03%)</title><rect x="1.1990%" y="469" width="0.0323%" height="15" fill="rgb(241,35,35)" fg:x="8508" fg:w="229"/><text x="1.4490%" y="479.50"></text></g><g><title>&lt;char as core::str::pattern::Pattern&gt;::is_suffix_of (228 samples, 0.03%)</title><rect x="1.1992%" y="453" width="0.0321%" height="15" fill="rgb(243,32,47)" fg:x="8509" fg:w="228"/><text x="1.4492%" y="463.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::encode_utf8 (83 samples, 0.01%)</title><rect x="1.2196%" y="437" width="0.0117%" height="15" fill="rgb(247,202,23)" fg:x="8654" fg:w="83"/><text x="1.4696%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (72 samples, 0.01%)</title><rect x="1.2337%" y="437" width="0.0101%" height="15" fill="rgb(219,102,11)" fg:x="8754" fg:w="72"/><text x="1.4837%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (94 samples, 0.01%)</title><rect x="1.2679%" y="293" width="0.0132%" height="15" fill="rgb(243,110,44)" fg:x="8997" fg:w="94"/><text x="1.5179%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (191 samples, 0.03%)</title><rect x="1.2630%" y="309" width="0.0269%" height="15" fill="rgb(222,74,54)" fg:x="8962" fg:w="191"/><text x="1.5130%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (206 samples, 0.03%)</title><rect x="1.2619%" y="357" width="0.0290%" height="15" fill="rgb(216,99,12)" fg:x="8954" fg:w="206"/><text x="1.5119%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (205 samples, 0.03%)</title><rect x="1.2620%" y="341" width="0.0289%" height="15" fill="rgb(226,22,26)" fg:x="8955" fg:w="205"/><text x="1.5120%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (199 samples, 0.03%)</title><rect x="1.2629%" y="325" width="0.0280%" height="15" fill="rgb(217,163,10)" fg:x="8961" fg:w="199"/><text x="1.5129%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (232 samples, 0.03%)</title><rect x="1.2591%" y="373" width="0.0327%" height="15" fill="rgb(213,25,53)" fg:x="8934" fg:w="232"/><text x="1.5091%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (247 samples, 0.03%)</title><rect x="1.2589%" y="389" width="0.0348%" height="15" fill="rgb(252,105,26)" fg:x="8933" fg:w="247"/><text x="1.5089%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (274 samples, 0.04%)</title><rect x="1.2585%" y="405" width="0.0386%" height="15" fill="rgb(220,39,43)" fg:x="8930" fg:w="274"/><text x="1.5085%" y="415.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (983 samples, 0.14%)</title><rect x="1.1677%" y="485" width="0.1385%" height="15" fill="rgb(229,68,48)" fg:x="8286" fg:w="983"/><text x="1.4177%" y="495.50"></text></g><g><title>std::io::BufRead::read_line (532 samples, 0.07%)</title><rect x="1.2313%" y="469" width="0.0750%" height="15" fill="rgb(252,8,32)" fg:x="8737" fg:w="532"/><text x="1.4813%" y="479.50"></text></g><g><title>std::io::append_to_string (531 samples, 0.07%)</title><rect x="1.2314%" y="453" width="0.0748%" height="15" fill="rgb(223,20,43)" fg:x="8738" fg:w="531"/><text x="1.4814%" y="463.50"></text></g><g><title>std::io::BufRead::read_line::{{closure}} (415 samples, 0.06%)</title><rect x="1.2478%" y="437" width="0.0585%" height="15" fill="rgb(229,81,49)" fg:x="8854" fg:w="415"/><text x="1.4978%" y="447.50"></text></g><g><title>std::io::read_until (411 samples, 0.06%)</title><rect x="1.2484%" y="421" width="0.0579%" height="15" fill="rgb(236,28,36)" fg:x="8858" fg:w="411"/><text x="1.4984%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (196 samples, 0.03%)</title><rect x="1.3531%" y="293" width="0.0276%" height="15" fill="rgb(249,185,26)" fg:x="9601" fg:w="196"/><text x="1.6031%" y="303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (290 samples, 0.04%)</title><rect x="1.3424%" y="309" width="0.0409%" height="15" fill="rgb(249,174,33)" fg:x="9525" fg:w="290"/><text x="1.5924%" y="319.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (385 samples, 0.05%)</title><rect x="1.3305%" y="341" width="0.0543%" height="15" fill="rgb(233,201,37)" fg:x="9441" fg:w="385"/><text x="1.5805%" y="351.50"></text></g><g><title>core::slice::memchr::memchr (307 samples, 0.04%)</title><rect x="1.3415%" y="325" width="0.0433%" height="15" fill="rgb(221,78,26)" fg:x="9519" fg:w="307"/><text x="1.5915%" y="335.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (435 samples, 0.06%)</title><rect x="1.3280%" y="373" width="0.0613%" height="15" fill="rgb(250,127,30)" fg:x="9423" fg:w="435"/><text x="1.5780%" y="383.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (433 samples, 0.06%)</title><rect x="1.3283%" y="357" width="0.0610%" height="15" fill="rgb(230,49,44)" fg:x="9425" fg:w="433"/><text x="1.5783%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any (486 samples, 0.07%)</title><rect x="1.3235%" y="405" width="0.0685%" height="15" fill="rgb(229,67,23)" fg:x="9391" fg:w="486"/><text x="1.5735%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (477 samples, 0.07%)</title><rect x="1.3247%" y="389" width="0.0672%" height="15" fill="rgb(249,83,47)" fg:x="9400" fg:w="477"/><text x="1.5747%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (93 samples, 0.01%)</title><rect x="1.4173%" y="309" width="0.0131%" height="15" fill="rgb(215,43,3)" fg:x="10057" fg:w="93"/><text x="1.6673%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (123 samples, 0.02%)</title><rect x="1.4135%" y="325" width="0.0173%" height="15" fill="rgb(238,154,13)" fg:x="10030" fg:w="123"/><text x="1.6635%" y="335.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (273 samples, 0.04%)</title><rect x="1.3948%" y="357" width="0.0385%" height="15" fill="rgb(219,56,2)" fg:x="9897" fg:w="273"/><text x="1.6448%" y="367.50"></text></g><g><title>core::slice::memchr::memchr (146 samples, 0.02%)</title><rect x="1.4127%" y="341" width="0.0206%" height="15" fill="rgb(233,0,4)" fg:x="10024" fg:w="146"/><text x="1.6627%" y="351.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (299 samples, 0.04%)</title><rect x="1.3931%" y="389" width="0.0421%" height="15" fill="rgb(235,30,7)" fg:x="9885" fg:w="299"/><text x="1.6431%" y="399.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (295 samples, 0.04%)</title><rect x="1.3937%" y="373" width="0.0416%" height="15" fill="rgb(250,79,13)" fg:x="9889" fg:w="295"/><text x="1.6437%" y="383.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (201 samples, 0.03%)</title><rect x="1.4416%" y="341" width="0.0283%" height="15" fill="rgb(211,146,34)" fg:x="10229" fg:w="201"/><text x="1.6916%" y="351.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (238 samples, 0.03%)</title><rect x="1.4389%" y="373" width="0.0335%" height="15" fill="rgb(228,22,38)" fg:x="10210" fg:w="238"/><text x="1.6889%" y="383.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (234 samples, 0.03%)</title><rect x="1.4395%" y="357" width="0.0330%" height="15" fill="rgb(235,168,5)" fg:x="10214" fg:w="234"/><text x="1.6895%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::advance_by (304 samples, 0.04%)</title><rect x="1.4352%" y="389" width="0.0428%" height="15" fill="rgb(221,155,16)" fg:x="10184" fg:w="304"/><text x="1.6852%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::nth (614 samples, 0.09%)</title><rect x="1.3920%" y="405" width="0.0865%" height="15" fill="rgb(215,215,53)" fg:x="9877" fg:w="614"/><text x="1.6420%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (87 samples, 0.01%)</title><rect x="1.4807%" y="405" width="0.0123%" height="15" fill="rgb(223,4,10)" fg:x="10507" fg:w="87"/><text x="1.7307%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (85 samples, 0.01%)</title><rect x="1.4810%" y="389" width="0.0120%" height="15" fill="rgb(234,103,6)" fg:x="10509" fg:w="85"/><text x="1.7310%" y="399.50"></text></g><g><title>core::char::methods::encode_utf8_raw (96 samples, 0.01%)</title><rect x="1.4998%" y="357" width="0.0135%" height="15" fill="rgb(227,97,0)" fg:x="10642" fg:w="96"/><text x="1.7498%" y="367.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::encode_utf8 (102 samples, 0.01%)</title><rect x="1.4992%" y="373" width="0.0144%" height="15" fill="rgb(234,150,53)" fg:x="10638" fg:w="102"/><text x="1.7492%" y="383.50"></text></g><g><title>&lt;char as core::str::pattern::Pattern&gt;::into_searcher (134 samples, 0.02%)</title><rect x="1.4960%" y="389" width="0.0189%" height="15" fill="rgb(228,201,54)" fg:x="10615" fg:w="134"/><text x="1.7460%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (1,488 samples, 0.21%)</title><rect x="1.3074%" y="469" width="0.2097%" height="15" fill="rgb(222,22,37)" fg:x="9277" fg:w="1488"/><text x="1.5574%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,483 samples, 0.21%)</title><rect x="1.3081%" y="453" width="0.2090%" height="15" fill="rgb(237,53,32)" fg:x="9282" fg:w="1483"/><text x="1.5581%" y="463.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,481 samples, 0.21%)</title><rect x="1.3084%" y="437" width="0.2087%" height="15" fill="rgb(233,25,53)" fg:x="9284" fg:w="1481"/><text x="1.5584%" y="447.50"></text></g><g><title>num_cpus::linux::Subsys::parse_line (1,477 samples, 0.21%)</title><rect x="1.3090%" y="421" width="0.2082%" height="15" fill="rgb(210,40,34)" fg:x="9288" fg:w="1477"/><text x="1.5590%" y="431.50"></text></g><g><title>core::str::&lt;impl str&gt;::split (171 samples, 0.02%)</title><rect x="1.4930%" y="405" width="0.0241%" height="15" fill="rgb(241,220,44)" fg:x="10594" fg:w="171"/><text x="1.7430%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,512 samples, 0.35%)</title><rect x="1.1652%" y="517" width="0.3540%" height="15" fill="rgb(235,28,35)" fg:x="8268" fg:w="2512"/><text x="1.4152%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,509 samples, 0.35%)</title><rect x="1.1656%" y="501" width="0.3536%" height="15" fill="rgb(210,56,17)" fg:x="8271" fg:w="2509"/><text x="1.4156%" y="511.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_try_fold::{{closure}} (1,511 samples, 0.21%)</title><rect x="1.3063%" y="485" width="0.2129%" height="15" fill="rgb(224,130,29)" fg:x="9269" fg:w="1511"/><text x="1.5563%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,514 samples, 0.35%)</title><rect x="1.1652%" y="549" width="0.3543%" height="15" fill="rgb(235,212,8)" fg:x="8268" fg:w="2514"/><text x="1.4152%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (2,514 samples, 0.35%)</title><rect x="1.1652%" y="533" width="0.3543%" height="15" fill="rgb(223,33,50)" fg:x="8268" fg:w="2514"/><text x="1.4152%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once (10,457 samples, 1.47%)</title><rect x="0.0505%" y="613" width="1.4737%" height="15" fill="rgb(219,149,13)" fg:x="358" fg:w="10457"/><text x="0.3005%" y="623.50"></text></g><g><title>num_cpus::linux::init_cgroups (10,457 samples, 1.47%)</title><rect x="0.0505%" y="597" width="1.4737%" height="15" fill="rgb(250,156,29)" fg:x="358" fg:w="10457"/><text x="0.3005%" y="607.50"></text></g><g><title>num_cpus::linux::load_cgroups (10,457 samples, 1.47%)</title><rect x="0.0505%" y="581" width="1.4737%" height="15" fill="rgb(216,193,19)" fg:x="358" fg:w="10457"/><text x="0.3005%" y="591.50"></text></g><g><title>num_cpus::linux::Subsys::load_cpu (2,547 samples, 0.36%)</title><rect x="1.1652%" y="565" width="0.3589%" height="15" fill="rgb(216,135,14)" fg:x="8268" fg:w="2547"/><text x="1.4152%" y="575.50"></text></g><g><title>num_cpus::linux::cgroups_num_cpus (10,468 samples, 1.48%)</title><rect x="0.0492%" y="677" width="1.4752%" height="15" fill="rgb(241,47,5)" fg:x="349" fg:w="10468"/><text x="0.2992%" y="687.50"></text></g><g><title>std::sync::once::Once::call_once (10,467 samples, 1.48%)</title><rect x="0.0493%" y="661" width="1.4751%" height="15" fill="rgb(233,42,35)" fg:x="350" fg:w="10467"/><text x="0.2993%" y="671.50"></text></g><g><title>std::sync::once::Once::call_inner (10,466 samples, 1.47%)</title><rect x="0.0495%" y="645" width="1.4750%" height="15" fill="rgb(231,13,6)" fg:x="351" fg:w="10466"/><text x="0.2995%" y="655.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (10,460 samples, 1.47%)</title><rect x="0.0503%" y="629" width="1.4741%" height="15" fill="rgb(207,181,40)" fg:x="357" fg:w="10460"/><text x="0.3003%" y="639.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (281 samples, 0.04%)</title><rect x="1.7216%" y="629" width="0.0396%" height="15" fill="rgb(254,173,49)" fg:x="12216" fg:w="281"/><text x="1.9716%" y="639.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for usize&gt;::clone (120 samples, 0.02%)</title><rect x="1.7612%" y="629" width="0.0169%" height="15" fill="rgb(221,1,38)" fg:x="12497" fg:w="120"/><text x="2.0112%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (192 samples, 0.03%)</title><rect x="1.7781%" y="629" width="0.0271%" height="15" fill="rgb(206,124,46)" fg:x="12617" fg:w="192"/><text x="2.0281%" y="639.50"></text></g><g><title>core::ptr::read (339 samples, 0.05%)</title><rect x="1.8762%" y="613" width="0.0478%" height="15" fill="rgb(249,21,11)" fg:x="13313" fg:w="339"/><text x="2.1262%" y="623.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2,476 samples, 0.35%)</title><rect x="1.5935%" y="661" width="0.3489%" height="15" fill="rgb(222,201,40)" fg:x="11307" fg:w="2476"/><text x="1.8435%" y="671.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2,268 samples, 0.32%)</title><rect x="1.6228%" y="645" width="0.3196%" height="15" fill="rgb(235,61,29)" fg:x="11515" fg:w="2268"/><text x="1.8728%" y="655.50"></text></g><g><title>core::mem::replace (974 samples, 0.14%)</title><rect x="1.8052%" y="629" width="0.1373%" height="15" fill="rgb(219,207,3)" fg:x="12809" fg:w="974"/><text x="2.0552%" y="639.50"></text></g><g><title>core::ptr::write (131 samples, 0.02%)</title><rect x="1.9240%" y="613" width="0.0185%" height="15" fill="rgb(222,56,46)" fg:x="13652" fg:w="131"/><text x="2.1740%" y="623.50"></text></g><g><title>num_cpus::get (15,423 samples, 2.17%)</title><rect x="0.0492%" y="709" width="2.1736%" height="15" fill="rgb(239,76,54)" fg:x="349" fg:w="15423"/><text x="0.2992%" y="719.50">n..</text></g><g><title>num_cpus::linux::get_num_cpus (15,423 samples, 2.17%)</title><rect x="0.0492%" y="693" width="2.1736%" height="15" fill="rgb(231,124,27)" fg:x="349" fg:w="15423"/><text x="0.2992%" y="703.50">n..</text></g><g><title>num_cpus::linux::logical_cpus (4,955 samples, 0.70%)</title><rect x="1.5244%" y="677" width="0.6983%" height="15" fill="rgb(249,195,6)" fg:x="10817" fg:w="4955"/><text x="1.7744%" y="687.50"></text></g><g><title>libc::unix::linux_like::linux::CPU_ISSET (1,989 samples, 0.28%)</title><rect x="1.9424%" y="661" width="0.2803%" height="15" fill="rgb(237,174,47)" fg:x="13783" fg:w="1989"/><text x="2.1924%" y="671.50"></text></g><g><title>core::mem::size_of_val (171 samples, 0.02%)</title><rect x="2.1986%" y="645" width="0.0241%" height="15" fill="rgb(206,201,31)" fg:x="15601" fg:w="171"/><text x="2.4486%" y="655.50"></text></g><g><title>rg::args::ArgMatches::sort_by (134 samples, 0.02%)</title><rect x="2.2227%" y="709" width="0.0189%" height="15" fill="rgb(231,57,52)" fg:x="15772" fg:w="134"/><text x="2.4727%" y="719.50"></text></g><g><title>rg::args::ArgMatches::value_of_lossy (91 samples, 0.01%)</title><rect x="2.2288%" y="693" width="0.0128%" height="15" fill="rgb(248,177,22)" fg:x="15815" fg:w="91"/><text x="2.4788%" y="703.50"></text></g><g><title>clap::args::arg_matches::ArgMatches::value_of_lossy (91 samples, 0.01%)</title><rect x="2.2288%" y="677" width="0.0128%" height="15" fill="rgb(215,211,37)" fg:x="15815" fg:w="91"/><text x="2.4788%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (89 samples, 0.01%)</title><rect x="2.2291%" y="661" width="0.0125%" height="15" fill="rgb(241,128,51)" fg:x="15817" fg:w="89"/><text x="2.4791%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (89 samples, 0.01%)</title><rect x="2.2291%" y="645" width="0.0125%" height="15" fill="rgb(227,165,31)" fg:x="15817" fg:w="89"/><text x="2.4791%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (89 samples, 0.01%)</title><rect x="2.2291%" y="629" width="0.0125%" height="15" fill="rgb(228,167,24)" fg:x="15817" fg:w="89"/><text x="2.4791%" y="639.50"></text></g><g><title>rg::args::ArgMatches::threads (15,611 samples, 2.20%)</title><rect x="0.0485%" y="725" width="2.2000%" height="15" fill="rgb(228,143,12)" fg:x="344" fg:w="15611"/><text x="0.2985%" y="735.50">r..</text></g><g><title>rg::args::Args::command (15,868 samples, 2.24%)</title><rect x="0.0131%" y="741" width="2.2363%" height="15" fill="rgb(249,149,8)" fg:x="93" fg:w="15868"/><text x="0.2631%" y="751.50">r..</text></g><g><title>rg::args::ArgMatches::color_choice (82 samples, 0.01%)</title><rect x="2.2506%" y="709" width="0.0116%" height="15" fill="rgb(243,35,44)" fg:x="15970" fg:w="82"/><text x="2.5006%" y="719.50"></text></g><g><title>hashbrown::map::make_hash (89 samples, 0.01%)</title><rect x="2.2660%" y="581" width="0.0125%" height="15" fill="rgb(246,89,9)" fg:x="16079" fg:w="89"/><text x="2.5160%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (89 samples, 0.01%)</title><rect x="2.2660%" y="565" width="0.0125%" height="15" fill="rgb(233,213,13)" fg:x="16079" fg:w="89"/><text x="2.5160%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (80 samples, 0.01%)</title><rect x="2.2785%" y="581" width="0.0113%" height="15" fill="rgb(233,141,41)" fg:x="16168" fg:w="80"/><text x="2.5285%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (78 samples, 0.01%)</title><rect x="2.2788%" y="565" width="0.0110%" height="15" fill="rgb(239,167,4)" fg:x="16170" fg:w="78"/><text x="2.5288%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (75 samples, 0.01%)</title><rect x="2.2793%" y="549" width="0.0106%" height="15" fill="rgb(209,217,16)" fg:x="16173" fg:w="75"/><text x="2.5293%" y="559.50"></text></g><g><title>clap::args::arg_matches::ArgMatches::value_of_lossy (179 samples, 0.03%)</title><rect x="2.2647%" y="645" width="0.0252%" height="15" fill="rgb(219,88,35)" fg:x="16070" fg:w="179"/><text x="2.5147%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (176 samples, 0.02%)</title><rect x="2.2652%" y="629" width="0.0248%" height="15" fill="rgb(220,193,23)" fg:x="16073" fg:w="176"/><text x="2.5152%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (174 samples, 0.02%)</title><rect x="2.2654%" y="613" width="0.0245%" height="15" fill="rgb(230,90,52)" fg:x="16075" fg:w="174"/><text x="2.5154%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (172 samples, 0.02%)</title><rect x="2.2657%" y="597" width="0.0242%" height="15" fill="rgb(252,106,19)" fg:x="16077" fg:w="172"/><text x="2.5157%" y="607.50"></text></g><g><title>rg::args::ArgMatches::contexts (187 samples, 0.03%)</title><rect x="2.2637%" y="693" width="0.0264%" height="15" fill="rgb(206,74,20)" fg:x="16063" fg:w="187"/><text x="2.5137%" y="703.50"></text></g><g><title>rg::args::ArgMatches::usize_of (183 samples, 0.03%)</title><rect x="2.2643%" y="677" width="0.0258%" height="15" fill="rgb(230,138,44)" fg:x="16067" fg:w="183"/><text x="2.5143%" y="687.50"></text></g><g><title>rg::args::ArgMatches::value_of_lossy (182 samples, 0.03%)</title><rect x="2.2645%" y="661" width="0.0256%" height="15" fill="rgb(235,182,43)" fg:x="16068" fg:w="182"/><text x="2.5145%" y="671.50"></text></g><g><title>rg::args::ArgMatches::heading (109 samples, 0.02%)</title><rect x="2.2901%" y="693" width="0.0154%" height="15" fill="rgb(242,16,51)" fg:x="16250" fg:w="109"/><text x="2.5401%" y="703.50"></text></g><g><title>rg::args::ArgMatches::is_present (105 samples, 0.01%)</title><rect x="2.2907%" y="677" width="0.0148%" height="15" fill="rgb(248,9,4)" fg:x="16254" fg:w="105"/><text x="2.5407%" y="687.50"></text></g><g><title>clap::args::arg_matches::ArgMatches::is_present (105 samples, 0.01%)</title><rect x="2.2907%" y="661" width="0.0148%" height="15" fill="rgb(210,31,22)" fg:x="16254" fg:w="105"/><text x="2.5407%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (102 samples, 0.01%)</title><rect x="2.2911%" y="645" width="0.0144%" height="15" fill="rgb(239,54,39)" fg:x="16257" fg:w="102"/><text x="2.5411%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (101 samples, 0.01%)</title><rect x="2.2912%" y="629" width="0.0142%" height="15" fill="rgb(230,99,41)" fg:x="16258" fg:w="101"/><text x="2.5412%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (101 samples, 0.01%)</title><rect x="2.2912%" y="613" width="0.0142%" height="15" fill="rgb(253,106,12)" fg:x="16258" fg:w="101"/><text x="2.5412%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (80 samples, 0.01%)</title><rect x="2.3074%" y="581" width="0.0113%" height="15" fill="rgb(213,46,41)" fg:x="16373" fg:w="80"/><text x="2.5574%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (79 samples, 0.01%)</title><rect x="2.3076%" y="565" width="0.0111%" height="15" fill="rgb(215,133,35)" fg:x="16374" fg:w="79"/><text x="2.5576%" y="575.50"></text></g><g><title>rg::args::ArgMatches::counts (171 samples, 0.02%)</title><rect x="2.3057%" y="677" width="0.0241%" height="15" fill="rgb(213,28,5)" fg:x="16361" fg:w="171"/><text x="2.5557%" y="687.50"></text></g><g><title>rg::args::ArgMatches::is_present (171 samples, 0.02%)</title><rect x="2.3057%" y="661" width="0.0241%" height="15" fill="rgb(215,77,49)" fg:x="16361" fg:w="171"/><text x="2.5557%" y="671.50"></text></g><g><title>clap::args::arg_matches::ArgMatches::is_present (171 samples, 0.02%)</title><rect x="2.3057%" y="645" width="0.0241%" height="15" fill="rgb(248,100,22)" fg:x="16361" fg:w="171"/><text x="2.5557%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (166 samples, 0.02%)</title><rect x="2.3065%" y="629" width="0.0234%" height="15" fill="rgb(208,67,9)" fg:x="16366" fg:w="166"/><text x="2.5565%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (165 samples, 0.02%)</title><rect x="2.3066%" y="613" width="0.0233%" height="15" fill="rgb(219,133,21)" fg:x="16367" fg:w="165"/><text x="2.5566%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (164 samples, 0.02%)</title><rect x="2.3067%" y="597" width="0.0231%" height="15" fill="rgb(246,46,29)" fg:x="16368" fg:w="164"/><text x="2.5567%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (79 samples, 0.01%)</title><rect x="2.3187%" y="581" width="0.0111%" height="15" fill="rgb(246,185,52)" fg:x="16453" fg:w="79"/><text x="2.5687%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (77 samples, 0.01%)</title><rect x="2.3190%" y="565" width="0.0109%" height="15" fill="rgb(252,136,11)" fg:x="16455" fg:w="77"/><text x="2.5690%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (77 samples, 0.01%)</title><rect x="2.3190%" y="549" width="0.0109%" height="15" fill="rgb(219,138,53)" fg:x="16455" fg:w="77"/><text x="2.5690%" y="559.50"></text></g><g><title>hashbrown::map::make_hash (100 samples, 0.01%)</title><rect x="2.3310%" y="597" width="0.0141%" height="15" fill="rgb(211,51,23)" fg:x="16540" fg:w="100"/><text x="2.5810%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (100 samples, 0.01%)</title><rect x="2.3310%" y="581" width="0.0141%" height="15" fill="rgb(247,221,28)" fg:x="16540" fg:w="100"/><text x="2.5810%" y="591.50"></text></g><g><title>rg::args::ArgMatches::file_separator (670 samples, 0.09%)</title><rect x="2.2622%" y="709" width="0.0944%" height="15" fill="rgb(251,222,45)" fg:x="16052" fg:w="670"/><text x="2.5122%" y="719.50"></text></g><g><title>rg::args::ArgMatches::output_kind (363 samples, 0.05%)</title><rect x="2.3055%" y="693" width="0.0512%" height="15" fill="rgb(217,162,53)" fg:x="16359" fg:w="363"/><text x="2.5555%" y="703.50"></text></g><g><title>rg::args::ArgMatches::is_present (190 samples, 0.03%)</title><rect x="2.3298%" y="677" width="0.0268%" height="15" fill="rgb(229,93,14)" fg:x="16532" fg:w="190"/><text x="2.5798%" y="687.50"></text></g><g><title>clap::args::arg_matches::ArgMatches::is_present (189 samples, 0.03%)</title><rect x="2.3300%" y="661" width="0.0266%" height="15" fill="rgb(209,67,49)" fg:x="16533" fg:w="189"/><text x="2.5800%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (186 samples, 0.03%)</title><rect x="2.3304%" y="645" width="0.0262%" height="15" fill="rgb(213,87,29)" fg:x="16536" fg:w="186"/><text x="2.5804%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (185 samples, 0.03%)</title><rect x="2.3305%" y="629" width="0.0261%" height="15" fill="rgb(205,151,52)" fg:x="16537" fg:w="185"/><text x="2.5805%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (183 samples, 0.03%)</title><rect x="2.3308%" y="613" width="0.0258%" height="15" fill="rgb(253,215,39)" fg:x="16539" fg:w="183"/><text x="2.5808%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (82 samples, 0.01%)</title><rect x="2.3451%" y="597" width="0.0116%" height="15" fill="rgb(221,220,41)" fg:x="16640" fg:w="82"/><text x="2.5951%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (79 samples, 0.01%)</title><rect x="2.3455%" y="581" width="0.0111%" height="15" fill="rgb(218,133,21)" fg:x="16643" fg:w="79"/><text x="2.5955%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (76 samples, 0.01%)</title><rect x="2.3459%" y="565" width="0.0107%" height="15" fill="rgb(221,193,43)" fg:x="16646" fg:w="76"/><text x="2.5959%" y="575.50"></text></g><g><title>rg::args::Args::buffer_writer (769 samples, 0.11%)</title><rect x="2.2502%" y="725" width="0.1084%" height="15" fill="rgb(240,128,52)" fg:x="15967" fg:w="769"/><text x="2.5002%" y="735.50"></text></g><g><title>hashbrown::map::make_hash (88 samples, 0.01%)</title><rect x="2.3755%" y="581" width="0.0124%" height="15" fill="rgb(253,114,12)" fg:x="16856" fg:w="88"/><text x="2.6255%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (84 samples, 0.01%)</title><rect x="2.3761%" y="565" width="0.0118%" height="15" fill="rgb(215,223,47)" fg:x="16860" fg:w="84"/><text x="2.6261%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (81 samples, 0.01%)</title><rect x="2.3879%" y="581" width="0.0114%" height="15" fill="rgb(248,225,23)" fg:x="16944" fg:w="81"/><text x="2.6379%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (80 samples, 0.01%)</title><rect x="2.3880%" y="565" width="0.0113%" height="15" fill="rgb(250,108,0)" fg:x="16945" fg:w="80"/><text x="2.6380%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (76 samples, 0.01%)</title><rect x="2.3886%" y="549" width="0.0107%" height="15" fill="rgb(228,208,7)" fg:x="16949" fg:w="76"/><text x="2.6386%" y="559.50"></text></g><g><title>rg::args::ArgMatches::counts (184 samples, 0.03%)</title><rect x="2.3735%" y="677" width="0.0259%" height="15" fill="rgb(244,45,10)" fg:x="16842" fg:w="184"/><text x="2.6235%" y="687.50"></text></g><g><title>rg::args::ArgMatches::is_present (183 samples, 0.03%)</title><rect x="2.3737%" y="661" width="0.0258%" height="15" fill="rgb(207,125,25)" fg:x="16843" fg:w="183"/><text x="2.6237%" y="671.50"></text></g><g><title>clap::args::arg_matches::ArgMatches::is_present (183 samples, 0.03%)</title><rect x="2.3737%" y="645" width="0.0258%" height="15" fill="rgb(210,195,18)" fg:x="16843" fg:w="183"/><text x="2.6237%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (178 samples, 0.03%)</title><rect x="2.3744%" y="629" width="0.0251%" height="15" fill="rgb(249,80,12)" fg:x="16848" fg:w="178"/><text x="2.6244%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (177 samples, 0.02%)</title><rect x="2.3745%" y="613" width="0.0249%" height="15" fill="rgb(221,65,9)" fg:x="16849" fg:w="177"/><text x="2.6245%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (176 samples, 0.02%)</title><rect x="2.3747%" y="597" width="0.0248%" height="15" fill="rgb(235,49,36)" fg:x="16850" fg:w="176"/><text x="2.6247%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (120 samples, 0.02%)</title><rect x="2.4019%" y="597" width="0.0169%" height="15" fill="rgb(225,32,20)" fg:x="17043" fg:w="120"/><text x="2.6519%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (119 samples, 0.02%)</title><rect x="2.4020%" y="581" width="0.0168%" height="15" fill="rgb(215,141,46)" fg:x="17044" fg:w="119"/><text x="2.6520%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (87 samples, 0.01%)</title><rect x="2.4188%" y="597" width="0.0123%" height="15" fill="rgb(250,160,47)" fg:x="17163" fg:w="87"/><text x="2.6688%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (83 samples, 0.01%)</title><rect x="2.4193%" y="581" width="0.0117%" height="15" fill="rgb(216,222,40)" fg:x="17167" fg:w="83"/><text x="2.6693%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (81 samples, 0.01%)</title><rect x="2.4196%" y="565" width="0.0114%" height="15" fill="rgb(234,217,39)" fg:x="17169" fg:w="81"/><text x="2.6696%" y="575.50"></text></g><g><title>rg::args::ArgMatches::stats (469 samples, 0.07%)</title><rect x="2.3651%" y="709" width="0.0661%" height="15" fill="rgb(207,178,40)" fg:x="16782" fg:w="469"/><text x="2.6151%" y="719.50"></text></g><g><title>rg::args::ArgMatches::output_kind (416 samples, 0.06%)</title><rect x="2.3725%" y="693" width="0.0586%" height="15" fill="rgb(221,136,13)" fg:x="16835" fg:w="416"/><text x="2.6225%" y="703.50"></text></g><g><title>rg::args::ArgMatches::is_present (225 samples, 0.03%)</title><rect x="2.3995%" y="677" width="0.0317%" height="15" fill="rgb(249,199,10)" fg:x="17026" fg:w="225"/><text x="2.6495%" y="687.50"></text></g><g><title>clap::args::arg_matches::ArgMatches::is_present (223 samples, 0.03%)</title><rect x="2.3997%" y="661" width="0.0314%" height="15" fill="rgb(249,222,13)" fg:x="17028" fg:w="223"/><text x="2.6497%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (218 samples, 0.03%)</title><rect x="2.4005%" y="645" width="0.0307%" height="15" fill="rgb(244,185,38)" fg:x="17033" fg:w="218"/><text x="2.6505%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (218 samples, 0.03%)</title><rect x="2.4005%" y="629" width="0.0307%" height="15" fill="rgb(236,202,9)" fg:x="17033" fg:w="218"/><text x="2.6505%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (215 samples, 0.03%)</title><rect x="2.4009%" y="613" width="0.0303%" height="15" fill="rgb(250,229,37)" fg:x="17036" fg:w="215"/><text x="2.6509%" y="623.50"></text></g><g><title>rg::args::ArgMatches::is_present (150 samples, 0.02%)</title><rect x="2.4503%" y="693" width="0.0211%" height="15" fill="rgb(206,174,23)" fg:x="17387" fg:w="150"/><text x="2.7003%" y="703.50"></text></g><g><title>clap::args::arg_matches::ArgMatches::is_present (148 samples, 0.02%)</title><rect x="2.4506%" y="677" width="0.0209%" height="15" fill="rgb(211,33,43)" fg:x="17389" fg:w="148"/><text x="2.7006%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (147 samples, 0.02%)</title><rect x="2.4508%" y="661" width="0.0207%" height="15" fill="rgb(245,58,50)" fg:x="17390" fg:w="147"/><text x="2.7008%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (145 samples, 0.02%)</title><rect x="2.4510%" y="645" width="0.0204%" height="15" fill="rgb(244,68,36)" fg:x="17392" fg:w="145"/><text x="2.7010%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (145 samples, 0.02%)</title><rect x="2.4510%" y="629" width="0.0204%" height="15" fill="rgb(232,229,15)" fg:x="17392" fg:w="145"/><text x="2.7010%" y="639.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (241 samples, 0.03%)</title><rect x="2.6822%" y="597" width="0.0340%" height="15" fill="rgb(254,30,23)" fg:x="19032" fg:w="241"/><text x="2.9322%" y="607.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for usize&gt;::clone (99 samples, 0.01%)</title><rect x="2.7161%" y="597" width="0.0140%" height="15" fill="rgb(235,160,14)" fg:x="19273" fg:w="99"/><text x="2.9661%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (218 samples, 0.03%)</title><rect x="2.7301%" y="597" width="0.0307%" height="15" fill="rgb(212,155,44)" fg:x="19372" fg:w="218"/><text x="2.9801%" y="607.50"></text></g><g><title>core::ptr::read (362 samples, 0.05%)</title><rect x="2.8380%" y="581" width="0.0510%" height="15" fill="rgb(226,2,50)" fg:x="20138" fg:w="362"/><text x="3.0880%" y="591.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2,548 samples, 0.36%)</title><rect x="2.5549%" y="629" width="0.3591%" height="15" fill="rgb(234,177,6)" fg:x="18129" fg:w="2548"/><text x="2.8049%" y="639.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2,325 samples, 0.33%)</title><rect x="2.5863%" y="613" width="0.3277%" height="15" fill="rgb(217,24,9)" fg:x="18352" fg:w="2325"/><text x="2.8363%" y="623.50"></text></g><g><title>core::mem::replace (1,087 samples, 0.15%)</title><rect x="2.7608%" y="597" width="0.1532%" height="15" fill="rgb(220,13,46)" fg:x="19590" fg:w="1087"/><text x="3.0108%" y="607.50"></text></g><g><title>core::ptr::write (177 samples, 0.02%)</title><rect x="2.8891%" y="581" width="0.0249%" height="15" fill="rgb(239,221,27)" fg:x="20500" fg:w="177"/><text x="3.1391%" y="591.50"></text></g><g><title>num_cpus::get (5,079 samples, 0.72%)</title><rect x="2.4726%" y="677" width="0.7158%" height="15" fill="rgb(222,198,25)" fg:x="17545" fg:w="5079"/><text x="2.7226%" y="687.50"></text></g><g><title>num_cpus::linux::get_num_cpus (5,079 samples, 0.72%)</title><rect x="2.4726%" y="661" width="0.7158%" height="15" fill="rgb(211,99,13)" fg:x="17545" fg:w="5079"/><text x="2.7226%" y="671.50"></text></g><g><title>num_cpus::linux::logical_cpus (5,075 samples, 0.72%)</title><rect x="2.4732%" y="645" width="0.7152%" height="15" fill="rgb(232,111,31)" fg:x="17549" fg:w="5075"/><text x="2.7232%" y="655.50"></text></g><g><title>libc::unix::linux_like::linux::CPU_ISSET (1,945 samples, 0.27%)</title><rect x="2.9143%" y="629" width="0.2741%" height="15" fill="rgb(245,82,37)" fg:x="20679" fg:w="1945"/><text x="3.1643%" y="639.50"></text></g><g><title>core::mem::size_of_val (173 samples, 0.02%)</title><rect x="3.1640%" y="613" width="0.0244%" height="15" fill="rgb(227,149,46)" fg:x="22451" fg:w="173"/><text x="3.4140%" y="623.50"></text></g><g><title>clap::args::arg_matches::ArgMatches::value_of_lossy (85 samples, 0.01%)</title><rect x="3.1953%" y="645" width="0.0120%" height="15" fill="rgb(218,36,50)" fg:x="22673" fg:w="85"/><text x="3.4453%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (79 samples, 0.01%)</title><rect x="3.1961%" y="629" width="0.0111%" height="15" fill="rgb(226,80,48)" fg:x="22679" fg:w="79"/><text x="3.4461%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (79 samples, 0.01%)</title><rect x="3.1961%" y="613" width="0.0111%" height="15" fill="rgb(238,224,15)" fg:x="22679" fg:w="79"/><text x="3.4461%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (78 samples, 0.01%)</title><rect x="3.1963%" y="597" width="0.0110%" height="15" fill="rgb(241,136,10)" fg:x="22680" fg:w="78"/><text x="3.4463%" y="607.50"></text></g><g><title>rg::args::ArgMatches::sort_by (135 samples, 0.02%)</title><rect x="3.1884%" y="677" width="0.0190%" height="15" fill="rgb(208,32,45)" fg:x="22624" fg:w="135"/><text x="3.4384%" y="687.50"></text></g><g><title>rg::args::ArgMatches::value_of_lossy (87 samples, 0.01%)</title><rect x="3.1952%" y="661" width="0.0123%" height="15" fill="rgb(207,135,9)" fg:x="22672" fg:w="87"/><text x="3.4452%" y="671.50"></text></g><g><title>rg::args::ArgMatches::threads (5,273 samples, 0.74%)</title><rect x="2.4715%" y="693" width="0.7431%" height="15" fill="rgb(206,86,44)" fg:x="17537" fg:w="5273"/><text x="2.7215%" y="703.50"></text></g><g><title>rg::args::Args::stats (6,042 samples, 0.85%)</title><rect x="2.3651%" y="725" width="0.8515%" height="15" fill="rgb(245,177,15)" fg:x="16782" fg:w="6042"/><text x="2.6151%" y="735.50"></text></g><g><title>rg::args::Args::command (5,573 samples, 0.79%)</title><rect x="2.4312%" y="709" width="0.7854%" height="15" fill="rgb(206,64,50)" fg:x="17251" fg:w="5573"/><text x="2.6812%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (88 samples, 0.01%)</title><rect x="3.2342%" y="581" width="0.0124%" height="15" fill="rgb(234,36,40)" fg:x="22949" fg:w="88"/><text x="3.4842%" y="591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[I]&gt; as core::iter::traits::collect::FromIterator&lt;I&gt;&gt;::from_iter (88 samples, 0.01%)</title><rect x="3.2342%" y="565" width="0.0124%" height="15" fill="rgb(213,64,8)" fg:x="22949" fg:w="88"/><text x="3.4842%" y="575.50"></text></g><g><title>&lt;thread_local::ThreadLocal&lt;T&gt; as core::default::Default&gt;::default (134 samples, 0.02%)</title><rect x="3.2278%" y="645" width="0.0189%" height="15" fill="rgb(210,75,36)" fg:x="22904" fg:w="134"/><text x="3.4778%" y="655.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::new (134 samples, 0.02%)</title><rect x="3.2278%" y="629" width="0.0189%" height="15" fill="rgb(229,88,21)" fg:x="22904" fg:w="134"/><text x="3.4778%" y="639.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::with_capacity (134 samples, 0.02%)</title><rect x="3.2278%" y="613" width="0.0189%" height="15" fill="rgb(252,204,47)" fg:x="22904" fg:w="134"/><text x="3.4778%" y="623.50"></text></g><g><title>thread_local::allocate_bucket (90 samples, 0.01%)</title><rect x="3.2340%" y="597" width="0.0127%" height="15" fill="rgb(208,77,27)" fg:x="22948" fg:w="90"/><text x="3.4840%" y="607.50"></text></g><g><title>ignore::dir::IgnoreBuilder::new (191 samples, 0.03%)</title><rect x="3.2231%" y="677" width="0.0269%" height="15" fill="rgb(221,76,26)" fg:x="22870" fg:w="191"/><text x="3.4731%" y="687.50"></text></g><g><title>ignore::types::Types::empty (157 samples, 0.02%)</title><rect x="3.2278%" y="661" width="0.0221%" height="15" fill="rgb(225,139,18)" fg:x="22904" fg:w="157"/><text x="3.4778%" y="671.50"></text></g><g><title>ignore::walk::WalkBuilder::new (214 samples, 0.03%)</title><rect x="3.2204%" y="693" width="0.0302%" height="15" fill="rgb(230,137,11)" fg:x="22851" fg:w="214"/><text x="3.4704%" y="703.50"></text></g><g><title>hashbrown::map::make_hash (82 samples, 0.01%)</title><rect x="3.2665%" y="613" width="0.0116%" height="15" fill="rgb(212,28,1)" fg:x="23178" fg:w="82"/><text x="3.5165%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (82 samples, 0.01%)</title><rect x="3.2665%" y="597" width="0.0116%" height="15" fill="rgb(248,164,17)" fg:x="23178" fg:w="82"/><text x="3.5165%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (77 samples, 0.01%)</title><rect x="3.2780%" y="613" width="0.0109%" height="15" fill="rgb(222,171,42)" fg:x="23260" fg:w="77"/><text x="3.5280%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (76 samples, 0.01%)</title><rect x="3.2782%" y="597" width="0.0107%" height="15" fill="rgb(243,84,45)" fg:x="23261" fg:w="76"/><text x="3.5282%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (72 samples, 0.01%)</title><rect x="3.2787%" y="581" width="0.0101%" height="15" fill="rgb(252,49,23)" fg:x="23265" fg:w="72"/><text x="3.5287%" y="591.50"></text></g><g><title>rg::args::ArgMatches::is_present (171 samples, 0.02%)</title><rect x="3.2649%" y="693" width="0.0241%" height="15" fill="rgb(215,19,7)" fg:x="23167" fg:w="171"/><text x="3.5149%" y="703.50"></text></g><g><title>clap::args::arg_matches::ArgMatches::is_present (170 samples, 0.02%)</title><rect x="3.2651%" y="677" width="0.0240%" height="15" fill="rgb(238,81,41)" fg:x="23168" fg:w="170"/><text x="3.5151%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (168 samples, 0.02%)</title><rect x="3.2653%" y="661" width="0.0237%" height="15" fill="rgb(210,199,37)" fg:x="23170" fg:w="168"/><text x="3.5153%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (165 samples, 0.02%)</title><rect x="3.2658%" y="645" width="0.0233%" height="15" fill="rgb(244,192,49)" fg:x="23173" fg:w="165"/><text x="3.5158%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (164 samples, 0.02%)</title><rect x="3.2659%" y="629" width="0.0231%" height="15" fill="rgb(226,211,11)" fg:x="23174" fg:w="164"/><text x="3.5159%" y="639.50"></text></g><g><title>rg::args::ArgMatches::overrides (94 samples, 0.01%)</title><rect x="3.3018%" y="693" width="0.0132%" height="15" fill="rgb(236,162,54)" fg:x="23429" fg:w="94"/><text x="3.5518%" y="703.50"></text></g><g><title>rg::args::ArgMatches::values_of_lossy_vec (82 samples, 0.01%)</title><rect x="3.3035%" y="677" width="0.0116%" height="15" fill="rgb(220,229,9)" fg:x="23441" fg:w="82"/><text x="3.5535%" y="687.50"></text></g><g><title>rg::args::ArgMatches::values_of_lossy (76 samples, 0.01%)</title><rect x="3.3044%" y="661" width="0.0107%" height="15" fill="rgb(250,87,22)" fg:x="23447" fg:w="76"/><text x="3.5544%" y="671.50"></text></g><g><title>clap::args::arg_matches::ArgMatches::values_of_lossy (76 samples, 0.01%)</title><rect x="3.3044%" y="645" width="0.0107%" height="15" fill="rgb(239,43,17)" fg:x="23447" fg:w="76"/><text x="3.5544%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (76 samples, 0.01%)</title><rect x="3.3044%" y="629" width="0.0107%" height="15" fill="rgb(231,177,25)" fg:x="23447" fg:w="76"/><text x="3.5544%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (76 samples, 0.01%)</title><rect x="3.3044%" y="613" width="0.0107%" height="15" fill="rgb(219,179,1)" fg:x="23447" fg:w="76"/><text x="3.5544%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (75 samples, 0.01%)</title><rect x="3.3045%" y="597" width="0.0106%" height="15" fill="rgb(238,219,53)" fg:x="23448" fg:w="75"/><text x="3.5545%" y="607.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (204 samples, 0.03%)</title><rect x="3.5246%" y="597" width="0.0287%" height="15" fill="rgb(232,167,36)" fg:x="25010" fg:w="204"/><text x="3.7746%" y="607.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for usize&gt;::clone (122 samples, 0.02%)</title><rect x="3.5534%" y="597" width="0.0172%" height="15" fill="rgb(244,19,51)" fg:x="25214" fg:w="122"/><text x="3.8034%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (219 samples, 0.03%)</title><rect x="3.5706%" y="597" width="0.0309%" height="15" fill="rgb(224,6,22)" fg:x="25336" fg:w="219"/><text x="3.8206%" y="607.50"></text></g><g><title>core::ptr::read (347 samples, 0.05%)</title><rect x="3.6747%" y="581" width="0.0489%" height="15" fill="rgb(224,145,5)" fg:x="26075" fg:w="347"/><text x="3.9247%" y="591.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2,466 samples, 0.35%)</title><rect x="3.3977%" y="629" width="0.3475%" height="15" fill="rgb(234,130,49)" fg:x="24109" fg:w="2466"/><text x="3.6477%" y="639.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2,259 samples, 0.32%)</title><rect x="3.4268%" y="613" width="0.3184%" height="15" fill="rgb(254,6,2)" fg:x="24316" fg:w="2259"/><text x="3.6768%" y="623.50"></text></g><g><title>core::mem::replace (1,020 samples, 0.14%)</title><rect x="3.6015%" y="597" width="0.1437%" height="15" fill="rgb(208,96,46)" fg:x="25555" fg:w="1020"/><text x="3.8515%" y="607.50"></text></g><g><title>core::ptr::write (153 samples, 0.02%)</title><rect x="3.7236%" y="581" width="0.0216%" height="15" fill="rgb(239,3,39)" fg:x="26422" fg:w="153"/><text x="3.9736%" y="591.50"></text></g><g><title>num_cpus::get (4,886 samples, 0.69%)</title><rect x="3.3161%" y="677" width="0.6886%" height="15" fill="rgb(233,210,1)" fg:x="23530" fg:w="4886"/><text x="3.5661%" y="687.50"></text></g><g><title>num_cpus::linux::get_num_cpus (4,886 samples, 0.69%)</title><rect x="3.3161%" y="661" width="0.6886%" height="15" fill="rgb(244,137,37)" fg:x="23530" fg:w="4886"/><text x="3.5661%" y="671.50"></text></g><g><title>num_cpus::linux::logical_cpus (4,884 samples, 0.69%)</title><rect x="3.3164%" y="645" width="0.6883%" height="15" fill="rgb(240,136,2)" fg:x="23532" fg:w="4884"/><text x="3.5664%" y="655.50"></text></g><g><title>libc::unix::linux_like::linux::CPU_ISSET (1,836 samples, 0.26%)</title><rect x="3.7459%" y="629" width="0.2587%" height="15" fill="rgb(239,18,37)" fg:x="26580" fg:w="1836"/><text x="3.9959%" y="639.50"></text></g><g><title>core::mem::size_of_val (150 samples, 0.02%)</title><rect x="3.9835%" y="613" width="0.0211%" height="15" fill="rgb(218,185,22)" fg:x="28266" fg:w="150"/><text x="4.2335%" y="623.50"></text></g><g><title>clap::args::arg_matches::ArgMatches::value_of_lossy (94 samples, 0.01%)</title><rect x="4.0106%" y="645" width="0.0132%" height="15" fill="rgb(225,218,4)" fg:x="28458" fg:w="94"/><text x="4.2606%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (92 samples, 0.01%)</title><rect x="4.0109%" y="629" width="0.0130%" height="15" fill="rgb(230,182,32)" fg:x="28460" fg:w="92"/><text x="4.2609%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (91 samples, 0.01%)</title><rect x="4.0110%" y="613" width="0.0128%" height="15" fill="rgb(242,56,43)" fg:x="28461" fg:w="91"/><text x="4.2610%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (90 samples, 0.01%)</title><rect x="4.0111%" y="597" width="0.0127%" height="15" fill="rgb(233,99,24)" fg:x="28462" fg:w="90"/><text x="4.2611%" y="607.50"></text></g><g><title>rg::args::ArgMatches::sort_by (140 samples, 0.02%)</title><rect x="4.0047%" y="677" width="0.0197%" height="15" fill="rgb(234,209,42)" fg:x="28416" fg:w="140"/><text x="4.2547%" y="687.50"></text></g><g><title>rg::args::ArgMatches::value_of_lossy (98 samples, 0.01%)</title><rect x="4.0106%" y="661" width="0.0138%" height="15" fill="rgb(227,7,12)" fg:x="28458" fg:w="98"/><text x="4.2606%" y="671.50"></text></g><g><title>rg::args::ArgMatches::threads (5,083 samples, 0.72%)</title><rect x="3.3151%" y="693" width="0.7163%" height="15" fill="rgb(245,203,43)" fg:x="23523" fg:w="5083"/><text x="3.5651%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (78 samples, 0.01%)</title><rect x="4.0465%" y="469" width="0.0110%" height="15" fill="rgb(238,205,33)" fg:x="28713" fg:w="78"/><text x="4.2965%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (88 samples, 0.01%)</title><rect x="4.0805%" y="341" width="0.0124%" height="15" fill="rgb(231,56,7)" fg:x="28954" fg:w="88"/><text x="4.3305%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (90 samples, 0.01%)</title><rect x="4.0803%" y="357" width="0.0127%" height="15" fill="rgb(244,186,29)" fg:x="28953" fg:w="90"/><text x="4.3303%" y="367.50"></text></g><g><title>regex::compile::Compiler::c_empty_look (124 samples, 0.02%)</title><rect x="4.0772%" y="405" width="0.0175%" height="15" fill="rgb(234,111,31)" fg:x="28931" fg:w="124"/><text x="4.3272%" y="415.50"></text></g><g><title>regex::compile::Compiler::push_hole (113 samples, 0.02%)</title><rect x="4.0788%" y="389" width="0.0159%" height="15" fill="rgb(241,149,10)" fg:x="28942" fg:w="113"/><text x="4.3288%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (110 samples, 0.02%)</title><rect x="4.0792%" y="373" width="0.0155%" height="15" fill="rgb(249,206,44)" fg:x="28945" fg:w="110"/><text x="4.3292%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (390 samples, 0.05%)</title><rect x="4.3027%" y="197" width="0.0550%" height="15" fill="rgb(251,153,30)" fg:x="30531" fg:w="390"/><text x="4.5527%" y="207.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (210 samples, 0.03%)</title><rect x="4.3281%" y="181" width="0.0296%" height="15" fill="rgb(239,152,38)" fg:x="30711" fg:w="210"/><text x="4.5781%" y="191.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (390 samples, 0.05%)</title><rect x="4.3577%" y="197" width="0.0550%" height="15" fill="rgb(249,139,47)" fg:x="30921" fg:w="390"/><text x="4.6077%" y="207.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (206 samples, 0.03%)</title><rect x="4.3836%" y="181" width="0.0290%" height="15" fill="rgb(244,64,35)" fg:x="31105" fg:w="206"/><text x="4.6336%" y="191.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (286 samples, 0.04%)</title><rect x="4.4126%" y="197" width="0.0403%" height="15" fill="rgb(216,46,15)" fg:x="31311" fg:w="286"/><text x="4.6626%" y="207.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,141 samples, 0.30%)</title><rect x="4.1612%" y="213" width="0.3017%" height="15" fill="rgb(250,74,19)" fg:x="29527" fg:w="2141"/><text x="4.4112%" y="223.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (71 samples, 0.01%)</title><rect x="4.4529%" y="197" width="0.0100%" height="15" fill="rgb(249,42,33)" fg:x="31597" fg:w="71"/><text x="4.7029%" y="207.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (84 samples, 0.01%)</title><rect x="4.5966%" y="165" width="0.0118%" height="15" fill="rgb(242,149,17)" fg:x="32616" fg:w="84"/><text x="4.8466%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (759 samples, 0.11%)</title><rect x="4.5226%" y="197" width="0.1070%" height="15" fill="rgb(244,29,21)" fg:x="32091" fg:w="759"/><text x="4.7726%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (586 samples, 0.08%)</title><rect x="4.5469%" y="181" width="0.0826%" height="15" fill="rgb(220,130,37)" fg:x="32264" fg:w="586"/><text x="4.7969%" y="191.50"></text></g><g><title>core::ptr::write (150 samples, 0.02%)</title><rect x="4.6084%" y="165" width="0.0211%" height="15" fill="rgb(211,67,2)" fg:x="32700" fg:w="150"/><text x="4.8584%" y="175.50"></text></g><g><title>regex_syntax::hir::ClassUnicodeRange::end (79 samples, 0.01%)</title><rect x="4.6734%" y="181" width="0.0111%" height="15" fill="rgb(235,68,52)" fg:x="33161" fg:w="79"/><text x="4.9234%" y="191.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,656 samples, 0.23%)</title><rect x="4.4630%" y="213" width="0.2334%" height="15" fill="rgb(246,142,3)" fg:x="31668" fg:w="1656"/><text x="4.7130%" y="223.50"></text></g><g><title>regex::compile::Compiler::c_class::{{closure}} (474 samples, 0.07%)</title><rect x="4.6295%" y="197" width="0.0668%" height="15" fill="rgb(241,25,7)" fg:x="32850" fg:w="474"/><text x="4.8795%" y="207.50"></text></g><g><title>regex_syntax::hir::ClassUnicodeRange::start (84 samples, 0.01%)</title><rect x="4.6845%" y="181" width="0.0118%" height="15" fill="rgb(242,119,39)" fg:x="33240" fg:w="84"/><text x="4.9345%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4,246 samples, 0.60%)</title><rect x="4.0981%" y="277" width="0.5984%" height="15" fill="rgb(241,98,45)" fg:x="29079" fg:w="4246"/><text x="4.3481%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4,242 samples, 0.60%)</title><rect x="4.0987%" y="261" width="0.5978%" height="15" fill="rgb(254,28,30)" fg:x="29083" fg:w="4242"/><text x="4.3487%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,242 samples, 0.60%)</title><rect x="4.0987%" y="245" width="0.5978%" height="15" fill="rgb(241,142,54)" fg:x="29083" fg:w="4242"/><text x="4.3487%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4,242 samples, 0.60%)</title><rect x="4.0987%" y="229" width="0.5978%" height="15" fill="rgb(222,85,15)" fg:x="29083" fg:w="4242"/><text x="4.3487%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4,260 samples, 0.60%)</title><rect x="4.0981%" y="341" width="0.6004%" height="15" fill="rgb(210,85,47)" fg:x="29079" fg:w="4260"/><text x="4.3481%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4,260 samples, 0.60%)</title><rect x="4.0981%" y="325" width="0.6004%" height="15" fill="rgb(224,206,25)" fg:x="29079" fg:w="4260"/><text x="4.3481%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,260 samples, 0.60%)</title><rect x="4.0981%" y="309" width="0.6004%" height="15" fill="rgb(243,201,19)" fg:x="29079" fg:w="4260"/><text x="4.3481%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4,260 samples, 0.60%)</title><rect x="4.0981%" y="293" width="0.6004%" height="15" fill="rgb(236,59,4)" fg:x="29079" fg:w="4260"/><text x="4.3481%" y="303.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (450 samples, 0.06%)</title><rect x="5.8353%" y="309" width="0.0634%" height="15" fill="rgb(254,179,45)" fg:x="41406" fg:w="450"/><text x="6.0853%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (716 samples, 0.10%)</title><rect x="6.1338%" y="293" width="0.1009%" height="15" fill="rgb(226,14,10)" fg:x="43524" fg:w="716"/><text x="6.3838%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (375 samples, 0.05%)</title><rect x="6.1819%" y="277" width="0.0528%" height="15" fill="rgb(244,27,41)" fg:x="43865" fg:w="375"/><text x="6.4319%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (683 samples, 0.10%)</title><rect x="6.2347%" y="293" width="0.0963%" height="15" fill="rgb(235,35,32)" fg:x="44240" fg:w="683"/><text x="6.4847%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (371 samples, 0.05%)</title><rect x="6.2787%" y="277" width="0.0523%" height="15" fill="rgb(218,68,31)" fg:x="44552" fg:w="371"/><text x="6.5287%" y="287.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (490 samples, 0.07%)</title><rect x="6.3310%" y="293" width="0.0691%" height="15" fill="rgb(207,120,37)" fg:x="44923" fg:w="490"/><text x="6.5810%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5,425 samples, 0.76%)</title><rect x="5.6572%" y="325" width="0.7645%" height="15" fill="rgb(227,98,0)" fg:x="40142" fg:w="5425"/><text x="5.9072%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,711 samples, 0.52%)</title><rect x="5.8987%" y="309" width="0.5230%" height="15" fill="rgb(207,7,3)" fg:x="41856" fg:w="3711"/><text x="6.1487%" y="319.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (154 samples, 0.02%)</title><rect x="6.4000%" y="293" width="0.0217%" height="15" fill="rgb(206,98,19)" fg:x="45413" fg:w="154"/><text x="6.6500%" y="303.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (469 samples, 0.07%)</title><rect x="9.0129%" y="277" width="0.0661%" height="15" fill="rgb(217,5,26)" fg:x="63953" fg:w="469"/><text x="9.2629%" y="287.50"></text></g><g><title>&lt;unknown @ 0x5555556170a0&gt; (173 samples, 0.02%)</title><rect x="9.0790%" y="277" width="0.0244%" height="15" fill="rgb(235,190,38)" fg:x="64422" fg:w="173"/><text x="9.3290%" y="287.50"></text></g><g><title>&lt;unknown @ 0x7ffff7dbdb64&gt; (82 samples, 0.01%)</title><rect x="9.1132%" y="277" width="0.0116%" height="15" fill="rgb(247,86,24)" fg:x="64665" fg:w="82"/><text x="9.3632%" y="287.50"></text></g><g><title>&lt;unknown @ 0x7ffff7dbdc28&gt; (71 samples, 0.01%)</title><rect x="9.1811%" y="277" width="0.0100%" height="15" fill="rgb(205,101,16)" fg:x="65147" fg:w="71"/><text x="9.4311%" y="287.50"></text></g><g><title>&lt;unknown @ 0x7ffff7dbdc59&gt; (75 samples, 0.01%)</title><rect x="9.2120%" y="277" width="0.0106%" height="15" fill="rgb(246,168,33)" fg:x="65366" fg:w="75"/><text x="9.4620%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (443 samples, 0.06%)</title><rect x="9.5323%" y="245" width="0.0624%" height="15" fill="rgb(231,114,1)" fg:x="67639" fg:w="443"/><text x="9.7823%" y="255.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (169 samples, 0.02%)</title><rect x="9.5709%" y="229" width="0.0238%" height="15" fill="rgb(207,184,53)" fg:x="67913" fg:w="169"/><text x="9.8209%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1,659 samples, 0.23%)</title><rect x="9.4775%" y="261" width="0.2338%" height="15" fill="rgb(224,95,51)" fg:x="67250" fg:w="1659"/><text x="9.7275%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (827 samples, 0.12%)</title><rect x="9.5948%" y="245" width="0.1165%" height="15" fill="rgb(212,188,45)" fg:x="68082" fg:w="827"/><text x="9.8448%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (386 samples, 0.05%)</title><rect x="9.6569%" y="229" width="0.0544%" height="15" fill="rgb(223,154,38)" fg:x="68523" fg:w="386"/><text x="9.9069%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (150 samples, 0.02%)</title><rect x="9.7113%" y="261" width="0.0211%" height="15" fill="rgb(251,22,52)" fg:x="68909" fg:w="150"/><text x="9.9613%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (4,137 samples, 0.58%)</title><rect x="9.2457%" y="277" width="0.5830%" height="15" fill="rgb(229,209,22)" fg:x="65605" fg:w="4137"/><text x="9.4957%" y="287.50"></text></g><g><title>core::ptr::read (683 samples, 0.10%)</title><rect x="9.7324%" y="261" width="0.0963%" height="15" fill="rgb(234,138,34)" fg:x="69059" fg:w="683"/><text x="9.9824%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::as_ptr (395 samples, 0.06%)</title><rect x="10.7294%" y="197" width="0.0557%" height="15" fill="rgb(212,95,11)" fg:x="76133" fg:w="395"/><text x="10.9794%" y="207.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (327 samples, 0.05%)</title><rect x="10.9268%" y="181" width="0.0461%" height="15" fill="rgb(240,179,47)" fg:x="77534" fg:w="327"/><text x="11.1768%" y="191.50"></text></g><g><title>core::array::&lt;impl core::ops::index::Index&lt;I&gt; for [T (8,875 samples, 1.25%)</title><rect x="9.8287%" y="277" width="1.2507%" height="15" fill="rgb(240,163,11)" fg:x="69742" fg:w="8875"/><text x="10.0787%" y="287.50"></text></g><g><title> N]&gt;::index (8,875 samples, 1.25%)</title><rect x="9.8287%" y="261" width="1.2507%" height="15" fill="rgb(236,37,12)" fg:x="69742" fg:w="8875"/><text x="10.0787%" y="271.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (7,827 samples, 1.10%)</title><rect x="9.9764%" y="245" width="1.1031%" height="15" fill="rgb(232,164,16)" fg:x="70790" fg:w="7827"/><text x="10.2264%" y="255.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (6,640 samples, 0.94%)</title><rect x="10.1437%" y="229" width="0.9358%" height="15" fill="rgb(244,205,15)" fg:x="71977" fg:w="6640"/><text x="10.3937%" y="239.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (4,679 samples, 0.66%)</title><rect x="10.4200%" y="213" width="0.6594%" height="15" fill="rgb(223,117,47)" fg:x="73938" fg:w="4679"/><text x="10.6700%" y="223.50"></text></g><g><title>core::ptr::slice_from_raw_parts (2,089 samples, 0.29%)</title><rect x="10.7850%" y="197" width="0.2944%" height="15" fill="rgb(244,107,35)" fg:x="76528" fg:w="2089"/><text x="11.0350%" y="207.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (756 samples, 0.11%)</title><rect x="10.9729%" y="181" width="0.1065%" height="15" fill="rgb(205,140,8)" fg:x="77861" fg:w="756"/><text x="11.2229%" y="191.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (2,414 samples, 0.34%)</title><rect x="12.6440%" y="245" width="0.3402%" height="15" fill="rgb(228,84,46)" fg:x="89719" fg:w="2414"/><text x="12.8940%" y="255.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for usize&gt;::clone (1,077 samples, 0.15%)</title><rect x="12.9843%" y="245" width="0.1518%" height="15" fill="rgb(254,188,9)" fg:x="92133" fg:w="1077"/><text x="13.2343%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2,604 samples, 0.37%)</title><rect x="13.1360%" y="245" width="0.3670%" height="15" fill="rgb(206,112,54)" fg:x="93210" fg:w="2604"/><text x="13.3860%" y="255.50"></text></g><g><title>core::ptr::read (3,288 samples, 0.46%)</title><rect x="14.2060%" y="229" width="0.4634%" height="15" fill="rgb(216,84,49)" fg:x="100802" fg:w="3288"/><text x="14.4560%" y="239.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (26,933 samples, 3.80%)</title><rect x="11.0794%" y="277" width="3.7957%" height="15" fill="rgb(214,194,35)" fg:x="78617" fg:w="26933"/><text x="11.3294%" y="287.50">core..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (24,239 samples, 3.42%)</title><rect x="11.4591%" y="261" width="3.4160%" height="15" fill="rgb(249,28,3)" fg:x="81311" fg:w="24239"/><text x="11.7091%" y="271.50">&lt;co..</text></g><g><title>core::mem::replace (9,736 samples, 1.37%)</title><rect x="13.5030%" y="245" width="1.3721%" height="15" fill="rgb(222,56,52)" fg:x="95814" fg:w="9736"/><text x="13.7530%" y="255.50"></text></g><g><title>core::ptr::write (1,460 samples, 0.21%)</title><rect x="14.6693%" y="229" width="0.2058%" height="15" fill="rgb(245,217,50)" fg:x="104090" fg:w="1460"/><text x="14.9193%" y="239.50"></text></g><g><title>regex_syntax::utf8::ScalarRange::is_ascii (1,017 samples, 0.14%)</title><rect x="14.9769%" y="261" width="0.1433%" height="15" fill="rgb(213,201,24)" fg:x="106272" fg:w="1017"/><text x="15.2269%" y="271.50"></text></g><g><title>regex_syntax::utf8::ScalarRange::is_valid (294 samples, 0.04%)</title><rect x="15.0787%" y="245" width="0.0414%" height="15" fill="rgb(248,116,28)" fg:x="106995" fg:w="294"/><text x="15.3287%" y="255.50"></text></g><g><title>regex_syntax::utf8::ScalarRange::as_ascii (1,740 samples, 0.25%)</title><rect x="14.8751%" y="277" width="0.2452%" height="15" fill="rgb(219,72,43)" fg:x="105550" fg:w="1740"/><text x="15.1251%" y="287.50"></text></g><g><title>core::char::convert::from_u32 (3,424 samples, 0.48%)</title><rect x="15.4656%" y="261" width="0.4825%" height="15" fill="rgb(209,138,14)" fg:x="109740" fg:w="3424"/><text x="15.7156%" y="271.50"></text></g><g><title>core::char::convert::char_try_from_u32 (2,272 samples, 0.32%)</title><rect x="15.6279%" y="245" width="0.3202%" height="15" fill="rgb(222,18,33)" fg:x="110892" fg:w="2272"/><text x="15.8779%" y="255.50"></text></g><g><title>core::char::methods::len_utf8 (1,708 samples, 0.24%)</title><rect x="16.8058%" y="229" width="0.2407%" height="15" fill="rgb(213,199,7)" fg:x="119250" fg:w="1708"/><text x="17.0558%" y="239.50"></text></g><g><title>&lt;core::ops::range::RangeFull as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (515 samples, 0.07%)</title><rect x="17.3026%" y="213" width="0.0726%" height="15" fill="rgb(250,110,10)" fg:x="122775" fg:w="515"/><text x="17.5526%" y="223.50"></text></g><g><title>core::char::methods::encode_utf8_raw (15,730 samples, 2.22%)</title><rect x="16.1165%" y="245" width="2.2168%" height="15" fill="rgb(248,123,6)" fg:x="114359" fg:w="15730"/><text x="16.3665%" y="255.50">c..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (9,131 samples, 1.29%)</title><rect x="17.0465%" y="229" width="1.2868%" height="15" fill="rgb(206,91,31)" fg:x="120958" fg:w="9131"/><text x="17.2965%" y="239.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (6,799 samples, 0.96%)</title><rect x="17.3752%" y="213" width="0.9582%" height="15" fill="rgb(211,154,13)" fg:x="123290" fg:w="6799"/><text x="17.6252%" y="223.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (5,635 samples, 0.79%)</title><rect x="17.5392%" y="197" width="0.7941%" height="15" fill="rgb(225,148,7)" fg:x="124454" fg:w="5635"/><text x="17.7892%" y="207.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (3,668 samples, 0.52%)</title><rect x="17.8164%" y="181" width="0.5169%" height="15" fill="rgb(220,160,43)" fg:x="126421" fg:w="3668"/><text x="18.0664%" y="191.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1,742 samples, 0.25%)</title><rect x="18.0879%" y="165" width="0.2455%" height="15" fill="rgb(213,52,39)" fg:x="128347" fg:w="1742"/><text x="18.3379%" y="175.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (814 samples, 0.11%)</title><rect x="18.2187%" y="149" width="0.1147%" height="15" fill="rgb(243,137,7)" fg:x="129275" fg:w="814"/><text x="18.4687%" y="159.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::encode_utf8 (17,329 samples, 2.44%)</title><rect x="15.9481%" y="261" width="2.4422%" height="15" fill="rgb(230,79,13)" fg:x="113164" fg:w="17329"/><text x="16.1981%" y="271.50">co..</text></g><g><title>core::str::converts::from_utf8_unchecked_mut (404 samples, 0.06%)</title><rect x="18.3334%" y="245" width="0.0569%" height="15" fill="rgb(247,105,23)" fg:x="130089" fg:w="404"/><text x="18.5834%" y="255.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (898 samples, 0.13%)</title><rect x="18.3903%" y="261" width="0.1266%" height="15" fill="rgb(223,179,41)" fg:x="130493" fg:w="898"/><text x="18.6403%" y="271.50"></text></g><g><title>regex_syntax::utf8::ScalarRange::encode (25,241 samples, 3.56%)</title><rect x="15.1203%" y="277" width="3.5572%" height="15" fill="rgb(218,9,34)" fg:x="107290" fg:w="25241"/><text x="15.3703%" y="287.50">rege..</text></g><g><title>core::str::&lt;impl str&gt;::len (1,140 samples, 0.16%)</title><rect x="18.5169%" y="261" width="0.1607%" height="15" fill="rgb(222,106,8)" fg:x="131391" fg:w="1140"/><text x="18.7669%" y="271.50"></text></g><g><title>regex_syntax::utf8::ScalarRange::is_valid (290 samples, 0.04%)</title><rect x="18.6775%" y="277" width="0.0409%" height="15" fill="rgb(211,220,0)" fg:x="132531" fg:w="290"/><text x="18.9275%" y="287.50"></text></g><g><title>regex_syntax::utf8::ScalarRange::split (816 samples, 0.11%)</title><rect x="18.7184%" y="277" width="0.1150%" height="15" fill="rgb(229,52,16)" fg:x="132821" fg:w="816"/><text x="18.9684%" y="287.50"></text></g><g><title>regex_syntax::utf8::Utf8Sequence::from_encoded_range (5,560 samples, 0.78%)</title><rect x="18.8334%" y="277" width="0.7836%" height="15" fill="rgb(212,155,18)" fg:x="133637" fg:w="5560"/><text x="19.0834%" y="287.50"></text></g><g><title>regex_syntax::utf8::Utf8Range::new (1,077 samples, 0.15%)</title><rect x="19.4652%" y="261" width="0.1518%" height="15" fill="rgb(242,21,14)" fg:x="138120" fg:w="1077"/><text x="19.7152%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (90 samples, 0.01%)</title><rect x="19.6792%" y="229" width="0.0127%" height="15" fill="rgb(222,19,48)" fg:x="139639" fg:w="90"/><text x="19.9292%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (312 samples, 0.04%)</title><rect x="19.6697%" y="245" width="0.0440%" height="15" fill="rgb(232,45,27)" fg:x="139571" fg:w="312"/><text x="19.9197%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (154 samples, 0.02%)</title><rect x="19.6919%" y="229" width="0.0217%" height="15" fill="rgb(249,103,42)" fg:x="139729" fg:w="154"/><text x="19.9419%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (79 samples, 0.01%)</title><rect x="19.7025%" y="213" width="0.0111%" height="15" fill="rgb(246,81,33)" fg:x="139804" fg:w="79"/><text x="19.9525%" y="223.50"></text></g><g><title>regex_syntax::utf8::Utf8Sequences::push (730 samples, 0.10%)</title><rect x="19.6170%" y="277" width="0.1029%" height="15" fill="rgb(252,33,42)" fg:x="139197" fg:w="730"/><text x="19.8670%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (676 samples, 0.10%)</title><rect x="19.6246%" y="261" width="0.0953%" height="15" fill="rgb(209,212,41)" fg:x="139251" fg:w="676"/><text x="19.8746%" y="271.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (94,130 samples, 13.27%)</title><rect x="6.7415%" y="309" width="13.2657%" height="15" fill="rgb(207,154,6)" fg:x="47836" fg:w="94130"/><text x="6.9915%" y="319.50">&lt;&amp;mut I as core::ite..</text></g><g><title>&lt;regex_syntax::utf8::Utf8Sequences as core::iter::traits::iterator::Iterator&gt;::next (93,065 samples, 13.12%)</title><rect x="6.8916%" y="293" width="13.1156%" height="15" fill="rgb(223,64,47)" fg:x="48901" fg:w="93065"/><text x="7.1416%" y="303.50">&lt;regex_syntax::utf8:..</text></g><g><title>regex_syntax::utf8::max_scalar_value (2,039 samples, 0.29%)</title><rect x="19.7198%" y="277" width="0.2874%" height="15" fill="rgb(211,161,38)" fg:x="139927" fg:w="2039"/><text x="19.9698%" y="287.50"></text></g><g><title>core::ptr::read (3,516 samples, 0.50%)</title><rect x="20.4880%" y="277" width="0.4955%" height="15" fill="rgb(219,138,40)" fg:x="145378" fg:w="3516"/><text x="20.7380%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (104,194 samples, 14.68%)</title><rect x="6.4217%" y="325" width="14.6840%" height="15" fill="rgb(241,228,46)" fg:x="45567" fg:w="104194"/><text x="6.6717%" y="335.50">&lt;core::iter::adapters:..</text></g><g><title>core::option::Option&lt;T&gt;::take (7,795 samples, 1.10%)</title><rect x="20.0072%" y="309" width="1.0985%" height="15" fill="rgb(223,209,38)" fg:x="141966" fg:w="7795"/><text x="20.2572%" y="319.50"></text></g><g><title>core::mem::replace (6,670 samples, 0.94%)</title><rect x="20.1657%" y="293" width="0.9400%" height="15" fill="rgb(236,164,45)" fg:x="143091" fg:w="6670"/><text x="20.4157%" y="303.50"></text></g><g><title>core::ptr::write (867 samples, 0.12%)</title><rect x="20.9835%" y="277" width="0.1222%" height="15" fill="rgb(231,15,5)" fg:x="148894" fg:w="867"/><text x="21.2335%" y="287.50"></text></g><g><title>&lt;unknown @ 0x555555617090&gt; (215 samples, 0.03%)</title><rect x="21.2458%" y="309" width="0.0303%" height="15" fill="rgb(252,35,15)" fg:x="150755" fg:w="215"/><text x="21.4958%" y="319.50"></text></g><g><title>&lt;unknown @ 0x7ffff7dbd6e0&gt; (116 samples, 0.02%)</title><rect x="21.2761%" y="309" width="0.0163%" height="15" fill="rgb(248,181,18)" fg:x="150970" fg:w="116"/><text x="21.5261%" y="319.50"></text></g><g><title>&lt;unknown @ 0x7ffff7dbd6e4&gt; (119 samples, 0.02%)</title><rect x="21.2925%" y="309" width="0.0168%" height="15" fill="rgb(233,39,42)" fg:x="151086" fg:w="119"/><text x="21.5425%" y="319.50"></text></g><g><title>&lt;unknown @ 0x7ffff7dbd6e7&gt; (81 samples, 0.01%)</title><rect x="21.3092%" y="309" width="0.0114%" height="15" fill="rgb(238,110,33)" fg:x="151205" fg:w="81"/><text x="21.5592%" y="319.50"></text></g><g><title>&lt;unknown @ 0x7ffff7dbd6eb&gt; (82 samples, 0.01%)</title><rect x="21.3206%" y="309" width="0.0116%" height="15" fill="rgb(233,195,10)" fg:x="151286" fg:w="82"/><text x="21.5706%" y="319.50"></text></g><g><title>&lt;unknown @ 0x7ffff7dbd6ed&gt; (90 samples, 0.01%)</title><rect x="21.3322%" y="309" width="0.0127%" height="15" fill="rgb(254,105,3)" fg:x="151368" fg:w="90"/><text x="21.5822%" y="319.50"></text></g><g><title>&lt;unknown @ 0x7ffff7dbd6f1&gt; (84 samples, 0.01%)</title><rect x="21.3449%" y="309" width="0.0118%" height="15" fill="rgb(221,225,9)" fg:x="151458" fg:w="84"/><text x="21.5949%" y="319.50"></text></g><g><title>&lt;unknown @ 0x7ffff7dbd6f7&gt; (85 samples, 0.01%)</title><rect x="21.3567%" y="309" width="0.0120%" height="15" fill="rgb(224,227,45)" fg:x="151542" fg:w="85"/><text x="21.6067%" y="319.50"></text></g><g><title>&lt;unknown @ 0x7ffff7dbd6fb&gt; (80 samples, 0.01%)</title><rect x="21.3687%" y="309" width="0.0113%" height="15" fill="rgb(229,198,43)" fg:x="151627" fg:w="80"/><text x="21.6187%" y="319.50"></text></g><g><title>&lt;unknown @ 0x7ffff7dbd701&gt; (77 samples, 0.01%)</title><rect x="21.3800%" y="309" width="0.0109%" height="15" fill="rgb(206,209,35)" fg:x="151707" fg:w="77"/><text x="21.6300%" y="319.50"></text></g><g><title>&lt;unknown @ 0x7ffff7dbd705&gt; (74 samples, 0.01%)</title><rect x="21.3908%" y="309" width="0.0104%" height="15" fill="rgb(245,195,53)" fg:x="151784" fg:w="74"/><text x="21.6408%" y="319.50"></text></g><g><title>&lt;unknown @ 0x7ffff7dbd70b&gt; (83 samples, 0.01%)</title><rect x="21.4013%" y="309" width="0.0117%" height="15" fill="rgb(240,92,26)" fg:x="151858" fg:w="83"/><text x="21.6513%" y="319.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2,264 samples, 0.32%)</title><rect x="21.1057%" y="325" width="0.3191%" height="15" fill="rgb(207,40,23)" fg:x="149761" fg:w="2264"/><text x="21.3557%" y="335.50"></text></g><g><title>&lt;unknown @ 0x7ffff7dbd70e&gt; (84 samples, 0.01%)</title><rect x="21.4130%" y="309" width="0.0118%" height="15" fill="rgb(223,111,35)" fg:x="151941" fg:w="84"/><text x="21.6630%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (172 samples, 0.02%)</title><rect x="21.7198%" y="261" width="0.0242%" height="15" fill="rgb(229,147,28)" fg:x="154118" fg:w="172"/><text x="21.9698%" y="271.50"></text></g><g><title>alloc::alloc::Global::grow_impl (168 samples, 0.02%)</title><rect x="21.7203%" y="245" width="0.0237%" height="15" fill="rgb(211,29,28)" fg:x="154122" fg:w="168"/><text x="21.9703%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (269 samples, 0.04%)</title><rect x="21.7143%" y="277" width="0.0379%" height="15" fill="rgb(228,72,33)" fg:x="154079" fg:w="269"/><text x="21.9643%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (521 samples, 0.07%)</title><rect x="21.7002%" y="293" width="0.0734%" height="15" fill="rgb(205,214,31)" fg:x="153979" fg:w="521"/><text x="21.9502%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (540 samples, 0.08%)</title><rect x="21.6995%" y="309" width="0.0761%" height="15" fill="rgb(224,111,15)" fg:x="153974" fg:w="540"/><text x="21.9495%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (464 samples, 0.07%)</title><rect x="21.8298%" y="293" width="0.0654%" height="15" fill="rgb(253,21,26)" fg:x="154899" fg:w="464"/><text x="22.0798%" y="303.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (170 samples, 0.02%)</title><rect x="21.8713%" y="277" width="0.0240%" height="15" fill="rgb(245,139,43)" fg:x="155193" fg:w="170"/><text x="22.1213%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1,678 samples, 0.24%)</title><rect x="21.7756%" y="309" width="0.2365%" height="15" fill="rgb(252,170,7)" fg:x="154514" fg:w="1678"/><text x="22.0256%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (829 samples, 0.12%)</title><rect x="21.8952%" y="293" width="0.1168%" height="15" fill="rgb(231,118,14)" fg:x="155363" fg:w="829"/><text x="22.1452%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (399 samples, 0.06%)</title><rect x="21.9558%" y="277" width="0.0562%" height="15" fill="rgb(238,83,0)" fg:x="155793" fg:w="399"/><text x="22.2058%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4,517 samples, 0.64%)</title><rect x="21.4248%" y="325" width="0.6366%" height="15" fill="rgb(221,39,39)" fg:x="152025" fg:w="4517"/><text x="21.6748%" y="335.50"></text></g><g><title>core::ptr::write (350 samples, 0.05%)</title><rect x="22.0120%" y="309" width="0.0493%" height="15" fill="rgb(222,119,46)" fg:x="156192" fg:w="350"/><text x="22.2620%" y="319.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek::{{closure}} (119 samples, 0.02%)</title><rect x="22.0622%" y="293" width="0.0168%" height="15" fill="rgb(222,165,49)" fg:x="156548" fg:w="119"/><text x="22.3122%" y="303.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (118 samples, 0.02%)</title><rect x="22.0624%" y="277" width="0.0166%" height="15" fill="rgb(219,113,52)" fg:x="156549" fg:w="118"/><text x="22.3124%" y="287.50"></text></g><g><title>&lt;regex_syntax::utf8::Utf8Sequences as core::iter::traits::iterator::Iterator&gt;::next (116 samples, 0.02%)</title><rect x="22.0626%" y="261" width="0.0163%" height="15" fill="rgb(214,7,15)" fg:x="156551" fg:w="116"/><text x="22.3126%" y="271.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek (139 samples, 0.02%)</title><rect x="22.0614%" y="325" width="0.0196%" height="15" fill="rgb(235,32,4)" fg:x="156542" fg:w="139"/><text x="22.3114%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (139 samples, 0.02%)</title><rect x="22.0614%" y="309" width="0.0196%" height="15" fill="rgb(238,90,54)" fg:x="156542" fg:w="139"/><text x="22.3114%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::peekable (482 samples, 0.07%)</title><rect x="22.0810%" y="325" width="0.0679%" height="15" fill="rgb(213,208,19)" fg:x="156681" fg:w="482"/><text x="22.3310%" y="335.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::new (271 samples, 0.04%)</title><rect x="22.1107%" y="309" width="0.0382%" height="15" fill="rgb(233,156,4)" fg:x="156892" fg:w="271"/><text x="22.3607%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (744 samples, 0.10%)</title><rect x="22.1489%" y="325" width="0.1049%" height="15" fill="rgb(207,194,5)" fg:x="157163" fg:w="744"/><text x="22.3989%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (423 samples, 0.06%)</title><rect x="22.1941%" y="309" width="0.0596%" height="15" fill="rgb(206,111,30)" fg:x="157484" fg:w="423"/><text x="22.4441%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::len (219 samples, 0.03%)</title><rect x="22.2547%" y="325" width="0.0309%" height="15" fill="rgb(243,70,54)" fg:x="157914" fg:w="219"/><text x="22.5047%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (481 samples, 0.07%)</title><rect x="22.6169%" y="245" width="0.0678%" height="15" fill="rgb(242,28,8)" fg:x="160484" fg:w="481"/><text x="22.8669%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (244 samples, 0.03%)</title><rect x="22.6503%" y="229" width="0.0344%" height="15" fill="rgb(219,106,18)" fg:x="160721" fg:w="244"/><text x="22.9003%" y="239.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (108 samples, 0.02%)</title><rect x="22.6847%" y="245" width="0.0152%" height="15" fill="rgb(244,222,10)" fg:x="160965" fg:w="108"/><text x="22.9347%" y="255.50"></text></g><g><title>core::slice::iter::&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (1,823 samples, 0.26%)</title><rect x="22.4585%" y="293" width="0.2569%" height="15" fill="rgb(236,179,52)" fg:x="159360" fg:w="1823"/><text x="22.7085%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1,641 samples, 0.23%)</title><rect x="22.4842%" y="277" width="0.2313%" height="15" fill="rgb(213,23,39)" fg:x="159542" fg:w="1641"/><text x="22.7342%" y="287.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1,429 samples, 0.20%)</title><rect x="22.5140%" y="261" width="0.2014%" height="15" fill="rgb(238,48,10)" fg:x="159754" fg:w="1429"/><text x="22.7640%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (110 samples, 0.02%)</title><rect x="22.6999%" y="245" width="0.0155%" height="15" fill="rgb(251,196,23)" fg:x="161073" fg:w="110"/><text x="22.9499%" y="255.50"></text></g><g><title>core::array::&lt;impl core::ops::index::Index&lt;I&gt; for [T (545 samples, 0.08%)</title><rect x="22.7903%" y="277" width="0.0768%" height="15" fill="rgb(250,152,24)" fg:x="161714" fg:w="545"/><text x="23.0403%" y="287.50"></text></g><g><title> N]&gt;::index (545 samples, 0.08%)</title><rect x="22.7903%" y="261" width="0.0768%" height="15" fill="rgb(209,150,17)" fg:x="161714" fg:w="545"/><text x="23.0403%" y="271.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (345 samples, 0.05%)</title><rect x="22.8184%" y="245" width="0.0486%" height="15" fill="rgb(234,202,34)" fg:x="161914" fg:w="345"/><text x="23.0684%" y="255.50"></text></g><g><title>&lt;core::ops::range::RangeFull as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (127 samples, 0.02%)</title><rect x="22.8492%" y="229" width="0.0179%" height="15" fill="rgb(253,148,53)" fg:x="162132" fg:w="127"/><text x="23.0992%" y="239.50"></text></g><g><title>&lt;&amp;regex_syntax::utf8::Utf8Sequence as core::iter::traits::collect::IntoIterator&gt;::into_iter (3,213 samples, 0.45%)</title><rect x="22.4144%" y="309" width="0.4528%" height="15" fill="rgb(218,129,16)" fg:x="159047" fg:w="3213"/><text x="22.6644%" y="319.50"></text></g><g><title>regex_syntax::utf8::Utf8Sequence::as_slice (1,077 samples, 0.15%)</title><rect x="22.7154%" y="293" width="0.1518%" height="15" fill="rgb(216,85,19)" fg:x="161183" fg:w="1077"/><text x="22.9654%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::rev (355 samples, 0.05%)</title><rect x="22.8672%" y="309" width="0.0500%" height="15" fill="rgb(235,228,7)" fg:x="162260" fg:w="355"/><text x="23.1172%" y="319.50"></text></g><g><title>core::iter::adapters::rev::Rev&lt;T&gt;::new (160 samples, 0.02%)</title><rect x="22.8947%" y="293" width="0.0225%" height="15" fill="rgb(245,175,0)" fg:x="162455" fg:w="160"/><text x="23.1447%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (327 samples, 0.05%)</title><rect x="24.8096%" y="229" width="0.0461%" height="15" fill="rgb(208,168,36)" fg:x="176043" fg:w="327"/><text x="25.0596%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (156 samples, 0.02%)</title><rect x="24.8337%" y="213" width="0.0220%" height="15" fill="rgb(246,171,24)" fg:x="176214" fg:w="156"/><text x="25.0837%" y="223.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (90 samples, 0.01%)</title><rect x="24.8557%" y="229" width="0.0127%" height="15" fill="rgb(215,142,24)" fg:x="176370" fg:w="90"/><text x="25.1057%" y="239.50"></text></g><g><title>core::slice::iter::&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (1,343 samples, 0.19%)</title><rect x="24.6932%" y="277" width="0.1893%" height="15" fill="rgb(250,187,7)" fg:x="175217" fg:w="1343"/><text x="24.9432%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1,195 samples, 0.17%)</title><rect x="24.7141%" y="261" width="0.1684%" height="15" fill="rgb(228,66,33)" fg:x="175365" fg:w="1195"/><text x="24.9641%" y="271.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1,069 samples, 0.15%)</title><rect x="24.7318%" y="245" width="0.1507%" height="15" fill="rgb(234,215,21)" fg:x="175491" fg:w="1069"/><text x="24.9818%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (100 samples, 0.01%)</title><rect x="24.8684%" y="229" width="0.0141%" height="15" fill="rgb(222,191,20)" fg:x="176460" fg:w="100"/><text x="25.1184%" y="239.50"></text></g><g><title>&lt;&amp;regex_syntax::utf8::Utf8Sequence as core::iter::traits::collect::IntoIterator&gt;::into_iter (2,380 samples, 0.34%)</title><rect x="24.6601%" y="293" width="0.3354%" height="15" fill="rgb(245,79,54)" fg:x="174982" fg:w="2380"/><text x="24.9101%" y="303.50"></text></g><g><title>regex_syntax::utf8::Utf8Sequence::as_slice (802 samples, 0.11%)</title><rect x="24.8825%" y="277" width="0.1130%" height="15" fill="rgb(240,10,37)" fg:x="176560" fg:w="802"/><text x="25.1325%" y="287.50"></text></g><g><title>core::array::&lt;impl core::ops::index::Index&lt;I&gt; for [T (397 samples, 0.06%)</title><rect x="24.9396%" y="261" width="0.0559%" height="15" fill="rgb(214,192,32)" fg:x="176965" fg:w="397"/><text x="25.1896%" y="271.50"></text></g><g><title> N]&gt;::index (397 samples, 0.06%)</title><rect x="24.9396%" y="245" width="0.0559%" height="15" fill="rgb(209,36,54)" fg:x="176965" fg:w="397"/><text x="25.1896%" y="255.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (252 samples, 0.04%)</title><rect x="24.9600%" y="229" width="0.0355%" height="15" fill="rgb(220,10,11)" fg:x="177110" fg:w="252"/><text x="25.2100%" y="239.50"></text></g><g><title>&lt;core::ops::range::RangeFull as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (101 samples, 0.01%)</title><rect x="24.9813%" y="213" width="0.0142%" height="15" fill="rgb(221,106,17)" fg:x="177261" fg:w="101"/><text x="25.2313%" y="223.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (145 samples, 0.02%)</title><rect x="24.9955%" y="293" width="0.0204%" height="15" fill="rgb(251,142,44)" fg:x="177362" fg:w="145"/><text x="25.2455%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (2,104 samples, 0.30%)</title><rect x="25.6255%" y="261" width="0.2965%" height="15" fill="rgb(238,13,15)" fg:x="181832" fg:w="2104"/><text x="25.8755%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1,055 samples, 0.15%)</title><rect x="25.7733%" y="245" width="0.1487%" height="15" fill="rgb(208,107,27)" fg:x="182881" fg:w="1055"/><text x="26.0233%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2,195 samples, 0.31%)</title><rect x="25.9220%" y="261" width="0.3093%" height="15" fill="rgb(205,136,37)" fg:x="183936" fg:w="2195"/><text x="26.1720%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1,087 samples, 0.15%)</title><rect x="26.0781%" y="245" width="0.1532%" height="15" fill="rgb(250,205,27)" fg:x="185044" fg:w="1087"/><text x="26.3281%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (9,402 samples, 1.33%)</title><rect x="25.0160%" y="293" width="1.3250%" height="15" fill="rgb(210,80,43)" fg:x="177507" fg:w="9402"/><text x="25.2660%" y="303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (8,799 samples, 1.24%)</title><rect x="25.1009%" y="277" width="1.2400%" height="15" fill="rgb(247,160,36)" fg:x="178110" fg:w="8799"/><text x="25.3509%" y="287.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (778 samples, 0.11%)</title><rect x="26.2313%" y="261" width="0.1096%" height="15" fill="rgb(234,13,49)" fg:x="186131" fg:w="778"/><text x="26.4813%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1,408 samples, 0.20%)</title><rect x="26.7719%" y="277" width="0.1984%" height="15" fill="rgb(234,122,0)" fg:x="189967" fg:w="1408"/><text x="27.0219%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (712 samples, 0.10%)</title><rect x="26.8700%" y="261" width="0.1003%" height="15" fill="rgb(207,146,38)" fg:x="190663" fg:w="712"/><text x="27.1200%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1,439 samples, 0.20%)</title><rect x="26.9704%" y="277" width="0.2028%" height="15" fill="rgb(207,177,25)" fg:x="191375" fg:w="1439"/><text x="27.2204%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (721 samples, 0.10%)</title><rect x="27.0716%" y="261" width="0.1016%" height="15" fill="rgb(211,178,42)" fg:x="192093" fg:w="721"/><text x="27.3216%" y="271.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (922 samples, 0.13%)</title><rect x="27.1732%" y="277" width="0.1299%" height="15" fill="rgb(230,69,54)" fg:x="192814" fg:w="922"/><text x="27.4232%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,070 samples, 1.00%)</title><rect x="26.3410%" y="293" width="0.9964%" height="15" fill="rgb(214,135,41)" fg:x="186909" fg:w="7070"/><text x="26.5910%" y="303.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (243 samples, 0.03%)</title><rect x="27.3031%" y="277" width="0.0342%" height="15" fill="rgb(237,67,25)" fg:x="193736" fg:w="243"/><text x="27.5531%" y="287.50"></text></g><g><title>&lt;unknown @ 0x555555617090&gt; (84 samples, 0.01%)</title><rect x="27.3373%" y="293" width="0.0118%" height="15" fill="rgb(222,189,50)" fg:x="193979" fg:w="84"/><text x="27.5873%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (865 samples, 0.12%)</title><rect x="27.4023%" y="293" width="0.1219%" height="15" fill="rgb(245,148,34)" fg:x="194440" fg:w="865"/><text x="27.6523%" y="303.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (2,643 samples, 0.37%)</title><rect x="27.5242%" y="293" width="0.3725%" height="15" fill="rgb(222,29,6)" fg:x="195305" fg:w="2643"/><text x="27.7742%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1,035 samples, 0.15%)</title><rect x="27.8967%" y="293" width="0.1459%" height="15" fill="rgb(221,189,43)" fg:x="197948" fg:w="1035"/><text x="28.1467%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::compile::Hole&gt; (124 samples, 0.02%)</title><rect x="28.0426%" y="293" width="0.0175%" height="15" fill="rgb(207,36,27)" fg:x="198983" fg:w="124"/><text x="28.2926%" y="303.50"></text></g><g><title>regex::compile::ByteClassSet::set_range (3,394 samples, 0.48%)</title><rect x="28.0600%" y="293" width="0.4783%" height="15" fill="rgb(217,90,24)" fg:x="199107" fg:w="3394"/><text x="28.3100%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (75 samples, 0.01%)</title><rect x="29.3533%" y="213" width="0.0106%" height="15" fill="rgb(224,66,35)" fg:x="208284" fg:w="75"/><text x="29.6033%" y="223.50"></text></g><g><title>alloc::alloc::Global::grow_impl (72 samples, 0.01%)</title><rect x="29.3538%" y="197" width="0.0101%" height="15" fill="rgb(221,13,50)" fg:x="208287" fg:w="72"/><text x="29.6038%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (102 samples, 0.01%)</title><rect x="29.3517%" y="229" width="0.0144%" height="15" fill="rgb(236,68,49)" fg:x="208272" fg:w="102"/><text x="29.6017%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (201 samples, 0.03%)</title><rect x="29.3442%" y="245" width="0.0283%" height="15" fill="rgb(229,146,28)" fg:x="208219" fg:w="201"/><text x="29.5942%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (209 samples, 0.03%)</title><rect x="29.3440%" y="261" width="0.0295%" height="15" fill="rgb(225,31,38)" fg:x="208218" fg:w="209"/><text x="29.5940%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (883 samples, 0.12%)</title><rect x="29.4729%" y="245" width="0.1244%" height="15" fill="rgb(250,208,3)" fg:x="209132" fg:w="883"/><text x="29.7229%" y="255.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (326 samples, 0.05%)</title><rect x="29.5514%" y="229" width="0.0459%" height="15" fill="rgb(246,54,23)" fg:x="209689" fg:w="326"/><text x="29.8014%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (3,132 samples, 0.44%)</title><rect x="29.3735%" y="261" width="0.4414%" height="15" fill="rgb(243,76,11)" fg:x="208427" fg:w="3132"/><text x="29.6235%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1,544 samples, 0.22%)</title><rect x="29.5973%" y="245" width="0.2176%" height="15" fill="rgb(245,21,50)" fg:x="210015" fg:w="1544"/><text x="29.8473%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (826 samples, 0.12%)</title><rect x="29.6985%" y="229" width="0.1164%" height="15" fill="rgb(228,9,43)" fg:x="210733" fg:w="826"/><text x="29.9485%" y="239.50"></text></g><g><title>&lt;unknown @ 0x555555617090&gt; (125 samples, 0.02%)</title><rect x="29.8731%" y="245" width="0.0176%" height="15" fill="rgb(208,100,47)" fg:x="211972" fg:w="125"/><text x="30.1231%" y="255.50"></text></g><g><title>&lt;unknown @ 0x7ffff7dbd6e0&gt; (72 samples, 0.01%)</title><rect x="29.8907%" y="245" width="0.0101%" height="15" fill="rgb(232,26,8)" fg:x="212097" fg:w="72"/><text x="30.1407%" y="255.50"></text></g><g><title>regex::compile::Compiler::push_compiled (10,268 samples, 1.45%)</title><rect x="28.5384%" y="293" width="1.4471%" height="15" fill="rgb(216,166,38)" fg:x="202501" fg:w="10268"/><text x="28.7884%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8,657 samples, 1.22%)</title><rect x="28.7654%" y="277" width="1.2200%" height="15" fill="rgb(251,202,51)" fg:x="204112" fg:w="8657"/><text x="29.0154%" y="287.50"></text></g><g><title>core::ptr::write (1,210 samples, 0.17%)</title><rect x="29.8149%" y="261" width="0.1705%" height="15" fill="rgb(254,216,34)" fg:x="211559" fg:w="1210"/><text x="30.0649%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (88 samples, 0.01%)</title><rect x="30.1710%" y="229" width="0.0124%" height="15" fill="rgb(251,32,27)" fg:x="214086" fg:w="88"/><text x="30.4210%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (162 samples, 0.02%)</title><rect x="30.1659%" y="245" width="0.0228%" height="15" fill="rgb(208,127,28)" fg:x="214050" fg:w="162"/><text x="30.4159%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (164 samples, 0.02%)</title><rect x="30.1659%" y="261" width="0.0231%" height="15" fill="rgb(224,137,22)" fg:x="214050" fg:w="164"/><text x="30.4159%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (165 samples, 0.02%)</title><rect x="30.2088%" y="245" width="0.0233%" height="15" fill="rgb(254,70,32)" fg:x="214354" fg:w="165"/><text x="30.4588%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (621 samples, 0.09%)</title><rect x="30.1891%" y="261" width="0.0875%" height="15" fill="rgb(229,75,37)" fg:x="214214" fg:w="621"/><text x="30.4391%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (316 samples, 0.04%)</title><rect x="30.2320%" y="245" width="0.0445%" height="15" fill="rgb(252,64,23)" fg:x="214519" fg:w="316"/><text x="30.4820%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (171 samples, 0.02%)</title><rect x="30.2525%" y="229" width="0.0241%" height="15" fill="rgb(232,162,48)" fg:x="214664" fg:w="171"/><text x="30.5025%" y="239.50"></text></g><g><title>regex::compile::Compiler::push_hole (2,319 samples, 0.33%)</title><rect x="29.9854%" y="293" width="0.3268%" height="15" fill="rgb(246,160,12)" fg:x="212769" fg:w="2319"/><text x="30.2354%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,732 samples, 0.24%)</title><rect x="30.0681%" y="277" width="0.2441%" height="15" fill="rgb(247,166,0)" fg:x="213356" fg:w="1732"/><text x="30.3181%" y="287.50"></text></g><g><title>core::ptr::write (253 samples, 0.04%)</title><rect x="30.2766%" y="261" width="0.0357%" height="15" fill="rgb(249,219,21)" fg:x="214835" fg:w="253"/><text x="30.5266%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1,425 samples, 0.20%)</title><rect x="31.9667%" y="245" width="0.2008%" height="15" fill="rgb(205,209,3)" fg:x="226828" fg:w="1425"/><text x="32.2167%" y="255.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (541 samples, 0.08%)</title><rect x="32.0913%" y="229" width="0.0762%" height="15" fill="rgb(243,44,1)" fg:x="227712" fg:w="541"/><text x="32.3413%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (5,081 samples, 0.72%)</title><rect x="31.7992%" y="261" width="0.7161%" height="15" fill="rgb(206,159,16)" fg:x="225639" fg:w="5081"/><text x="32.0492%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2,467 samples, 0.35%)</title><rect x="32.1676%" y="245" width="0.3477%" height="15" fill="rgb(244,77,30)" fg:x="228253" fg:w="2467"/><text x="32.4176%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1,234 samples, 0.17%)</title><rect x="32.3413%" y="229" width="0.1739%" height="15" fill="rgb(218,69,12)" fg:x="229486" fg:w="1234"/><text x="32.5913%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (502 samples, 0.07%)</title><rect x="32.9807%" y="229" width="0.0707%" height="15" fill="rgb(212,87,7)" fg:x="234023" fg:w="502"/><text x="33.2307%" y="239.50"></text></g><g><title>core::ptr::slice_from_raw_parts (3,385 samples, 0.48%)</title><rect x="32.7496%" y="245" width="0.4770%" height="15" fill="rgb(245,114,25)" fg:x="232383" fg:w="3385"/><text x="32.9996%" y="255.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1,243 samples, 0.18%)</title><rect x="33.0515%" y="229" width="0.1752%" height="15" fill="rgb(210,61,42)" fg:x="234525" fg:w="1243"/><text x="33.3015%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (12,166 samples, 1.71%)</title><rect x="31.5812%" y="277" width="1.7145%" height="15" fill="rgb(211,52,33)" fg:x="224092" fg:w="12166"/><text x="31.8312%" y="287.50"></text></g><g><title>core::slice::raw::from_raw_parts (5,538 samples, 0.78%)</title><rect x="32.5152%" y="261" width="0.7805%" height="15" fill="rgb(234,58,33)" fg:x="230720" fg:w="5538"/><text x="32.7652%" y="271.50"></text></g><g><title>core::slice::raw::debug_check_data_len (490 samples, 0.07%)</title><rect x="33.2266%" y="245" width="0.0691%" height="15" fill="rgb(220,115,36)" fg:x="235768" fg:w="490"/><text x="33.4766%" y="255.50"></text></g><g><title>&lt;regex::compile::SuffixCacheKey as core::cmp::PartialEq&gt;::eq (4,099 samples, 0.58%)</title><rect x="33.2957%" y="277" width="0.5777%" height="15" fill="rgb(243,153,54)" fg:x="236258" fg:w="4099"/><text x="33.5457%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (371 samples, 0.05%)</title><rect x="33.8734%" y="277" width="0.0523%" height="15" fill="rgb(251,47,18)" fg:x="240357" fg:w="371"/><text x="34.1234%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (993 samples, 0.14%)</title><rect x="34.6919%" y="245" width="0.1399%" height="15" fill="rgb(242,102,42)" fg:x="246165" fg:w="993"/><text x="34.9419%" y="255.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (373 samples, 0.05%)</title><rect x="34.7793%" y="229" width="0.0526%" height="15" fill="rgb(234,31,38)" fg:x="246785" fg:w="373"/><text x="35.0293%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (3,801 samples, 0.54%)</title><rect x="34.5698%" y="261" width="0.5357%" height="15" fill="rgb(221,117,51)" fg:x="245299" fg:w="3801"/><text x="34.8198%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1,942 samples, 0.27%)</title><rect x="34.8318%" y="245" width="0.2737%" height="15" fill="rgb(212,20,18)" fg:x="247158" fg:w="1942"/><text x="35.0818%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (951 samples, 0.13%)</title><rect x="34.9715%" y="229" width="0.1340%" height="15" fill="rgb(245,133,36)" fg:x="248149" fg:w="951"/><text x="35.2215%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (9,113 samples, 1.28%)</title><rect x="33.9257%" y="277" width="1.2843%" height="15" fill="rgb(212,6,19)" fg:x="240728" fg:w="9113"/><text x="34.1757%" y="287.50"></text></g><g><title>core::ptr::write (741 samples, 0.10%)</title><rect x="35.1055%" y="261" width="0.1044%" height="15" fill="rgb(218,1,36)" fg:x="249100" fg:w="741"/><text x="35.3555%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (6,513 samples, 0.92%)</title><rect x="35.2099%" y="277" width="0.9179%" height="15" fill="rgb(246,84,54)" fg:x="249841" fg:w="6513"/><text x="35.4599%" y="287.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (5,155 samples, 0.73%)</title><rect x="35.4013%" y="261" width="0.7265%" height="15" fill="rgb(242,110,6)" fg:x="251199" fg:w="5155"/><text x="35.6513%" y="271.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (3,189 samples, 0.45%)</title><rect x="35.6784%" y="245" width="0.4494%" height="15" fill="rgb(214,47,5)" fg:x="253165" fg:w="3189"/><text x="35.9284%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::as_ptr (581 samples, 0.08%)</title><rect x="36.0459%" y="229" width="0.0819%" height="15" fill="rgb(218,159,25)" fg:x="255773" fg:w="581"/><text x="36.2959%" y="239.50"></text></g><g><title>regex::compile::CompileClass::c_utf8_seq (103,235 samples, 14.55%)</title><rect x="22.2856%" y="325" width="14.5488%" height="15" fill="rgb(215,211,28)" fg:x="158133" fg:w="103235"/><text x="22.5356%" y="335.50">regex::compile::Compil..</text></g><g><title>regex::compile::CompileClass::c_utf8_seq_ (98,753 samples, 13.92%)</title><rect x="22.9172%" y="309" width="13.9172%" height="15" fill="rgb(238,59,32)" fg:x="162615" fg:w="98753"/><text x="23.1672%" y="319.50">regex::compile::Compi..</text></g><g><title>regex::compile::SuffixCache::get (46,280 samples, 6.52%)</title><rect x="30.3122%" y="293" width="6.5222%" height="15" fill="rgb(226,82,3)" fg:x="215088" fg:w="46280"/><text x="30.5622%" y="303.50">regex::co..</text></g><g><title>regex::compile::SuffixCache::hash (5,014 samples, 0.71%)</title><rect x="36.1278%" y="277" width="0.7066%" height="15" fill="rgb(240,164,32)" fg:x="256354" fg:w="5014"/><text x="36.3778%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (415 samples, 0.06%)</title><rect x="37.4123%" y="261" width="0.0585%" height="15" fill="rgb(232,46,7)" fg:x="265468" fg:w="415"/><text x="37.6623%" y="271.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (168 samples, 0.02%)</title><rect x="37.4471%" y="245" width="0.0237%" height="15" fill="rgb(229,129,53)" fg:x="265715" fg:w="168"/><text x="37.6971%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1,597 samples, 0.23%)</title><rect x="37.3600%" y="277" width="0.2251%" height="15" fill="rgb(234,188,29)" fg:x="265097" fg:w="1597"/><text x="37.6100%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (811 samples, 0.11%)</title><rect x="37.4707%" y="261" width="0.1143%" height="15" fill="rgb(246,141,4)" fg:x="265883" fg:w="811"/><text x="37.7207%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (387 samples, 0.05%)</title><rect x="37.5305%" y="245" width="0.0545%" height="15" fill="rgb(229,23,39)" fg:x="266307" fg:w="387"/><text x="37.7805%" y="255.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (913 samples, 0.13%)</title><rect x="37.6554%" y="261" width="0.1287%" height="15" fill="rgb(206,12,3)" fg:x="267193" fg:w="913"/><text x="37.9054%" y="271.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (394 samples, 0.06%)</title><rect x="37.7285%" y="245" width="0.0555%" height="15" fill="rgb(252,226,20)" fg:x="267712" fg:w="394"/><text x="37.9785%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3,642 samples, 0.51%)</title><rect x="37.2913%" y="293" width="0.5133%" height="15" fill="rgb(216,123,35)" fg:x="264610" fg:w="3642"/><text x="37.5413%" y="303.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1,558 samples, 0.22%)</title><rect x="37.5850%" y="277" width="0.2196%" height="15" fill="rgb(212,68,40)" fg:x="266694" fg:w="1558"/><text x="37.8350%" y="287.50"></text></g><g><title>core::slice::raw::debug_check_data_len (146 samples, 0.02%)</title><rect x="37.7840%" y="261" width="0.0206%" height="15" fill="rgb(254,125,32)" fg:x="268106" fg:w="146"/><text x="38.0340%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (5,570 samples, 0.78%)</title><rect x="37.1662%" y="309" width="0.7850%" height="15" fill="rgb(253,97,22)" fg:x="263722" fg:w="5570"/><text x="37.4162%" y="319.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1,040 samples, 0.15%)</title><rect x="37.8046%" y="293" width="0.1466%" height="15" fill="rgb(241,101,14)" fg:x="268252" fg:w="1040"/><text x="38.0546%" y="303.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (599 samples, 0.08%)</title><rect x="37.8668%" y="277" width="0.0844%" height="15" fill="rgb(238,103,29)" fg:x="268693" fg:w="599"/><text x="38.1168%" y="287.50"></text></g><g><title>regex::compile::Compiler::fill_split (9,827 samples, 1.38%)</title><rect x="36.8360%" y="325" width="1.3849%" height="15" fill="rgb(233,195,47)" fg:x="261379" fg:w="9827"/><text x="37.0860%" y="335.50"></text></g><g><title>regex::compile::MaybeInst::half_fill_split_goto1 (1,914 samples, 0.27%)</title><rect x="37.9512%" y="309" width="0.2697%" height="15" fill="rgb(246,218,30)" fg:x="269292" fg:w="1914"/><text x="38.2012%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::compile::MaybeInst&gt; (759 samples, 0.11%)</title><rect x="38.1139%" y="293" width="0.1070%" height="15" fill="rgb(219,145,47)" fg:x="270447" fg:w="759"/><text x="38.3639%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (164 samples, 0.02%)</title><rect x="38.3506%" y="309" width="0.0231%" height="15" fill="rgb(243,12,26)" fg:x="272126" fg:w="164"/><text x="38.6006%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (484 samples, 0.07%)</title><rect x="38.7787%" y="245" width="0.0682%" height="15" fill="rgb(214,87,16)" fg:x="275164" fg:w="484"/><text x="39.0287%" y="255.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (188 samples, 0.03%)</title><rect x="38.8204%" y="229" width="0.0265%" height="15" fill="rgb(208,99,42)" fg:x="275460" fg:w="188"/><text x="39.0704%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1,671 samples, 0.24%)</title><rect x="38.7301%" y="261" width="0.2355%" height="15" fill="rgb(253,99,2)" fg:x="274819" fg:w="1671"/><text x="38.9801%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (842 samples, 0.12%)</title><rect x="38.8469%" y="245" width="0.1187%" height="15" fill="rgb(220,168,23)" fg:x="275648" fg:w="842"/><text x="39.0969%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (391 samples, 0.06%)</title><rect x="38.9105%" y="229" width="0.0551%" height="15" fill="rgb(242,38,24)" fg:x="276099" fg:w="391"/><text x="39.1605%" y="239.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (924 samples, 0.13%)</title><rect x="39.0394%" y="245" width="0.1302%" height="15" fill="rgb(225,182,9)" fg:x="277014" fg:w="924"/><text x="39.2894%" y="255.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (409 samples, 0.06%)</title><rect x="39.1120%" y="229" width="0.0576%" height="15" fill="rgb(243,178,37)" fg:x="277529" fg:w="409"/><text x="39.3620%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3,799 samples, 0.54%)</title><rect x="38.6578%" y="277" width="0.5354%" height="15" fill="rgb(232,139,19)" fg:x="274306" fg:w="3799"/><text x="38.9078%" y="287.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1,615 samples, 0.23%)</title><rect x="38.9656%" y="261" width="0.2276%" height="15" fill="rgb(225,201,24)" fg:x="276490" fg:w="1615"/><text x="39.2156%" y="271.50"></text></g><g><title>core::slice::raw::debug_check_data_len (167 samples, 0.02%)</title><rect x="39.1696%" y="245" width="0.0235%" height="15" fill="rgb(221,47,46)" fg:x="277938" fg:w="167"/><text x="39.4196%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (5,588 samples, 0.79%)</title><rect x="38.5367%" y="293" width="0.7875%" height="15" fill="rgb(249,23,13)" fg:x="273447" fg:w="5588"/><text x="38.7867%" y="303.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (930 samples, 0.13%)</title><rect x="39.1932%" y="277" width="0.1311%" height="15" fill="rgb(219,9,5)" fg:x="278105" fg:w="930"/><text x="39.4432%" y="287.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (542 samples, 0.08%)</title><rect x="39.2479%" y="261" width="0.0764%" height="15" fill="rgb(254,171,16)" fg:x="278493" fg:w="542"/><text x="39.4979%" y="271.50"></text></g><g><title>&lt;unknown @ 0x555555617090&gt; (74 samples, 0.01%)</title><rect x="39.5754%" y="277" width="0.0104%" height="15" fill="rgb(230,171,20)" fg:x="280817" fg:w="74"/><text x="39.8254%" y="287.50"></text></g><g><title>regex::compile::Compiler::fill_to_next (10,756 samples, 1.52%)</title><rect x="38.2209%" y="325" width="1.5158%" height="15" fill="rgb(210,71,41)" fg:x="271206" fg:w="10756"/><text x="38.4709%" y="335.50"></text></g><g><title>regex::compile::Compiler::fill (9,672 samples, 1.36%)</title><rect x="38.3737%" y="309" width="1.3631%" height="15" fill="rgb(206,173,20)" fg:x="272290" fg:w="9672"/><text x="38.6237%" y="319.50"></text></g><g><title>regex::compile::MaybeInst::fill (2,927 samples, 0.41%)</title><rect x="39.3242%" y="293" width="0.4125%" height="15" fill="rgb(233,88,34)" fg:x="279035" fg:w="2927"/><text x="39.5742%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::compile::MaybeInst&gt; (712 samples, 0.10%)</title><rect x="39.6364%" y="277" width="0.1003%" height="15" fill="rgb(223,209,46)" fg:x="281250" fg:w="712"/><text x="39.8864%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (147 samples, 0.02%)</title><rect x="39.8520%" y="309" width="0.0207%" height="15" fill="rgb(250,43,18)" fg:x="282780" fg:w="147"/><text x="40.1020%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (97 samples, 0.01%)</title><rect x="40.1724%" y="245" width="0.0137%" height="15" fill="rgb(208,13,10)" fg:x="285053" fg:w="97"/><text x="40.4224%" y="255.50"></text></g><g><title>alloc::alloc::Global::grow_impl (94 samples, 0.01%)</title><rect x="40.1728%" y="229" width="0.0132%" height="15" fill="rgb(212,200,36)" fg:x="285056" fg:w="94"/><text x="40.4228%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (132 samples, 0.02%)</title><rect x="40.1704%" y="261" width="0.0186%" height="15" fill="rgb(225,90,30)" fg:x="285039" fg:w="132"/><text x="40.4204%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (251 samples, 0.04%)</title><rect x="40.1624%" y="277" width="0.0354%" height="15" fill="rgb(236,182,39)" fg:x="284982" fg:w="251"/><text x="40.4124%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (263 samples, 0.04%)</title><rect x="40.1621%" y="293" width="0.0371%" height="15" fill="rgb(212,144,35)" fg:x="284980" fg:w="263"/><text x="40.4121%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (421 samples, 0.06%)</title><rect x="40.2523%" y="277" width="0.0593%" height="15" fill="rgb(228,63,44)" fg:x="285620" fg:w="421"/><text x="40.5023%" y="287.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (154 samples, 0.02%)</title><rect x="40.2899%" y="261" width="0.0217%" height="15" fill="rgb(228,109,6)" fg:x="285887" fg:w="154"/><text x="40.5399%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1,647 samples, 0.23%)</title><rect x="40.1991%" y="293" width="0.2321%" height="15" fill="rgb(238,117,24)" fg:x="285243" fg:w="1647"/><text x="40.4491%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (849 samples, 0.12%)</title><rect x="40.3116%" y="277" width="0.1196%" height="15" fill="rgb(242,26,26)" fg:x="286041" fg:w="849"/><text x="40.5616%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (452 samples, 0.06%)</title><rect x="40.3675%" y="261" width="0.0637%" height="15" fill="rgb(221,92,48)" fg:x="286438" fg:w="452"/><text x="40.6175%" y="271.50"></text></g><g><title>&lt;unknown @ 0x555555617090&gt; (89 samples, 0.01%)</title><rect x="40.4608%" y="277" width="0.0125%" height="15" fill="rgb(209,209,32)" fg:x="287100" fg:w="89"/><text x="40.7108%" y="287.50"></text></g><g><title>regex::compile::Compiler::push_split_hole (5,608 samples, 0.79%)</title><rect x="39.7367%" y="325" width="0.7903%" height="15" fill="rgb(221,70,22)" fg:x="281962" fg:w="5608"/><text x="39.9867%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4,643 samples, 0.65%)</title><rect x="39.8727%" y="309" width="0.6543%" height="15" fill="rgb(248,145,5)" fg:x="282927" fg:w="4643"/><text x="40.1227%" y="319.50"></text></g><g><title>core::ptr::write (680 samples, 0.10%)</title><rect x="40.4312%" y="293" width="0.0958%" height="15" fill="rgb(226,116,26)" fg:x="286890" fg:w="680"/><text x="40.6812%" y="303.50"></text></g><g><title>regex_syntax::hir::ClassUnicodeRange::end (138 samples, 0.02%)</title><rect x="40.5275%" y="325" width="0.0194%" height="15" fill="rgb(244,5,17)" fg:x="287573" fg:w="138"/><text x="40.7775%" y="335.50"></text></g><g><title>regex_syntax::hir::ClassUnicodeRange::start (115 samples, 0.02%)</title><rect x="40.5469%" y="325" width="0.0162%" height="15" fill="rgb(252,159,33)" fg:x="287711" fg:w="115"/><text x="40.7969%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (350 samples, 0.05%)</title><rect x="40.8461%" y="261" width="0.0493%" height="15" fill="rgb(206,71,0)" fg:x="289834" fg:w="350"/><text x="41.0961%" y="271.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (144 samples, 0.02%)</title><rect x="40.8752%" y="245" width="0.0203%" height="15" fill="rgb(233,118,54)" fg:x="290040" fg:w="144"/><text x="41.1252%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1,355 samples, 0.19%)</title><rect x="40.8075%" y="277" width="0.1910%" height="15" fill="rgb(234,83,48)" fg:x="289560" fg:w="1355"/><text x="41.0575%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (731 samples, 0.10%)</title><rect x="40.8955%" y="261" width="0.1030%" height="15" fill="rgb(228,3,54)" fg:x="290184" fg:w="731"/><text x="41.1455%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (395 samples, 0.06%)</title><rect x="40.9428%" y="245" width="0.0557%" height="15" fill="rgb(226,155,13)" fg:x="290520" fg:w="395"/><text x="41.1928%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (3,292 samples, 0.46%)</title><rect x="40.6302%" y="309" width="0.4639%" height="15" fill="rgb(241,28,37)" fg:x="288302" fg:w="3292"/><text x="40.8802%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (3,081 samples, 0.43%)</title><rect x="40.6600%" y="293" width="0.4342%" height="15" fill="rgb(233,93,10)" fg:x="288513" fg:w="3081"/><text x="40.9100%" y="303.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (679 samples, 0.10%)</title><rect x="40.9985%" y="277" width="0.0957%" height="15" fill="rgb(225,113,19)" fg:x="290915" fg:w="679"/><text x="41.2485%" y="287.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (316 samples, 0.04%)</title><rect x="41.0496%" y="261" width="0.0445%" height="15" fill="rgb(241,2,18)" fg:x="291278" fg:w="316"/><text x="41.2996%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (352 samples, 0.05%)</title><rect x="41.4271%" y="261" width="0.0496%" height="15" fill="rgb(228,207,21)" fg:x="293956" fg:w="352"/><text x="41.6771%" y="271.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (125 samples, 0.02%)</title><rect x="41.4590%" y="245" width="0.0176%" height="15" fill="rgb(213,211,35)" fg:x="294183" fg:w="125"/><text x="41.7090%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1,326 samples, 0.19%)</title><rect x="41.3856%" y="277" width="0.1869%" height="15" fill="rgb(209,83,10)" fg:x="293662" fg:w="1326"/><text x="41.6356%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (680 samples, 0.10%)</title><rect x="41.4767%" y="261" width="0.0958%" height="15" fill="rgb(209,164,1)" fg:x="294308" fg:w="680"/><text x="41.7267%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (340 samples, 0.05%)</title><rect x="41.5246%" y="245" width="0.0479%" height="15" fill="rgb(213,184,43)" fg:x="294648" fg:w="340"/><text x="41.7746%" y="255.50"></text></g><g><title>regex::compile::CompileClass::compile (261,841 samples, 36.90%)</title><rect x="4.6986%" y="341" width="36.9011%" height="15" fill="rgb(231,61,34)" fg:x="33340" fg:w="261841"/><text x="4.9486%" y="351.50">regex::compile::CompileClass::compile</text></g><g><title>regex_syntax::utf8::Utf8Sequences::reset (7,355 samples, 1.04%)</title><rect x="40.5632%" y="325" width="1.0365%" height="15" fill="rgb(235,75,3)" fg:x="287826" fg:w="7355"/><text x="40.8132%" y="335.50"></text></g><g><title>regex_syntax::utf8::Utf8Sequences::push (3,587 samples, 0.51%)</title><rect x="41.0942%" y="309" width="0.5055%" height="15" fill="rgb(220,106,47)" fg:x="291594" fg:w="3587"/><text x="41.3442%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3,198 samples, 0.45%)</title><rect x="41.1490%" y="293" width="0.4507%" height="15" fill="rgb(210,196,33)" fg:x="291983" fg:w="3198"/><text x="41.3990%" y="303.50"></text></g><g><title>core::ptr::write (193 samples, 0.03%)</title><rect x="41.5725%" y="277" width="0.0272%" height="15" fill="rgb(229,154,42)" fg:x="294988" fg:w="193"/><text x="41.8225%" y="287.50"></text></g><g><title>regex::compile::Compiler::c_class (266,125 samples, 37.50%)</title><rect x="4.0967%" y="357" width="37.5048%" height="15" fill="rgb(228,114,26)" fg:x="29069" fg:w="266125"/><text x="4.3467%" y="367.50">regex::compile::Compiler::c_class</text></g><g><title>regex::compile::Compiler::c (266,138 samples, 37.51%)</title><rect x="4.0964%" y="373" width="37.5067%" height="15" fill="rgb(208,144,1)" fg:x="29067" fg:w="266138"/><text x="4.3464%" y="383.50">regex::compile::Compiler::c</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,579 samples, 0.22%)</title><rect x="41.6820%" y="341" width="0.2225%" height="15" fill="rgb(239,112,37)" fg:x="295765" fg:w="1579"/><text x="41.9320%" y="351.50"></text></g><g><title>core::ptr::read (773 samples, 0.11%)</title><rect x="41.7956%" y="325" width="0.1089%" height="15" fill="rgb(210,96,50)" fg:x="296571" fg:w="773"/><text x="42.0456%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (137 samples, 0.02%)</title><rect x="42.0545%" y="277" width="0.0193%" height="15" fill="rgb(222,178,2)" fg:x="298408" fg:w="137"/><text x="42.3045%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (501 samples, 0.07%)</title><rect x="42.0371%" y="293" width="0.0706%" height="15" fill="rgb(226,74,18)" fg:x="298285" fg:w="501"/><text x="42.2871%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (241 samples, 0.03%)</title><rect x="42.0738%" y="277" width="0.0340%" height="15" fill="rgb(225,67,54)" fg:x="298545" fg:w="241"/><text x="42.3238%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (117 samples, 0.02%)</title><rect x="42.0913%" y="261" width="0.0165%" height="15" fill="rgb(251,92,32)" fg:x="298669" fg:w="117"/><text x="42.3413%" y="271.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (292 samples, 0.04%)</title><rect x="42.1297%" y="277" width="0.0412%" height="15" fill="rgb(228,149,22)" fg:x="298942" fg:w="292"/><text x="42.3797%" y="287.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (130 samples, 0.02%)</title><rect x="42.1526%" y="261" width="0.0183%" height="15" fill="rgb(243,54,13)" fg:x="299104" fg:w="130"/><text x="42.4026%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,186 samples, 0.17%)</title><rect x="42.0122%" y="309" width="0.1671%" height="15" fill="rgb(243,180,28)" fg:x="298108" fg:w="1186"/><text x="42.2622%" y="319.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (508 samples, 0.07%)</title><rect x="42.1077%" y="293" width="0.0716%" height="15" fill="rgb(208,167,24)" fg:x="298786" fg:w="508"/><text x="42.3577%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1,805 samples, 0.25%)</title><rect x="41.9748%" y="325" width="0.2544%" height="15" fill="rgb(245,73,45)" fg:x="297843" fg:w="1805"/><text x="42.2248%" y="335.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (354 samples, 0.05%)</title><rect x="42.1793%" y="309" width="0.0499%" height="15" fill="rgb(237,203,48)" fg:x="299294" fg:w="354"/><text x="42.4293%" y="319.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (199 samples, 0.03%)</title><rect x="42.2012%" y="293" width="0.0280%" height="15" fill="rgb(211,197,16)" fg:x="299449" fg:w="199"/><text x="42.4512%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::compile::MaybeInst&gt; (429 samples, 0.06%)</title><rect x="42.3236%" y="309" width="0.0605%" height="15" fill="rgb(243,99,51)" fg:x="300318" fg:w="429"/><text x="42.5736%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::compile::InstHole&gt; (195 samples, 0.03%)</title><rect x="42.3566%" y="293" width="0.0275%" height="15" fill="rgb(215,123,29)" fg:x="300552" fg:w="195"/><text x="42.6066%" y="303.50"></text></g><g><title>regex::compile::Compiler::fill (3,733 samples, 0.53%)</title><rect x="41.9073%" y="341" width="0.5261%" height="15" fill="rgb(239,186,37)" fg:x="297364" fg:w="3733"/><text x="42.1573%" y="351.50"></text></g><g><title>regex::compile::MaybeInst::fill (1,449 samples, 0.20%)</title><rect x="42.2292%" y="325" width="0.2042%" height="15" fill="rgb(252,136,39)" fg:x="299648" fg:w="1449"/><text x="42.4792%" y="335.50"></text></g><g><title>regex::compile::InstHole::fill (350 samples, 0.05%)</title><rect x="42.3841%" y="309" width="0.0493%" height="15" fill="rgb(223,213,32)" fg:x="300747" fg:w="350"/><text x="42.6341%" y="319.50"></text></g><g><title>regex::compile::Compiler::fill_to_next (5,927 samples, 0.84%)</title><rect x="41.6052%" y="373" width="0.8353%" height="15" fill="rgb(233,115,5)" fg:x="295220" fg:w="5927"/><text x="41.8552%" y="383.50"></text></g><g><title>regex::compile::Compiler::fill (5,926 samples, 0.84%)</title><rect x="41.6053%" y="357" width="0.8351%" height="15" fill="rgb(207,226,44)" fg:x="295221" fg:w="5926"/><text x="41.8553%" y="367.50"></text></g><g><title>regex::compile::Compiler::c_repeat (272,103 samples, 38.35%)</title><rect x="4.0947%" y="405" width="38.3473%" height="15" fill="rgb(208,126,0)" fg:x="29055" fg:w="272103"/><text x="4.3447%" y="415.50">regex::compile::Compiler::c_repeat</text></g><g><title>regex::compile::Compiler::c_repeat_one_or_more (272,100 samples, 38.35%)</title><rect x="4.0951%" y="389" width="38.3469%" height="15" fill="rgb(244,66,21)" fg:x="29058" fg:w="272100"/><text x="4.3451%" y="399.50">regex::compile::Compiler::c_repeat_one_or_more</text></g><g><title>regex::compile::Compiler::c (272,243 samples, 38.37%)</title><rect x="4.0758%" y="421" width="38.3671%" height="15" fill="rgb(222,97,12)" fg:x="28921" fg:w="272243"/><text x="4.3258%" y="431.50">regex::compile::Compiler::c</text></g><g><title>regex::compile::Compiler::c_concat (272,339 samples, 38.38%)</title><rect x="4.0660%" y="437" width="38.3806%" height="15" fill="rgb(219,213,19)" fg:x="28851" fg:w="272339"/><text x="4.3160%" y="447.50">regex::compile::Compiler::c_concat</text></g><g><title>regex::compile::Compiler::c (272,354 samples, 38.38%)</title><rect x="4.0645%" y="453" width="38.3827%" height="15" fill="rgb(252,169,30)" fg:x="28841" fg:w="272354"/><text x="4.3145%" y="463.50">regex::compile::Compiler::c</text></g><g><title>regex::compile::Compiler::c_capture (272,399 samples, 38.39%)</title><rect x="4.0633%" y="469" width="38.3890%" height="15" fill="rgb(206,32,51)" fg:x="28832" fg:w="272399"/><text x="4.3133%" y="479.50">regex::compile::Compiler::c_capture</text></g><g><title>&lt;unknown @ 0x555555617090&gt; (157 samples, 0.02%)</title><rect x="43.3117%" y="309" width="0.0221%" height="15" fill="rgb(250,172,42)" fg:x="307329" fg:w="157"/><text x="43.5617%" y="319.50"></text></g><g><title>&lt;unknown @ 0x7ffff7dbd6e7&gt; (71 samples, 0.01%)</title><rect x="43.3510%" y="309" width="0.0100%" height="15" fill="rgb(209,34,43)" fg:x="307608" fg:w="71"/><text x="43.6010%" y="319.50"></text></g><g><title>&lt;unknown @ 0x555555617090&gt; (741 samples, 0.10%)</title><rect x="43.7470%" y="293" width="0.1044%" height="15" fill="rgb(223,11,35)" fg:x="310418" fg:w="741"/><text x="43.9970%" y="303.50"></text></g><g><title>&lt;unknown @ 0x7ffff7dbd6e0&gt; (374 samples, 0.05%)</title><rect x="43.8515%" y="293" width="0.0527%" height="15" fill="rgb(251,219,26)" fg:x="311159" fg:w="374"/><text x="44.1015%" y="303.50"></text></g><g><title>&lt;unknown @ 0x7ffff7dbd6e4&gt; (289 samples, 0.04%)</title><rect x="43.9042%" y="293" width="0.0407%" height="15" fill="rgb(231,119,3)" fg:x="311533" fg:w="289"/><text x="44.1542%" y="303.50"></text></g><g><title>&lt;unknown @ 0x7ffff7dbd6e7&gt; (265 samples, 0.04%)</title><rect x="43.9449%" y="293" width="0.0373%" height="15" fill="rgb(216,97,11)" fg:x="311822" fg:w="265"/><text x="44.1949%" y="303.50"></text></g><g><title>&lt;unknown @ 0x7ffff7dbd6eb&gt; (288 samples, 0.04%)</title><rect x="43.9822%" y="293" width="0.0406%" height="15" fill="rgb(223,59,9)" fg:x="312087" fg:w="288"/><text x="44.2322%" y="303.50"></text></g><g><title>&lt;unknown @ 0x7ffff7dbd6ed&gt; (255 samples, 0.04%)</title><rect x="44.0228%" y="293" width="0.0359%" height="15" fill="rgb(233,93,31)" fg:x="312375" fg:w="255"/><text x="44.2728%" y="303.50"></text></g><g><title>&lt;unknown @ 0x7ffff7dbd6f1&gt; (278 samples, 0.04%)</title><rect x="44.0588%" y="293" width="0.0392%" height="15" fill="rgb(239,81,33)" fg:x="312630" fg:w="278"/><text x="44.3088%" y="303.50"></text></g><g><title>&lt;unknown @ 0x7ffff7dbd6f7&gt; (287 samples, 0.04%)</title><rect x="44.0979%" y="293" width="0.0404%" height="15" fill="rgb(213,120,34)" fg:x="312908" fg:w="287"/><text x="44.3479%" y="303.50"></text></g><g><title>&lt;unknown @ 0x7ffff7dbd6fb&gt; (249 samples, 0.04%)</title><rect x="44.1384%" y="293" width="0.0351%" height="15" fill="rgb(243,49,53)" fg:x="313195" fg:w="249"/><text x="44.3884%" y="303.50"></text></g><g><title>&lt;unknown @ 0x7ffff7dbd701&gt; (275 samples, 0.04%)</title><rect x="44.1735%" y="293" width="0.0388%" height="15" fill="rgb(247,216,33)" fg:x="313444" fg:w="275"/><text x="44.4235%" y="303.50"></text></g><g><title>&lt;unknown @ 0x7ffff7dbd705&gt; (242 samples, 0.03%)</title><rect x="44.2122%" y="293" width="0.0341%" height="15" fill="rgb(226,26,14)" fg:x="313719" fg:w="242"/><text x="44.4622%" y="303.50"></text></g><g><title>&lt;unknown @ 0x7ffff7dbd70b&gt; (241 samples, 0.03%)</title><rect x="44.2463%" y="293" width="0.0340%" height="15" fill="rgb(215,49,53)" fg:x="313961" fg:w="241"/><text x="44.4963%" y="303.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (10,189 samples, 1.44%)</title><rect x="42.8831%" y="325" width="1.4359%" height="15" fill="rgb(245,162,40)" fg:x="304288" fg:w="10189"/><text x="43.1331%" y="335.50"></text></g><g><title>core::ptr::read (6,255 samples, 0.88%)</title><rect x="43.4376%" y="309" width="0.8815%" height="15" fill="rgb(229,68,17)" fg:x="308222" fg:w="6255"/><text x="43.6876%" y="319.50"></text></g><g><title>&lt;unknown @ 0x7ffff7dbd70e&gt; (275 samples, 0.04%)</title><rect x="44.2803%" y="293" width="0.0388%" height="15" fill="rgb(213,182,10)" fg:x="314202" fg:w="275"/><text x="44.5303%" y="303.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (469 samples, 0.07%)</title><rect x="45.1975%" y="277" width="0.0661%" height="15" fill="rgb(245,125,30)" fg:x="320710" fg:w="469"/><text x="45.4475%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (4,883 samples, 0.69%)</title><rect x="44.6855%" y="309" width="0.6882%" height="15" fill="rgb(232,202,2)" fg:x="317077" fg:w="4883"/><text x="44.9355%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (3,383 samples, 0.48%)</title><rect x="44.8969%" y="293" width="0.4768%" height="15" fill="rgb(237,140,51)" fg:x="318577" fg:w="3383"/><text x="45.1469%" y="303.50"></text></g><g><title>core::ptr::write (781 samples, 0.11%)</title><rect x="45.2636%" y="277" width="0.1101%" height="15" fill="rgb(236,157,25)" fg:x="321179" fg:w="781"/><text x="45.5136%" y="287.50"></text></g><g><title>&lt;unknown @ 0x555555617090&gt; (160 samples, 0.02%)</title><rect x="45.5471%" y="293" width="0.0225%" height="15" fill="rgb(219,209,0)" fg:x="323191" fg:w="160"/><text x="45.7971%" y="303.50"></text></g><g><title>&lt;unknown @ 0x7ffff7dbd6e0&gt; (105 samples, 0.01%)</title><rect x="45.5697%" y="293" width="0.0148%" height="15" fill="rgb(240,116,54)" fg:x="323351" fg:w="105"/><text x="45.8197%" y="303.50"></text></g><g><title>&lt;unknown @ 0x7ffff7dbd6e4&gt; (80 samples, 0.01%)</title><rect x="45.5845%" y="293" width="0.0113%" height="15" fill="rgb(216,10,36)" fg:x="323456" fg:w="80"/><text x="45.8345%" y="303.50"></text></g><g><title>&lt;unknown @ 0x7ffff7dbd6ed&gt; (84 samples, 0.01%)</title><rect x="45.6107%" y="293" width="0.0118%" height="15" fill="rgb(222,72,44)" fg:x="323642" fg:w="84"/><text x="45.8607%" y="303.50"></text></g><g><title>&lt;unknown @ 0x7ffff7dbd6f1&gt; (72 samples, 0.01%)</title><rect x="45.6225%" y="293" width="0.0101%" height="15" fill="rgb(232,159,9)" fg:x="323726" fg:w="72"/><text x="45.8725%" y="303.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (11,695 samples, 1.65%)</title><rect x="44.3191%" y="325" width="1.6482%" height="15" fill="rgb(210,39,32)" fg:x="314477" fg:w="11695"/><text x="44.5691%" y="335.50"></text></g><g><title>regex::compile::Compiler::compile_finish::{{closure}} (4,212 samples, 0.59%)</title><rect x="45.3736%" y="309" width="0.5936%" height="15" fill="rgb(216,194,45)" fg:x="321960" fg:w="4212"/><text x="45.6236%" y="319.50"></text></g><g><title>regex::compile::MaybeInst::unwrap (2,024 samples, 0.29%)</title><rect x="45.6820%" y="293" width="0.2852%" height="15" fill="rgb(218,18,35)" fg:x="324148" fg:w="2024"/><text x="45.9320%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (24,927 samples, 3.51%)</title><rect x="42.4611%" y="389" width="3.5129%" height="15" fill="rgb(207,83,51)" fg:x="301293" fg:w="24927"/><text x="42.7111%" y="399.50">&lt;al..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (24,919 samples, 3.51%)</title><rect x="42.4622%" y="373" width="3.5118%" height="15" fill="rgb(225,63,43)" fg:x="301301" fg:w="24919"/><text x="42.7122%" y="383.50">cor..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24,917 samples, 3.51%)</title><rect x="42.4625%" y="357" width="3.5115%" height="15" fill="rgb(207,57,36)" fg:x="301303" fg:w="24917"/><text x="42.7125%" y="367.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (24,915 samples, 3.51%)</title><rect x="42.4627%" y="341" width="3.5113%" height="15" fill="rgb(216,99,33)" fg:x="301305" fg:w="24915"/><text x="42.7127%" y="351.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (24,983 samples, 3.52%)</title><rect x="42.4601%" y="453" width="3.5208%" height="15" fill="rgb(225,42,16)" fg:x="301286" fg:w="24983"/><text x="42.7101%" y="463.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (24,982 samples, 3.52%)</title><rect x="42.4602%" y="437" width="3.5207%" height="15" fill="rgb(220,201,45)" fg:x="301287" fg:w="24982"/><text x="42.7102%" y="447.50">&lt;al..</text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (24,981 samples, 3.52%)</title><rect x="42.4603%" y="421" width="3.5206%" height="15" fill="rgb(225,33,4)" fg:x="301288" fg:w="24981"/><text x="42.7103%" y="431.50">all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (24,979 samples, 3.52%)</title><rect x="42.4606%" y="405" width="3.5203%" height="15" fill="rgb(224,33,50)" fg:x="301290" fg:w="24979"/><text x="42.7106%" y="415.50">&lt;al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (146 samples, 0.02%)</title><rect x="46.1493%" y="389" width="0.0206%" height="15" fill="rgb(246,198,51)" fg:x="327464" fg:w="146"/><text x="46.3993%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (554 samples, 0.08%)</title><rect x="46.1348%" y="405" width="0.0781%" height="15" fill="rgb(205,22,4)" fg:x="327361" fg:w="554"/><text x="46.3848%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (305 samples, 0.04%)</title><rect x="46.1699%" y="389" width="0.0430%" height="15" fill="rgb(206,3,8)" fg:x="327610" fg:w="305"/><text x="46.4199%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (155 samples, 0.02%)</title><rect x="46.1910%" y="373" width="0.0218%" height="15" fill="rgb(251,23,15)" fg:x="327760" fg:w="155"/><text x="46.4410%" y="383.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (272 samples, 0.04%)</title><rect x="46.2413%" y="389" width="0.0383%" height="15" fill="rgb(252,88,28)" fg:x="328117" fg:w="272"/><text x="46.4913%" y="399.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (111 samples, 0.02%)</title><rect x="46.2640%" y="373" width="0.0156%" height="15" fill="rgb(212,127,14)" fg:x="328278" fg:w="111"/><text x="46.5140%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,280 samples, 0.18%)</title><rect x="46.1058%" y="421" width="0.1804%" height="15" fill="rgb(247,145,37)" fg:x="327155" fg:w="1280"/><text x="46.3558%" y="431.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (520 samples, 0.07%)</title><rect x="46.2129%" y="405" width="0.0733%" height="15" fill="rgb(209,117,53)" fg:x="327915" fg:w="520"/><text x="46.4629%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1,899 samples, 0.27%)</title><rect x="46.0663%" y="437" width="0.2676%" height="15" fill="rgb(212,90,42)" fg:x="326875" fg:w="1899"/><text x="46.3163%" y="447.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (339 samples, 0.05%)</title><rect x="46.2862%" y="421" width="0.0478%" height="15" fill="rgb(218,164,37)" fg:x="328435" fg:w="339"/><text x="46.5362%" y="431.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (198 samples, 0.03%)</title><rect x="46.3060%" y="405" width="0.0279%" height="15" fill="rgb(246,65,34)" fg:x="328576" fg:w="198"/><text x="46.5560%" y="415.50"></text></g><g><title>core::num::&lt;impl u8&gt;::checked_add (90 samples, 0.01%)</title><rect x="46.3393%" y="437" width="0.0127%" height="15" fill="rgb(231,100,33)" fg:x="328812" fg:w="90"/><text x="46.5893%" y="447.50"></text></g><g><title>regex::compile::Compiler::compile_finish (27,704 samples, 3.90%)</title><rect x="42.4523%" y="469" width="3.9043%" height="15" fill="rgb(228,126,14)" fg:x="301231" fg:w="27704"/><text x="42.7023%" y="479.50">rege..</text></g><g><title>regex::compile::ByteClassSet::byte_classes (2,570 samples, 0.36%)</title><rect x="45.9944%" y="453" width="0.3622%" height="15" fill="rgb(215,173,21)" fg:x="326365" fg:w="2570"/><text x="46.2444%" y="463.50"></text></g><g><title>regex::compile::Compiler::compile (300,273 samples, 42.32%)</title><rect x="4.0428%" y="501" width="42.3173%" height="15" fill="rgb(210,6,40)" fg:x="28687" fg:w="300273"/><text x="4.2928%" y="511.50">regex::compile::Compiler::compile</text></g><g><title>regex::compile::Compiler::compile_one (300,261 samples, 42.32%)</title><rect x="4.0445%" y="485" width="42.3156%" height="15" fill="rgb(212,48,18)" fg:x="28699" fg:w="300261"/><text x="4.2945%" y="495.50">regex::compile::Compiler::compile_one</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (72 samples, 0.01%)</title><rect x="46.3680%" y="469" width="0.0101%" height="15" fill="rgb(230,214,11)" fg:x="329016" fg:w="72"/><text x="46.6180%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (72 samples, 0.01%)</title><rect x="46.3680%" y="453" width="0.0101%" height="15" fill="rgb(254,105,39)" fg:x="329016" fg:w="72"/><text x="46.6180%" y="463.50"></text></g><g><title>regex::compile::SuffixCache::new (160 samples, 0.02%)</title><rect x="46.3640%" y="485" width="0.0225%" height="15" fill="rgb(245,158,5)" fg:x="328987" fg:w="160"/><text x="46.6140%" y="495.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (123 samples, 0.02%)</title><rect x="46.4083%" y="389" width="0.0173%" height="15" fill="rgb(249,208,11)" fg:x="329302" fg:w="123"/><text x="46.6583%" y="399.50"></text></g><g><title>memchr::memmem::Finder::into_owned (145 samples, 0.02%)</title><rect x="46.4057%" y="421" width="0.0204%" height="15" fill="rgb(210,39,28)" fg:x="329283" fg:w="145"/><text x="46.6557%" y="431.50"></text></g><g><title>memchr::memmem::Searcher::into_owned (139 samples, 0.02%)</title><rect x="46.4065%" y="405" width="0.0196%" height="15" fill="rgb(211,56,53)" fg:x="329289" fg:w="139"/><text x="46.6565%" y="415.50"></text></g><g><title>regex::literal::imp::Memmem::new (242 samples, 0.03%)</title><rect x="46.4054%" y="437" width="0.0341%" height="15" fill="rgb(226,201,30)" fg:x="329281" fg:w="242"/><text x="46.6554%" y="447.50"></text></g><g><title>regex::literal::imp::LiteralSearcher::new (277 samples, 0.04%)</title><rect x="46.4017%" y="453" width="0.0390%" height="15" fill="rgb(239,101,34)" fg:x="329255" fg:w="277"/><text x="46.6517%" y="463.50"></text></g><g><title>regex::literal::imp::LiteralSearcher::empty (279 samples, 0.04%)</title><rect x="46.4016%" y="469" width="0.0393%" height="15" fill="rgb(226,209,5)" fg:x="329254" fg:w="279"/><text x="46.6516%" y="479.50"></text></g><g><title>regex::prog::Program::new (430 samples, 0.06%)</title><rect x="46.3865%" y="485" width="0.0606%" height="15" fill="rgb(250,105,47)" fg:x="329147" fg:w="430"/><text x="46.6365%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (78 samples, 0.01%)</title><rect x="46.4488%" y="421" width="0.0110%" height="15" fill="rgb(230,72,3)" fg:x="329589" fg:w="78"/><text x="46.6988%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (83 samples, 0.01%)</title><rect x="46.4485%" y="437" width="0.0117%" height="15" fill="rgb(232,218,39)" fg:x="329587" fg:w="83"/><text x="46.6985%" y="447.50"></text></g><g><title>regex_syntax::utf8::Utf8Sequences::new (97 samples, 0.01%)</title><rect x="46.4471%" y="485" width="0.0137%" height="15" fill="rgb(248,166,6)" fg:x="329577" fg:w="97"/><text x="46.6971%" y="495.50"></text></g><g><title>regex_syntax::utf8::Utf8Sequences::push (94 samples, 0.01%)</title><rect x="46.4475%" y="469" width="0.0132%" height="15" fill="rgb(247,89,20)" fg:x="329580" fg:w="94"/><text x="46.6975%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (93 samples, 0.01%)</title><rect x="46.4477%" y="453" width="0.0131%" height="15" fill="rgb(248,130,54)" fg:x="329581" fg:w="93"/><text x="46.6977%" y="463.50"></text></g><g><title>regex::compile::Compiler::new (737 samples, 0.10%)</title><rect x="46.3614%" y="501" width="0.1039%" height="15" fill="rgb(234,196,4)" fg:x="328969" fg:w="737"/><text x="46.6114%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (415 samples, 0.06%)</title><rect x="46.7340%" y="197" width="0.0585%" height="15" fill="rgb(250,143,31)" fg:x="331613" fg:w="415"/><text x="46.9840%" y="207.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (216 samples, 0.03%)</title><rect x="46.7621%" y="181" width="0.0304%" height="15" fill="rgb(211,110,34)" fg:x="331812" fg:w="216"/><text x="47.0121%" y="191.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (419 samples, 0.06%)</title><rect x="46.7925%" y="197" width="0.0590%" height="15" fill="rgb(215,124,48)" fg:x="332028" fg:w="419"/><text x="47.0425%" y="207.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (206 samples, 0.03%)</title><rect x="46.8225%" y="181" width="0.0290%" height="15" fill="rgb(216,46,13)" fg:x="332241" fg:w="206"/><text x="47.0725%" y="191.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (305 samples, 0.04%)</title><rect x="46.8516%" y="197" width="0.0430%" height="15" fill="rgb(205,184,25)" fg:x="332447" fg:w="305"/><text x="47.1016%" y="207.50"></text></g><g><title>&lt;regex_syntax::hir::ClassUnicodeIter as core::iter::traits::iterator::Iterator&gt;::next (2,374 samples, 0.33%)</title><rect x="46.5714%" y="245" width="0.3346%" height="15" fill="rgb(228,1,10)" fg:x="330459" fg:w="2374"/><text x="46.8214%" y="255.50"></text></g><g><title>&lt;regex_syntax::hir::interval::IntervalSetIter&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,256 samples, 0.32%)</title><rect x="46.5880%" y="229" width="0.3179%" height="15" fill="rgb(213,116,27)" fg:x="330577" fg:w="2256"/><text x="46.8380%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,138 samples, 0.30%)</title><rect x="46.6047%" y="213" width="0.3013%" height="15" fill="rgb(241,95,50)" fg:x="330695" fg:w="2138"/><text x="46.8547%" y="223.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (81 samples, 0.01%)</title><rect x="46.8945%" y="197" width="0.0114%" height="15" fill="rgb(238,48,32)" fg:x="332752" fg:w="81"/><text x="47.1445%" y="207.50"></text></g><g><title>&lt;u32 as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (208 samples, 0.03%)</title><rect x="46.9719%" y="229" width="0.0293%" height="15" fill="rgb(235,113,49)" fg:x="333301" fg:w="208"/><text x="47.2219%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,939 samples, 0.56%)</title><rect x="46.4928%" y="309" width="0.5551%" height="15" fill="rgb(205,127,43)" fg:x="329901" fg:w="3939"/><text x="46.7428%" y="319.50"></text></g><g><title>&lt;u32 as core::iter::traits::accum::Sum&gt;::sum (3,938 samples, 0.55%)</title><rect x="46.4929%" y="293" width="0.5550%" height="15" fill="rgb(250,162,2)" fg:x="329902" fg:w="3938"/><text x="46.7429%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,938 samples, 0.55%)</title><rect x="46.4929%" y="277" width="0.5550%" height="15" fill="rgb(220,13,41)" fg:x="329902" fg:w="3938"/><text x="46.7429%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3,938 samples, 0.55%)</title><rect x="46.4929%" y="261" width="0.5550%" height="15" fill="rgb(249,221,25)" fg:x="329902" fg:w="3938"/><text x="46.7429%" y="271.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,007 samples, 0.14%)</title><rect x="46.9060%" y="245" width="0.1419%" height="15" fill="rgb(215,208,19)" fg:x="332833" fg:w="1007"/><text x="47.1560%" y="255.50"></text></g><g><title>regex_syntax::hir::literal::cls_char_count::{{closure}} (331 samples, 0.05%)</title><rect x="47.0012%" y="229" width="0.0466%" height="15" fill="rgb(236,175,2)" fg:x="333509" fg:w="331"/><text x="47.2512%" y="239.50"></text></g><g><title>regex_syntax::hir::literal::Literals::add_char_class (3,947 samples, 0.56%)</title><rect x="46.4923%" y="357" width="0.5562%" height="15" fill="rgb(241,52,2)" fg:x="329898" fg:w="3947"/><text x="46.7423%" y="367.50"></text></g><g><title>regex_syntax::hir::literal::Literals::_add_char_class (3,947 samples, 0.56%)</title><rect x="46.4923%" y="341" width="0.5562%" height="15" fill="rgb(248,140,14)" fg:x="329898" fg:w="3947"/><text x="46.7423%" y="351.50"></text></g><g><title>regex_syntax::hir::literal::cls_char_count (3,945 samples, 0.56%)</title><rect x="46.4926%" y="325" width="0.5560%" height="15" fill="rgb(253,22,42)" fg:x="329900" fg:w="3945"/><text x="46.7426%" y="335.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,959 samples, 0.56%)</title><rect x="46.4921%" y="389" width="0.5579%" height="15" fill="rgb(234,61,47)" fg:x="329896" fg:w="3959"/><text x="46.7421%" y="399.50"></text></g><g><title>regex_syntax::hir::literal::prefixes (3,959 samples, 0.56%)</title><rect x="46.4921%" y="373" width="0.5579%" height="15" fill="rgb(208,226,15)" fg:x="329896" fg:w="3959"/><text x="46.7421%" y="383.50"></text></g><g><title>regex_syntax::hir::literal::Literals::union_prefixes (4,078 samples, 0.57%)</title><rect x="46.4770%" y="453" width="0.5747%" height="15" fill="rgb(217,221,4)" fg:x="329789" fg:w="4078"/><text x="46.7270%" y="463.50"></text></g><g><title>regex_syntax::hir::literal::prefixes (4,043 samples, 0.57%)</title><rect x="46.4819%" y="437" width="0.5698%" height="15" fill="rgb(212,174,34)" fg:x="329824" fg:w="4043"/><text x="46.7319%" y="447.50"></text></g><g><title>regex_syntax::hir::literal::prefixes (3,971 samples, 0.56%)</title><rect x="46.4921%" y="421" width="0.5596%" height="15" fill="rgb(253,83,4)" fg:x="329896" fg:w="3971"/><text x="46.7421%" y="431.50"></text></g><g><title>regex_syntax::hir::literal::repeat_one_or_more_literals (3,971 samples, 0.56%)</title><rect x="46.4921%" y="405" width="0.5596%" height="15" fill="rgb(250,195,49)" fg:x="329896" fg:w="3971"/><text x="46.7421%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (374 samples, 0.05%)</title><rect x="47.3144%" y="197" width="0.0527%" height="15" fill="rgb(241,192,25)" fg:x="335731" fg:w="374"/><text x="47.5644%" y="207.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (177 samples, 0.02%)</title><rect x="47.3421%" y="181" width="0.0249%" height="15" fill="rgb(208,124,10)" fg:x="335928" fg:w="177"/><text x="47.5921%" y="191.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (447 samples, 0.06%)</title><rect x="47.3671%" y="197" width="0.0630%" height="15" fill="rgb(222,33,0)" fg:x="336105" fg:w="447"/><text x="47.6171%" y="207.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (207 samples, 0.03%)</title><rect x="47.4009%" y="181" width="0.0292%" height="15" fill="rgb(234,209,28)" fg:x="336345" fg:w="207"/><text x="47.6509%" y="191.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (299 samples, 0.04%)</title><rect x="47.4301%" y="197" width="0.0421%" height="15" fill="rgb(224,11,23)" fg:x="336552" fg:w="299"/><text x="47.6801%" y="207.50"></text></g><g><title>&lt;regex_syntax::hir::ClassUnicodeIter as core::iter::traits::iterator::Iterator&gt;::next (2,405 samples, 0.34%)</title><rect x="47.1465%" y="245" width="0.3389%" height="15" fill="rgb(232,99,1)" fg:x="334540" fg:w="2405"/><text x="47.3965%" y="255.50"></text></g><g><title>&lt;regex_syntax::hir::interval::IntervalSetIter&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,289 samples, 0.32%)</title><rect x="47.1629%" y="229" width="0.3226%" height="15" fill="rgb(237,95,45)" fg:x="334656" fg:w="2289"/><text x="47.4129%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,159 samples, 0.30%)</title><rect x="47.1812%" y="213" width="0.3043%" height="15" fill="rgb(208,109,11)" fg:x="334786" fg:w="2159"/><text x="47.4312%" y="223.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (94 samples, 0.01%)</title><rect x="47.4722%" y="197" width="0.0132%" height="15" fill="rgb(216,190,48)" fg:x="336851" fg:w="94"/><text x="47.7222%" y="207.50"></text></g><g><title>&lt;u32 as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (188 samples, 0.03%)</title><rect x="47.5540%" y="229" width="0.0265%" height="15" fill="rgb(251,171,36)" fg:x="337431" fg:w="188"/><text x="47.8040%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,959 samples, 0.56%)</title><rect x="47.0742%" y="309" width="0.5579%" height="15" fill="rgb(230,62,22)" fg:x="334027" fg:w="3959"/><text x="47.3242%" y="319.50"></text></g><g><title>&lt;u32 as core::iter::traits::accum::Sum&gt;::sum (3,959 samples, 0.56%)</title><rect x="47.0742%" y="293" width="0.5579%" height="15" fill="rgb(225,114,35)" fg:x="334027" fg:w="3959"/><text x="47.3242%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,959 samples, 0.56%)</title><rect x="47.0742%" y="277" width="0.5579%" height="15" fill="rgb(215,118,42)" fg:x="334027" fg:w="3959"/><text x="47.3242%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3,959 samples, 0.56%)</title><rect x="47.0742%" y="261" width="0.5579%" height="15" fill="rgb(243,119,21)" fg:x="334027" fg:w="3959"/><text x="47.3242%" y="271.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,041 samples, 0.15%)</title><rect x="47.4855%" y="245" width="0.1467%" height="15" fill="rgb(252,177,53)" fg:x="336945" fg:w="1041"/><text x="47.7355%" y="255.50"></text></g><g><title>regex_syntax::hir::literal::cls_char_count::{{closure}} (367 samples, 0.05%)</title><rect x="47.5805%" y="229" width="0.0517%" height="15" fill="rgb(237,209,29)" fg:x="337619" fg:w="367"/><text x="47.8305%" y="239.50"></text></g><g><title>regex_syntax::hir::literal::Literals::add_char_class_reverse (3,967 samples, 0.56%)</title><rect x="47.0738%" y="357" width="0.5591%" height="15" fill="rgb(212,65,23)" fg:x="334024" fg:w="3967"/><text x="47.3238%" y="367.50"></text></g><g><title>regex_syntax::hir::literal::Literals::_add_char_class (3,967 samples, 0.56%)</title><rect x="47.0738%" y="341" width="0.5591%" height="15" fill="rgb(230,222,46)" fg:x="334024" fg:w="3967"/><text x="47.3238%" y="351.50"></text></g><g><title>regex_syntax::hir::literal::cls_char_count (3,966 samples, 0.56%)</title><rect x="47.0740%" y="325" width="0.5589%" height="15" fill="rgb(215,135,32)" fg:x="334025" fg:w="3966"/><text x="47.3240%" y="335.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,975 samples, 0.56%)</title><rect x="47.0737%" y="389" width="0.5602%" height="15" fill="rgb(246,101,22)" fg:x="334023" fg:w="3975"/><text x="47.3237%" y="399.50"></text></g><g><title>regex_syntax::hir::literal::suffixes (3,975 samples, 0.56%)</title><rect x="47.0737%" y="373" width="0.5602%" height="15" fill="rgb(206,107,13)" fg:x="334023" fg:w="3975"/><text x="47.3237%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (8,232 samples, 1.16%)</title><rect x="46.4750%" y="485" width="1.1601%" height="15" fill="rgb(250,100,44)" fg:x="329775" fg:w="8232"/><text x="46.7250%" y="495.50"></text></g><g><title>regex::exec::ExecBuilder::parse::{{closure}} (8,230 samples, 1.16%)</title><rect x="46.4753%" y="469" width="1.1598%" height="15" fill="rgb(231,147,38)" fg:x="329777" fg:w="8230"/><text x="46.7253%" y="479.50"></text></g><g><title>regex_syntax::hir::literal::Literals::union_suffixes (4,140 samples, 0.58%)</title><rect x="47.0517%" y="453" width="0.5834%" height="15" fill="rgb(229,8,40)" fg:x="333867" fg:w="4140"/><text x="47.3017%" y="463.50"></text></g><g><title>regex_syntax::hir::literal::suffixes (4,079 samples, 0.57%)</title><rect x="47.0603%" y="437" width="0.5749%" height="15" fill="rgb(221,135,30)" fg:x="333928" fg:w="4079"/><text x="47.3103%" y="447.50"></text></g><g><title>regex_syntax::hir::literal::suffixes (3,985 samples, 0.56%)</title><rect x="47.0735%" y="421" width="0.5616%" height="15" fill="rgb(249,193,18)" fg:x="334022" fg:w="3985"/><text x="47.3235%" y="431.50"></text></g><g><title>regex_syntax::hir::literal::repeat_one_or_more_literals (3,984 samples, 0.56%)</title><rect x="47.0737%" y="405" width="0.5615%" height="15" fill="rgb(209,133,39)" fg:x="334023" fg:w="3984"/><text x="47.3237%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (83 samples, 0.01%)</title><rect x="47.6456%" y="421" width="0.0117%" height="15" fill="rgb(232,100,14)" fg:x="338081" fg:w="83"/><text x="47.8956%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (85 samples, 0.01%)</title><rect x="47.6454%" y="437" width="0.0120%" height="15" fill="rgb(224,185,1)" fg:x="338080" fg:w="85"/><text x="47.8954%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (72 samples, 0.01%)</title><rect x="47.6711%" y="357" width="0.0101%" height="15" fill="rgb(223,139,8)" fg:x="338262" fg:w="72"/><text x="47.9211%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::Class&gt; (134 samples, 0.02%)</title><rect x="47.6705%" y="421" width="0.0189%" height="15" fill="rgb(232,213,38)" fg:x="338258" fg:w="134"/><text x="47.9205%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::ClassBracketed&gt; (134 samples, 0.02%)</title><rect x="47.6705%" y="405" width="0.0189%" height="15" fill="rgb(207,94,22)" fg:x="338258" fg:w="134"/><text x="47.9205%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::ClassSet&gt; (134 samples, 0.02%)</title><rect x="47.6705%" y="389" width="0.0189%" height="15" fill="rgb(219,183,54)" fg:x="338258" fg:w="134"/><text x="47.9205%" y="399.50"></text></g><g><title>&lt;regex_syntax::ast::ClassSet as core::ops::drop::Drop&gt;::drop (134 samples, 0.02%)</title><rect x="47.6705%" y="373" width="0.0189%" height="15" fill="rgb(216,185,54)" fg:x="338258" fg:w="134"/><text x="47.9205%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::Ast&gt; (344 samples, 0.05%)</title><rect x="47.6436%" y="469" width="0.0485%" height="15" fill="rgb(254,217,39)" fg:x="338067" fg:w="344"/><text x="47.8936%" y="479.50"></text></g><g><title>&lt;regex_syntax::ast::Ast as core::ops::drop::Drop&gt;::drop (344 samples, 0.05%)</title><rect x="47.6436%" y="453" width="0.0485%" height="15" fill="rgb(240,178,23)" fg:x="338067" fg:w="344"/><text x="47.8936%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::Ast&gt; (158 samples, 0.02%)</title><rect x="47.6698%" y="437" width="0.0223%" height="15" fill="rgb(218,11,47)" fg:x="338253" fg:w="158"/><text x="47.9198%" y="447.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::induct (96 samples, 0.01%)</title><rect x="47.7229%" y="373" width="0.0135%" height="15" fill="rgb(218,51,51)" fg:x="338630" fg:w="96"/><text x="47.9729%" y="383.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::visit_class (84 samples, 0.01%)</title><rect x="47.7246%" y="357" width="0.0118%" height="15" fill="rgb(238,126,27)" fg:x="338642" fg:w="84"/><text x="47.9746%" y="367.50"></text></g><g><title>regex_syntax::ast::parse::NestLimiter&lt;P&gt;::check (248 samples, 0.03%)</title><rect x="47.7038%" y="421" width="0.0350%" height="15" fill="rgb(249,202,22)" fg:x="338494" fg:w="248"/><text x="47.9538%" y="431.50"></text></g><g><title>regex_syntax::ast::visitor::visit (247 samples, 0.03%)</title><rect x="47.7039%" y="405" width="0.0348%" height="15" fill="rgb(254,195,49)" fg:x="338495" fg:w="247"/><text x="47.9539%" y="415.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::visit (226 samples, 0.03%)</title><rect x="47.7069%" y="389" width="0.0319%" height="15" fill="rgb(208,123,14)" fg:x="338516" fg:w="226"/><text x="47.9569%" y="399.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::bump (131 samples, 0.02%)</title><rect x="47.7530%" y="405" width="0.0185%" height="15" fill="rgb(224,200,8)" fg:x="338843" fg:w="131"/><text x="48.0030%" y="415.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_primitive (247 samples, 0.03%)</title><rect x="47.7524%" y="421" width="0.0348%" height="15" fill="rgb(217,61,36)" fg:x="338839" fg:w="247"/><text x="48.0024%" y="431.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::span_char (86 samples, 0.01%)</title><rect x="47.7751%" y="405" width="0.0121%" height="15" fill="rgb(206,35,45)" fg:x="339000" fg:w="86"/><text x="48.0251%" y="415.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char_at (73 samples, 0.01%)</title><rect x="47.7972%" y="389" width="0.0103%" height="15" fill="rgb(217,65,33)" fg:x="339157" fg:w="73"/><text x="48.0472%" y="399.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char (84 samples, 0.01%)</title><rect x="47.7966%" y="405" width="0.0118%" height="15" fill="rgb(222,158,48)" fg:x="339153" fg:w="84"/><text x="48.0466%" y="415.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char_at (78 samples, 0.01%)</title><rect x="47.8317%" y="325" width="0.0110%" height="15" fill="rgb(254,2,54)" fg:x="339402" fg:w="78"/><text x="48.0817%" y="335.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char (81 samples, 0.01%)</title><rect x="47.8317%" y="341" width="0.0114%" height="15" fill="rgb(250,143,38)" fg:x="339402" fg:w="81"/><text x="48.0817%" y="351.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::bump (140 samples, 0.02%)</title><rect x="47.8248%" y="357" width="0.0197%" height="15" fill="rgb(248,25,0)" fg:x="339353" fg:w="140"/><text x="48.0748%" y="367.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char_at (114 samples, 0.02%)</title><rect x="47.8701%" y="293" width="0.0161%" height="15" fill="rgb(206,152,27)" fg:x="339674" fg:w="114"/><text x="48.1201%" y="303.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char (125 samples, 0.02%)</title><rect x="47.8696%" y="309" width="0.0176%" height="15" fill="rgb(240,77,30)" fg:x="339671" fg:w="125"/><text x="48.1196%" y="319.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::bump (227 samples, 0.03%)</title><rect x="47.8572%" y="325" width="0.0320%" height="15" fill="rgb(231,5,3)" fg:x="339583" fg:w="227"/><text x="48.1072%" y="335.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::bump_and_bump_space (237 samples, 0.03%)</title><rect x="47.8571%" y="341" width="0.0334%" height="15" fill="rgb(207,226,32)" fg:x="339582" fg:w="237"/><text x="48.1071%" y="351.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char_at (131 samples, 0.02%)</title><rect x="47.8908%" y="325" width="0.0185%" height="15" fill="rgb(222,207,47)" fg:x="339821" fg:w="131"/><text x="48.1408%" y="335.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char (140 samples, 0.02%)</title><rect x="47.8905%" y="341" width="0.0197%" height="15" fill="rgb(229,115,45)" fg:x="339819" fg:w="140"/><text x="48.1405%" y="351.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_unicode_class (410 samples, 0.06%)</title><rect x="47.8527%" y="357" width="0.0578%" height="15" fill="rgb(224,191,6)" fg:x="339551" fg:w="410"/><text x="48.1027%" y="367.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_set_class_item (667 samples, 0.09%)</title><rect x="47.8169%" y="389" width="0.0940%" height="15" fill="rgb(230,227,24)" fg:x="339297" fg:w="667"/><text x="48.0669%" y="399.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_escape (625 samples, 0.09%)</title><rect x="47.8229%" y="373" width="0.0881%" height="15" fill="rgb(228,80,19)" fg:x="339339" fg:w="625"/><text x="48.0729%" y="383.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_set_class_range (720 samples, 0.10%)</title><rect x="47.8097%" y="405" width="0.1015%" height="15" fill="rgb(247,229,0)" fg:x="339246" fg:w="720"/><text x="48.0597%" y="415.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::pop_class (157 samples, 0.02%)</title><rect x="47.9112%" y="405" width="0.0221%" height="15" fill="rgb(237,194,15)" fg:x="339966" fg:w="157"/><text x="48.1612%" y="415.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_set_class_open (132 samples, 0.02%)</title><rect x="47.9435%" y="389" width="0.0186%" height="15" fill="rgb(219,203,20)" fg:x="340195" fg:w="132"/><text x="48.1935%" y="399.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::push_class_open (205 samples, 0.03%)</title><rect x="47.9333%" y="405" width="0.0289%" height="15" fill="rgb(234,128,8)" fg:x="340123" fg:w="205"/><text x="48.1833%" y="415.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_set_class (1,246 samples, 0.18%)</title><rect x="47.7872%" y="421" width="0.1756%" height="15" fill="rgb(248,202,8)" fg:x="339086" fg:w="1246"/><text x="48.0372%" y="431.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_uncounted_repetition (159 samples, 0.02%)</title><rect x="47.9628%" y="421" width="0.0224%" height="15" fill="rgb(206,104,37)" fg:x="340332" fg:w="159"/><text x="48.2128%" y="431.50"></text></g><g><title>regex_syntax::ast::parse::Parser::parse (2,099 samples, 0.30%)</title><rect x="47.6921%" y="469" width="0.2958%" height="15" fill="rgb(223,8,27)" fg:x="338411" fg:w="2099"/><text x="47.9421%" y="479.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse (2,099 samples, 0.30%)</title><rect x="47.6921%" y="453" width="0.2958%" height="15" fill="rgb(216,217,28)" fg:x="338411" fg:w="2099"/><text x="47.9421%" y="463.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_with_comments (2,088 samples, 0.29%)</title><rect x="47.6936%" y="437" width="0.2943%" height="15" fill="rgb(249,199,1)" fg:x="338422" fg:w="2088"/><text x="47.9436%" y="447.50"></text></g><g><title>regex_syntax::hir::Hir::concat (133 samples, 0.02%)</title><rect x="48.0159%" y="405" width="0.0187%" height="15" fill="rgb(240,85,17)" fg:x="340709" fg:w="133"/><text x="48.2659%" y="415.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::pop (100 samples, 0.01%)</title><rect x="48.0409%" y="405" width="0.0141%" height="15" fill="rgb(206,108,45)" fg:x="340886" fg:w="100"/><text x="48.2909%" y="415.50"></text></g><g><title>&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_post (469 samples, 0.07%)</title><rect x="47.9980%" y="421" width="0.0661%" height="15" fill="rgb(245,210,41)" fg:x="340582" fg:w="469"/><text x="48.2480%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (75 samples, 0.01%)</title><rect x="48.0994%" y="229" width="0.0106%" height="15" fill="rgb(206,13,37)" fg:x="341301" fg:w="75"/><text x="48.3494%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (84 samples, 0.01%)</title><rect x="48.0985%" y="277" width="0.0118%" height="15" fill="rgb(250,61,18)" fg:x="341295" fg:w="84"/><text x="48.3485%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (82 samples, 0.01%)</title><rect x="48.0988%" y="261" width="0.0116%" height="15" fill="rgb(235,172,48)" fg:x="341297" fg:w="82"/><text x="48.3488%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (80 samples, 0.01%)</title><rect x="48.0991%" y="245" width="0.0113%" height="15" fill="rgb(249,201,17)" fg:x="341299" fg:w="80"/><text x="48.3491%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (109 samples, 0.02%)</title><rect x="48.0958%" y="325" width="0.0154%" height="15" fill="rgb(219,208,6)" fg:x="341276" fg:w="109"/><text x="48.3458%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (96 samples, 0.01%)</title><rect x="48.0977%" y="309" width="0.0135%" height="15" fill="rgb(248,31,23)" fg:x="341289" fg:w="96"/><text x="48.3477%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (96 samples, 0.01%)</title><rect x="48.0977%" y="293" width="0.0135%" height="15" fill="rgb(245,15,42)" fg:x="341289" fg:w="96"/><text x="48.3477%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (219 samples, 0.03%)</title><rect x="48.3722%" y="277" width="0.0309%" height="15" fill="rgb(222,217,39)" fg:x="343237" fg:w="219"/><text x="48.6222%" y="287.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (78 samples, 0.01%)</title><rect x="48.3921%" y="261" width="0.0110%" height="15" fill="rgb(210,219,27)" fg:x="343378" fg:w="78"/><text x="48.6421%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (808 samples, 0.11%)</title><rect x="48.3463%" y="293" width="0.1139%" height="15" fill="rgb(252,166,36)" fg:x="343053" fg:w="808"/><text x="48.5963%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (405 samples, 0.06%)</title><rect x="48.4031%" y="277" width="0.0571%" height="15" fill="rgb(245,132,34)" fg:x="343456" fg:w="405"/><text x="48.6531%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (205 samples, 0.03%)</title><rect x="48.4312%" y="261" width="0.0289%" height="15" fill="rgb(236,54,3)" fg:x="343656" fg:w="205"/><text x="48.6812%" y="271.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (477 samples, 0.07%)</title><rect x="48.4983%" y="277" width="0.0672%" height="15" fill="rgb(241,173,43)" fg:x="344132" fg:w="477"/><text x="48.7483%" y="287.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (215 samples, 0.03%)</title><rect x="48.5352%" y="261" width="0.0303%" height="15" fill="rgb(215,190,9)" fg:x="344394" fg:w="215"/><text x="48.7852%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,879 samples, 0.26%)</title><rect x="48.3120%" y="309" width="0.2648%" height="15" fill="rgb(242,101,16)" fg:x="342810" fg:w="1879"/><text x="48.5620%" y="319.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (828 samples, 0.12%)</title><rect x="48.4601%" y="293" width="0.1167%" height="15" fill="rgb(223,190,21)" fg:x="343861" fg:w="828"/><text x="48.7101%" y="303.50"></text></g><g><title>core::slice::raw::debug_check_data_len (80 samples, 0.01%)</title><rect x="48.5655%" y="277" width="0.0113%" height="15" fill="rgb(215,228,25)" fg:x="344609" fg:w="80"/><text x="48.8155%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (204 samples, 0.03%)</title><rect x="48.6886%" y="261" width="0.0287%" height="15" fill="rgb(225,36,22)" fg:x="345482" fg:w="204"/><text x="48.9386%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (758 samples, 0.11%)</title><rect x="48.6641%" y="277" width="0.1068%" height="15" fill="rgb(251,106,46)" fg:x="345308" fg:w="758"/><text x="48.9141%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (380 samples, 0.05%)</title><rect x="48.7173%" y="261" width="0.0536%" height="15" fill="rgb(208,90,1)" fg:x="345686" fg:w="380"/><text x="48.9673%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (192 samples, 0.03%)</title><rect x="48.7438%" y="245" width="0.0271%" height="15" fill="rgb(243,10,4)" fg:x="345874" fg:w="192"/><text x="48.9938%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (77 samples, 0.01%)</title><rect x="48.8367%" y="245" width="0.0109%" height="15" fill="rgb(212,137,27)" fg:x="346533" fg:w="77"/><text x="49.0867%" y="255.50"></text></g><g><title>core::ptr::slice_from_raw_parts (506 samples, 0.07%)</title><rect x="48.8030%" y="261" width="0.0713%" height="15" fill="rgb(231,220,49)" fg:x="346294" fg:w="506"/><text x="49.0530%" y="271.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (190 samples, 0.03%)</title><rect x="48.8475%" y="245" width="0.0268%" height="15" fill="rgb(237,96,20)" fg:x="346610" fg:w="190"/><text x="49.0975%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,810 samples, 0.26%)</title><rect x="48.6295%" y="293" width="0.2551%" height="15" fill="rgb(239,229,30)" fg:x="345063" fg:w="1810"/><text x="48.8795%" y="303.50"></text></g><g><title>core::slice::raw::from_raw_parts (807 samples, 0.11%)</title><rect x="48.7709%" y="277" width="0.1137%" height="15" fill="rgb(219,65,33)" fg:x="346066" fg:w="807"/><text x="49.0209%" y="287.50"></text></g><g><title>core::slice::raw::debug_check_data_len (73 samples, 0.01%)</title><rect x="48.8743%" y="261" width="0.0103%" height="15" fill="rgb(243,134,7)" fg:x="346800" fg:w="73"/><text x="49.1243%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2,671 samples, 0.38%)</title><rect x="48.5768%" y="309" width="0.3764%" height="15" fill="rgb(216,177,54)" fg:x="344689" fg:w="2671"/><text x="48.8268%" y="319.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (487 samples, 0.07%)</title><rect x="48.8846%" y="293" width="0.0686%" height="15" fill="rgb(211,160,20)" fg:x="346873" fg:w="487"/><text x="49.1346%" y="303.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (285 samples, 0.04%)</title><rect x="48.9131%" y="277" width="0.0402%" height="15" fill="rgb(239,85,39)" fg:x="347075" fg:w="285"/><text x="49.1631%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort::{{closure}} (1,788 samples, 0.25%)</title><rect x="49.0570%" y="277" width="0.2520%" height="15" fill="rgb(232,125,22)" fg:x="348096" fg:w="1788"/><text x="49.3070%" y="287.50"></text></g><g><title>core::cmp::PartialOrd::lt (1,499 samples, 0.21%)</title><rect x="49.0977%" y="261" width="0.2113%" height="15" fill="rgb(244,57,34)" fg:x="348385" fg:w="1499"/><text x="49.3477%" y="271.50"></text></g><g><title>&lt;regex_syntax::hir::ClassUnicodeRange as core::cmp::PartialOrd&gt;::partial_cmp (1,107 samples, 0.16%)</title><rect x="49.1529%" y="245" width="0.1560%" height="15" fill="rgb(214,203,32)" fg:x="348777" fg:w="1107"/><text x="49.4029%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for char&gt;::partial_cmp (549 samples, 0.08%)</title><rect x="49.2316%" y="229" width="0.0774%" height="15" fill="rgb(207,58,43)" fg:x="349335" fg:w="549"/><text x="49.4816%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for char&gt;::cmp (393 samples, 0.06%)</title><rect x="49.2536%" y="213" width="0.0554%" height="15" fill="rgb(215,193,15)" fg:x="349491" fg:w="393"/><text x="49.5036%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort::{{closure}} (1,593 samples, 0.22%)</title><rect x="49.4669%" y="261" width="0.2245%" height="15" fill="rgb(232,15,44)" fg:x="351005" fg:w="1593"/><text x="49.7169%" y="271.50"></text></g><g><title>core::cmp::PartialOrd::lt (1,340 samples, 0.19%)</title><rect x="49.5026%" y="245" width="0.1888%" height="15" fill="rgb(212,3,48)" fg:x="351258" fg:w="1340"/><text x="49.7526%" y="255.50"></text></g><g><title>&lt;regex_syntax::hir::ClassUnicodeRange as core::cmp::PartialOrd&gt;::partial_cmp (948 samples, 0.13%)</title><rect x="49.5578%" y="229" width="0.1336%" height="15" fill="rgb(218,128,7)" fg:x="351650" fg:w="948"/><text x="49.8078%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for char&gt;::partial_cmp (424 samples, 0.06%)</title><rect x="49.6317%" y="213" width="0.0598%" height="15" fill="rgb(226,216,39)" fg:x="352174" fg:w="424"/><text x="49.8817%" y="223.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for char&gt;::cmp (254 samples, 0.04%)</title><rect x="49.6556%" y="197" width="0.0358%" height="15" fill="rgb(243,47,51)" fg:x="352344" fg:w="254"/><text x="49.9056%" y="207.50"></text></g><g><title>alloc::slice::merge::decrement_and_get (426 samples, 0.06%)</title><rect x="49.6914%" y="261" width="0.0600%" height="15" fill="rgb(241,183,40)" fg:x="352598" fg:w="426"/><text x="49.9414%" y="271.50"></text></g><g><title>alloc::slice::merge (3,562 samples, 0.50%)</title><rect x="49.3090%" y="277" width="0.5020%" height="15" fill="rgb(231,217,32)" fg:x="349884" fg:w="3562"/><text x="49.5590%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (422 samples, 0.06%)</title><rect x="49.7515%" y="261" width="0.0595%" height="15" fill="rgb(229,61,38)" fg:x="353024" fg:w="422"/><text x="50.0015%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1,447 samples, 0.20%)</title><rect x="49.8205%" y="277" width="0.2039%" height="15" fill="rgb(225,210,5)" fg:x="353514" fg:w="1447"/><text x="50.0705%" y="287.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1,016 samples, 0.14%)</title><rect x="49.8813%" y="261" width="0.1432%" height="15" fill="rgb(231,79,45)" fg:x="353945" fg:w="1016"/><text x="50.1313%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::as_ptr (174 samples, 0.02%)</title><rect x="49.9999%" y="245" width="0.0245%" height="15" fill="rgb(224,100,7)" fg:x="354787" fg:w="174"/><text x="50.2499%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort (7,606 samples, 1.07%)</title><rect x="48.9532%" y="309" width="1.0719%" height="15" fill="rgb(241,198,18)" fg:x="347360" fg:w="7606"/><text x="49.2032%" y="319.50"></text></g><g><title>alloc::slice::merge_sort (7,606 samples, 1.07%)</title><rect x="48.9532%" y="293" width="1.0719%" height="15" fill="rgb(252,97,53)" fg:x="347360" fg:w="7606"/><text x="49.2032%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (92 samples, 0.01%)</title><rect x="50.0274%" y="309" width="0.0130%" height="15" fill="rgb(220,88,7)" fg:x="354982" fg:w="92"/><text x="50.2774%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (213 samples, 0.03%)</title><rect x="50.1955%" y="277" width="0.0300%" height="15" fill="rgb(213,176,14)" fg:x="356175" fg:w="213"/><text x="50.4455%" y="287.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (82 samples, 0.01%)</title><rect x="50.2140%" y="261" width="0.0116%" height="15" fill="rgb(246,73,7)" fg:x="356306" fg:w="82"/><text x="50.4640%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (814 samples, 0.11%)</title><rect x="50.1705%" y="293" width="0.1147%" height="15" fill="rgb(245,64,36)" fg:x="355997" fg:w="814"/><text x="50.4205%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (423 samples, 0.06%)</title><rect x="50.2256%" y="277" width="0.0596%" height="15" fill="rgb(245,80,10)" fg:x="356388" fg:w="423"/><text x="50.4756%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (224 samples, 0.03%)</title><rect x="50.2536%" y="261" width="0.0316%" height="15" fill="rgb(232,107,50)" fg:x="356587" fg:w="224"/><text x="50.5036%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,845 samples, 0.26%)</title><rect x="50.0404%" y="309" width="0.2600%" height="15" fill="rgb(253,3,0)" fg:x="355074" fg:w="1845"/><text x="50.2904%" y="319.50"></text></g><g><title>core::ptr::write (108 samples, 0.02%)</title><rect x="50.2852%" y="293" width="0.0152%" height="15" fill="rgb(212,99,53)" fg:x="356811" fg:w="108"/><text x="50.5352%" y="303.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (207 samples, 0.03%)</title><rect x="50.3878%" y="277" width="0.0292%" height="15" fill="rgb(249,111,54)" fg:x="357539" fg:w="207"/><text x="50.6378%" y="287.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for usize&gt;::clone (101 samples, 0.01%)</title><rect x="50.4169%" y="277" width="0.0142%" height="15" fill="rgb(249,55,30)" fg:x="357746" fg:w="101"/><text x="50.6669%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (149 samples, 0.02%)</title><rect x="50.4312%" y="277" width="0.0210%" height="15" fill="rgb(237,47,42)" fg:x="357847" fg:w="149"/><text x="50.6812%" y="287.50"></text></g><g><title>core::ptr::read (258 samples, 0.04%)</title><rect x="50.5039%" y="261" width="0.0364%" height="15" fill="rgb(211,20,18)" fg:x="358363" fg:w="258"/><text x="50.7539%" y="271.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1,827 samples, 0.26%)</title><rect x="50.3004%" y="309" width="0.2575%" height="15" fill="rgb(231,203,46)" fg:x="356919" fg:w="1827"/><text x="50.5504%" y="319.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1,699 samples, 0.24%)</title><rect x="50.3184%" y="293" width="0.2394%" height="15" fill="rgb(237,142,3)" fg:x="357047" fg:w="1699"/><text x="50.5684%" y="303.50"></text></g><g><title>core::mem::replace (750 samples, 0.11%)</title><rect x="50.4522%" y="277" width="0.1057%" height="15" fill="rgb(241,107,1)" fg:x="357996" fg:w="750"/><text x="50.7022%" y="287.50"></text></g><g><title>core::ptr::write (125 samples, 0.02%)</title><rect x="50.5403%" y="261" width="0.0176%" height="15" fill="rgb(229,83,13)" fg:x="358621" fg:w="125"/><text x="50.7903%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (366 samples, 0.05%)</title><rect x="50.5579%" y="309" width="0.0516%" height="15" fill="rgb(241,91,40)" fg:x="358746" fg:w="366"/><text x="50.8079%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (489 samples, 0.07%)</title><rect x="50.6125%" y="309" width="0.0689%" height="15" fill="rgb(225,3,45)" fg:x="359134" fg:w="489"/><text x="50.8625%" y="319.50"></text></g><g><title>core::cmp::max (96 samples, 0.01%)</title><rect x="50.7325%" y="293" width="0.0135%" height="15" fill="rgb(244,223,14)" fg:x="359985" fg:w="96"/><text x="50.9825%" y="303.50"></text></g><g><title>core::cmp::Ord::max (84 samples, 0.01%)</title><rect x="50.7342%" y="277" width="0.0118%" height="15" fill="rgb(224,124,37)" fg:x="359997" fg:w="84"/><text x="50.9842%" y="287.50"></text></g><g><title>core::cmp::min (98 samples, 0.01%)</title><rect x="50.7460%" y="293" width="0.0138%" height="15" fill="rgb(251,171,30)" fg:x="360081" fg:w="98"/><text x="50.9960%" y="303.50"></text></g><g><title>core::cmp::Ord::min (88 samples, 0.01%)</title><rect x="50.7474%" y="277" width="0.0124%" height="15" fill="rgb(236,46,54)" fg:x="360091" fg:w="88"/><text x="50.9974%" y="287.50"></text></g><g><title>core::cmp::min_by (80 samples, 0.01%)</title><rect x="50.7485%" y="261" width="0.0113%" height="15" fill="rgb(245,213,5)" fg:x="360099" fg:w="80"/><text x="50.9985%" y="271.50"></text></g><g><title>&lt;char as regex_syntax::hir::interval::Bound&gt;::as_u32 (332 samples, 0.05%)</title><rect x="50.9105%" y="277" width="0.0468%" height="15" fill="rgb(230,144,27)" fg:x="361248" fg:w="332"/><text x="51.1605%" y="287.50"></text></g><g><title>&lt;regex_syntax::hir::ClassUnicodeRange as regex_syntax::hir::interval::Interval&gt;::lower (154 samples, 0.02%)</title><rect x="50.9573%" y="277" width="0.0217%" height="15" fill="rgb(220,86,6)" fg:x="361580" fg:w="154"/><text x="51.2073%" y="287.50"></text></g><g><title>&lt;regex_syntax::hir::ClassUnicodeRange as regex_syntax::hir::interval::Interval&gt;::upper (141 samples, 0.02%)</title><rect x="50.9790%" y="277" width="0.0199%" height="15" fill="rgb(240,20,13)" fg:x="361734" fg:w="141"/><text x="51.2290%" y="287.50"></text></g><g><title>core::cmp::max (1,318 samples, 0.19%)</title><rect x="50.9988%" y="277" width="0.1857%" height="15" fill="rgb(217,89,34)" fg:x="361875" fg:w="1318"/><text x="51.2488%" y="287.50"></text></g><g><title>core::cmp::Ord::max (1,158 samples, 0.16%)</title><rect x="51.0214%" y="261" width="0.1632%" height="15" fill="rgb(229,13,5)" fg:x="362035" fg:w="1158"/><text x="51.2714%" y="271.50"></text></g><g><title>core::cmp::max_by (1,001 samples, 0.14%)</title><rect x="51.0435%" y="245" width="0.1411%" height="15" fill="rgb(244,67,35)" fg:x="362192" fg:w="1001"/><text x="51.2935%" y="255.50"></text></g><g><title>core::ops::function::FnOnce::call_once (348 samples, 0.05%)</title><rect x="51.1355%" y="229" width="0.0490%" height="15" fill="rgb(221,40,2)" fg:x="362845" fg:w="348"/><text x="51.3855%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (189 samples, 0.03%)</title><rect x="51.1579%" y="213" width="0.0266%" height="15" fill="rgb(237,157,21)" fg:x="363004" fg:w="189"/><text x="51.4079%" y="223.50"></text></g><g><title>regex_syntax::hir::interval::Interval::union (4,887 samples, 0.69%)</title><rect x="50.6815%" y="309" width="0.6887%" height="15" fill="rgb(222,94,11)" fg:x="359623" fg:w="4887"/><text x="50.9315%" y="319.50"></text></g><g><title>regex_syntax::hir::interval::Interval::is_contiguous (4,266 samples, 0.60%)</title><rect x="50.7690%" y="293" width="0.6012%" height="15" fill="rgb(249,113,6)" fg:x="360244" fg:w="4266"/><text x="51.0190%" y="303.50"></text></g><g><title>core::cmp::min (1,317 samples, 0.19%)</title><rect x="51.1846%" y="277" width="0.1856%" height="15" fill="rgb(238,137,36)" fg:x="363193" fg:w="1317"/><text x="51.4346%" y="287.50"></text></g><g><title>core::cmp::Ord::min (1,166 samples, 0.16%)</title><rect x="51.2059%" y="261" width="0.1643%" height="15" fill="rgb(210,102,26)" fg:x="363344" fg:w="1166"/><text x="51.4559%" y="271.50"></text></g><g><title>core::cmp::min_by (1,039 samples, 0.15%)</title><rect x="51.2238%" y="245" width="0.1464%" height="15" fill="rgb(218,30,30)" fg:x="363471" fg:w="1039"/><text x="51.4738%" y="255.50"></text></g><g><title>core::ops::function::FnOnce::call_once (386 samples, 0.05%)</title><rect x="51.3158%" y="229" width="0.0544%" height="15" fill="rgb(214,67,26)" fg:x="364124" fg:w="386"/><text x="51.5658%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (214 samples, 0.03%)</title><rect x="51.3400%" y="213" width="0.0302%" height="15" fill="rgb(251,9,53)" fg:x="364296" fg:w="214"/><text x="51.5900%" y="223.50"></text></g><g><title>core::num::nonzero::NonZeroUsize::get (334 samples, 0.05%)</title><rect x="51.8705%" y="277" width="0.0471%" height="15" fill="rgb(228,204,25)" fg:x="368060" fg:w="334"/><text x="52.1205%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::as_ptr (150 samples, 0.02%)</title><rect x="52.3759%" y="213" width="0.0211%" height="15" fill="rgb(207,153,8)" fg:x="371646" fg:w="150"/><text x="52.6259%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (140 samples, 0.02%)</title><rect x="52.4600%" y="197" width="0.0197%" height="15" fill="rgb(242,9,16)" fg:x="372243" fg:w="140"/><text x="52.7100%" y="207.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2,013 samples, 0.28%)</title><rect x="52.2386%" y="229" width="0.2837%" height="15" fill="rgb(217,211,10)" fg:x="370672" fg:w="2013"/><text x="52.4886%" y="239.50"></text></g><g><title>core::ptr::slice_from_raw_parts (889 samples, 0.13%)</title><rect x="52.3970%" y="213" width="0.1253%" height="15" fill="rgb(219,228,52)" fg:x="371796" fg:w="889"/><text x="52.6470%" y="223.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (302 samples, 0.04%)</title><rect x="52.4797%" y="197" width="0.0426%" height="15" fill="rgb(231,92,29)" fg:x="372383" fg:w="302"/><text x="52.7297%" y="207.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3,819 samples, 0.54%)</title><rect x="52.0423%" y="261" width="0.5382%" height="15" fill="rgb(232,8,23)" fg:x="369279" fg:w="3819"/><text x="52.2923%" y="271.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (3,194 samples, 0.45%)</title><rect x="52.1304%" y="245" width="0.4501%" height="15" fill="rgb(216,211,34)" fg:x="369904" fg:w="3194"/><text x="52.3804%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::len (413 samples, 0.06%)</title><rect x="52.5223%" y="229" width="0.0582%" height="15" fill="rgb(236,151,0)" fg:x="372685" fg:w="413"/><text x="52.7723%" y="239.50"></text></g><g><title>core::ptr::metadata::metadata (198 samples, 0.03%)</title><rect x="52.5526%" y="213" width="0.0279%" height="15" fill="rgb(209,168,3)" fg:x="372900" fg:w="198"/><text x="52.8026%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::as_ptr (169 samples, 0.02%)</title><rect x="52.8928%" y="213" width="0.0238%" height="15" fill="rgb(208,129,28)" fg:x="375314" fg:w="169"/><text x="53.1428%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (176 samples, 0.02%)</title><rect x="52.9781%" y="197" width="0.0248%" height="15" fill="rgb(229,78,22)" fg:x="375919" fg:w="176"/><text x="53.2281%" y="207.50"></text></g><g><title>&lt;core::slice::iter::Windows&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10,126 samples, 1.43%)</title><rect x="51.6289%" y="293" width="1.4271%" height="15" fill="rgb(228,187,13)" fg:x="366346" fg:w="10126"/><text x="51.8789%" y="303.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (8,078 samples, 1.14%)</title><rect x="51.9176%" y="277" width="1.1384%" height="15" fill="rgb(240,119,24)" fg:x="368394" fg:w="8078"/><text x="52.1676%" y="287.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3,374 samples, 0.48%)</title><rect x="52.5805%" y="261" width="0.4755%" height="15" fill="rgb(209,194,42)" fg:x="373098" fg:w="3374"/><text x="52.8305%" y="271.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2,905 samples, 0.41%)</title><rect x="52.6466%" y="245" width="0.4094%" height="15" fill="rgb(247,200,46)" fg:x="373567" fg:w="2905"/><text x="52.8966%" y="255.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2,088 samples, 0.29%)</title><rect x="52.7617%" y="229" width="0.2943%" height="15" fill="rgb(218,76,16)" fg:x="374384" fg:w="2088"/><text x="53.0117%" y="239.50"></text></g><g><title>core::ptr::slice_from_raw_parts (989 samples, 0.14%)</title><rect x="52.9166%" y="213" width="0.1394%" height="15" fill="rgb(225,21,48)" fg:x="375483" fg:w="989"/><text x="53.1666%" y="223.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (377 samples, 0.05%)</title><rect x="53.0029%" y="197" width="0.0531%" height="15" fill="rgb(239,223,50)" fg:x="376095" fg:w="377"/><text x="53.2529%" y="207.50"></text></g><g><title>core::cmp::PartialOrd::ge (2,299 samples, 0.32%)</title><rect x="53.0560%" y="293" width="0.3240%" height="15" fill="rgb(244,45,21)" fg:x="376472" fg:w="2299"/><text x="53.3060%" y="303.50"></text></g><g><title>&lt;regex_syntax::hir::ClassUnicodeRange as core::cmp::PartialOrd&gt;::partial_cmp (1,579 samples, 0.22%)</title><rect x="53.1575%" y="277" width="0.2225%" height="15" fill="rgb(232,33,43)" fg:x="377192" fg:w="1579"/><text x="53.4075%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for char&gt;::partial_cmp (664 samples, 0.09%)</title><rect x="53.2864%" y="261" width="0.0936%" height="15" fill="rgb(209,8,3)" fg:x="378107" fg:w="664"/><text x="53.5364%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for char&gt;::cmp (349 samples, 0.05%)</title><rect x="53.3308%" y="245" width="0.0492%" height="15" fill="rgb(214,25,53)" fg:x="378422" fg:w="349"/><text x="53.5808%" y="255.50"></text></g><g><title>&lt;char as regex_syntax::hir::interval::Bound&gt;::as_u32 (531 samples, 0.07%)</title><rect x="53.6225%" y="277" width="0.0748%" height="15" fill="rgb(254,186,54)" fg:x="380492" fg:w="531"/><text x="53.8725%" y="287.50"></text></g><g><title>&lt;regex_syntax::hir::ClassUnicodeRange as regex_syntax::hir::interval::Interval&gt;::lower (293 samples, 0.04%)</title><rect x="53.6974%" y="277" width="0.0413%" height="15" fill="rgb(208,174,49)" fg:x="381023" fg:w="293"/><text x="53.9474%" y="287.50"></text></g><g><title>&lt;regex_syntax::hir::ClassUnicodeRange as regex_syntax::hir::interval::Interval&gt;::upper (291 samples, 0.04%)</title><rect x="53.7386%" y="277" width="0.0410%" height="15" fill="rgb(233,191,51)" fg:x="381316" fg:w="291"/><text x="53.9886%" y="287.50"></text></g><g><title>core::cmp::max (2,168 samples, 0.31%)</title><rect x="53.7797%" y="277" width="0.3055%" height="15" fill="rgb(222,134,10)" fg:x="381607" fg:w="2168"/><text x="54.0297%" y="287.50"></text></g><g><title>core::cmp::Ord::max (1,947 samples, 0.27%)</title><rect x="53.8108%" y="261" width="0.2744%" height="15" fill="rgb(230,226,20)" fg:x="381828" fg:w="1947"/><text x="54.0608%" y="271.50"></text></g><g><title>core::cmp::max_by (1,708 samples, 0.24%)</title><rect x="53.8445%" y="245" width="0.2407%" height="15" fill="rgb(251,111,25)" fg:x="382067" fg:w="1708"/><text x="54.0945%" y="255.50"></text></g><g><title>core::ops::function::FnOnce::call_once (636 samples, 0.09%)</title><rect x="53.9956%" y="229" width="0.0896%" height="15" fill="rgb(224,40,46)" fg:x="383139" fg:w="636"/><text x="54.2456%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (372 samples, 0.05%)</title><rect x="54.0328%" y="213" width="0.0524%" height="15" fill="rgb(236,108,47)" fg:x="383403" fg:w="372"/><text x="54.2828%" y="223.50"></text></g><g><title>regex_syntax::hir::ClassUnicode::union (44,824 samples, 6.32%)</title><rect x="48.0957%" y="357" width="6.3170%" height="15" fill="rgb(234,93,0)" fg:x="341275" fg:w="44824"/><text x="48.3457%" y="367.50">regex_sy..</text></g><g><title>regex_syntax::hir::interval::IntervalSet&lt;I&gt;::union (44,824 samples, 6.32%)</title><rect x="48.0957%" y="341" width="6.3170%" height="15" fill="rgb(224,213,32)" fg:x="341275" fg:w="44824"/><text x="48.3457%" y="351.50">regex_sy..</text></g><g><title>regex_syntax::hir::interval::IntervalSet&lt;I&gt;::canonicalize (44,714 samples, 6.30%)</title><rect x="48.1112%" y="325" width="6.3015%" height="15" fill="rgb(251,11,48)" fg:x="341385" fg:w="44714"/><text x="48.3612%" y="335.50">regex_sy..</text></g><g><title>regex_syntax::hir::interval::IntervalSet&lt;I&gt;::is_canonical (21,589 samples, 3.04%)</title><rect x="51.3702%" y="309" width="3.0425%" height="15" fill="rgb(236,173,5)" fg:x="364510" fg:w="21589"/><text x="51.6202%" y="319.50">reg..</text></g><g><title>regex_syntax::hir::interval::Interval::is_contiguous (7,325 samples, 1.03%)</title><rect x="53.3804%" y="293" width="1.0323%" height="15" fill="rgb(230,95,12)" fg:x="378774" fg:w="7325"/><text x="53.6304%" y="303.50"></text></g><g><title>core::cmp::min (2,324 samples, 0.33%)</title><rect x="54.0852%" y="277" width="0.3275%" height="15" fill="rgb(232,209,1)" fg:x="383775" fg:w="2324"/><text x="54.3352%" y="287.50"></text></g><g><title>core::cmp::Ord::min (2,096 samples, 0.30%)</title><rect x="54.1173%" y="261" width="0.2954%" height="15" fill="rgb(232,6,1)" fg:x="384003" fg:w="2096"/><text x="54.3673%" y="271.50"></text></g><g><title>core::cmp::min_by (1,849 samples, 0.26%)</title><rect x="54.1521%" y="245" width="0.2606%" height="15" fill="rgb(210,224,50)" fg:x="384250" fg:w="1849"/><text x="54.4021%" y="255.50"></text></g><g><title>core::ops::function::FnOnce::call_once (673 samples, 0.09%)</title><rect x="54.3179%" y="229" width="0.0948%" height="15" fill="rgb(228,127,35)" fg:x="385426" fg:w="673"/><text x="54.5679%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (367 samples, 0.05%)</title><rect x="54.3610%" y="213" width="0.0517%" height="15" fill="rgb(245,102,45)" fg:x="385732" fg:w="367"/><text x="54.6110%" y="223.50"></text></g><g><title>regex_syntax::unicode::canonical_gencat (107 samples, 0.02%)</title><rect x="54.4382%" y="293" width="0.0151%" height="15" fill="rgb(214,1,49)" fg:x="386280" fg:w="107"/><text x="54.6882%" y="303.50"></text></g><g><title>regex_syntax::unicode::ClassQuery::canonicalize (391 samples, 0.06%)</title><rect x="54.4176%" y="325" width="0.0551%" height="15" fill="rgb(226,163,40)" fg:x="386134" fg:w="391"/><text x="54.6676%" y="335.50"></text></g><g><title>regex_syntax::unicode::ClassQuery::canonical_binary (312 samples, 0.04%)</title><rect x="54.4288%" y="309" width="0.0440%" height="15" fill="rgb(239,212,28)" fg:x="386213" fg:w="312"/><text x="54.6788%" y="319.50"></text></g><g><title>regex_syntax::unicode::symbolic_name_normalize (79 samples, 0.01%)</title><rect x="54.4616%" y="293" width="0.0111%" height="15" fill="rgb(220,20,13)" fg:x="386446" fg:w="79"/><text x="54.7116%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (429 samples, 0.06%)</title><rect x="54.6968%" y="101" width="0.0605%" height="15" fill="rgb(210,164,35)" fg:x="388115" fg:w="429"/><text x="54.9468%" y="111.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (216 samples, 0.03%)</title><rect x="54.7268%" y="85" width="0.0304%" height="15" fill="rgb(248,109,41)" fg:x="388328" fg:w="216"/><text x="54.9768%" y="95.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (453 samples, 0.06%)</title><rect x="54.7573%" y="101" width="0.0638%" height="15" fill="rgb(238,23,50)" fg:x="388544" fg:w="453"/><text x="55.0073%" y="111.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (235 samples, 0.03%)</title><rect x="54.7880%" y="85" width="0.0331%" height="15" fill="rgb(211,48,49)" fg:x="388762" fg:w="235"/><text x="55.0380%" y="95.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (303 samples, 0.04%)</title><rect x="54.8211%" y="101" width="0.0427%" height="15" fill="rgb(223,36,21)" fg:x="388997" fg:w="303"/><text x="55.0711%" y="111.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,359 samples, 0.33%)</title><rect x="54.5448%" y="117" width="0.3325%" height="15" fill="rgb(207,123,46)" fg:x="387036" fg:w="2359"/><text x="54.7948%" y="127.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (95 samples, 0.01%)</title><rect x="54.8638%" y="101" width="0.0134%" height="15" fill="rgb(240,218,32)" fg:x="389300" fg:w="95"/><text x="55.1138%" y="111.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (131 samples, 0.02%)</title><rect x="55.0360%" y="69" width="0.0185%" height="15" fill="rgb(252,5,43)" fg:x="390522" fg:w="131"/><text x="55.2860%" y="79.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (858 samples, 0.12%)</title><rect x="54.9505%" y="101" width="0.1209%" height="15" fill="rgb(252,84,19)" fg:x="389915" fg:w="858"/><text x="55.2005%" y="111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (647 samples, 0.09%)</title><rect x="54.9802%" y="85" width="0.0912%" height="15" fill="rgb(243,152,39)" fg:x="390126" fg:w="647"/><text x="55.2302%" y="95.50"></text></g><g><title>core::ptr::write (120 samples, 0.02%)</title><rect x="55.0545%" y="69" width="0.0169%" height="15" fill="rgb(234,160,15)" fg:x="390653" fg:w="120"/><text x="55.3045%" y="79.50"></text></g><g><title>&lt;regex_syntax::hir::ClassUnicodeRange as core::default::Default&gt;::default (299 samples, 0.04%)</title><rect x="55.1887%" y="53" width="0.0421%" height="15" fill="rgb(237,34,20)" fg:x="391605" fg:w="299"/><text x="55.4387%" y="63.50"></text></g><g><title>&lt;char as core::default::Default&gt;::default (82 samples, 0.01%)</title><rect x="55.2193%" y="37" width="0.0116%" height="15" fill="rgb(229,97,13)" fg:x="391822" fg:w="82"/><text x="55.4693%" y="47.50"></text></g><g><title>&lt;regex_syntax::hir::ClassUnicodeRange as regex_syntax::hir::interval::Interval&gt;::set_lower (87 samples, 0.01%)</title><rect x="55.2308%" y="53" width="0.0123%" height="15" fill="rgb(234,71,50)" fg:x="391904" fg:w="87"/><text x="55.4808%" y="63.50"></text></g><g><title>&lt;regex_syntax::hir::ClassUnicodeRange as regex_syntax::hir::interval::Interval&gt;::set_upper (84 samples, 0.01%)</title><rect x="55.2431%" y="53" width="0.0118%" height="15" fill="rgb(253,155,4)" fg:x="391991" fg:w="84"/><text x="55.4931%" y="63.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2,809 samples, 0.40%)</title><rect x="54.8772%" y="117" width="0.3959%" height="15" fill="rgb(222,185,37)" fg:x="389395" fg:w="2809"/><text x="55.1272%" y="127.50"></text></g><g><title>regex_syntax::unicode::hir_class::{{closure}} (1,431 samples, 0.20%)</title><rect x="55.0714%" y="101" width="0.2017%" height="15" fill="rgb(251,177,13)" fg:x="390773" fg:w="1431"/><text x="55.3214%" y="111.50"></text></g><g><title>regex_syntax::hir::ClassUnicodeRange::new (1,196 samples, 0.17%)</title><rect x="55.1045%" y="85" width="0.1686%" height="15" fill="rgb(250,179,40)" fg:x="391008" fg:w="1196"/><text x="55.3545%" y="95.50"></text></g><g><title>regex_syntax::hir::interval::Interval::create (1,019 samples, 0.14%)</title><rect x="55.1295%" y="69" width="0.1436%" height="15" fill="rgb(242,44,2)" fg:x="391185" fg:w="1019"/><text x="55.3795%" y="79.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for char&gt;::le (129 samples, 0.02%)</title><rect x="55.2549%" y="53" width="0.0182%" height="15" fill="rgb(216,177,13)" fg:x="392075" fg:w="129"/><text x="55.5049%" y="63.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5,664 samples, 0.80%)</title><rect x="54.4753%" y="181" width="0.7982%" height="15" fill="rgb(216,106,43)" fg:x="386543" fg:w="5664"/><text x="54.7253%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5,645 samples, 0.80%)</title><rect x="54.4780%" y="165" width="0.7955%" height="15" fill="rgb(216,183,2)" fg:x="386562" fg:w="5645"/><text x="54.7280%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5,644 samples, 0.80%)</title><rect x="54.4781%" y="149" width="0.7954%" height="15" fill="rgb(249,75,3)" fg:x="386563" fg:w="5644"/><text x="54.7281%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5,643 samples, 0.80%)</title><rect x="54.4782%" y="133" width="0.7953%" height="15" fill="rgb(219,67,39)" fg:x="386564" fg:w="5643"/><text x="54.7282%" y="143.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5,701 samples, 0.80%)</title><rect x="54.4750%" y="245" width="0.8034%" height="15" fill="rgb(253,228,2)" fg:x="386541" fg:w="5701"/><text x="54.7250%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5,700 samples, 0.80%)</title><rect x="54.4751%" y="229" width="0.8033%" height="15" fill="rgb(235,138,27)" fg:x="386542" fg:w="5700"/><text x="54.7251%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5,700 samples, 0.80%)</title><rect x="54.4751%" y="213" width="0.8033%" height="15" fill="rgb(236,97,51)" fg:x="386542" fg:w="5700"/><text x="54.7251%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (5,700 samples, 0.80%)</title><rect x="54.4751%" y="197" width="0.8033%" height="15" fill="rgb(240,80,30)" fg:x="386542" fg:w="5700"/><text x="54.7251%" y="207.50"></text></g><g><title>core::num::nonzero::NonZeroUsize::get (155 samples, 0.02%)</title><rect x="55.5830%" y="165" width="0.0218%" height="15" fill="rgb(230,178,19)" fg:x="394403" fg:w="155"/><text x="55.8330%" y="175.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::as_ptr (85 samples, 0.01%)</title><rect x="55.8870%" y="101" width="0.0120%" height="15" fill="rgb(210,190,27)" fg:x="396560" fg:w="85"/><text x="56.1370%" y="111.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (71 samples, 0.01%)</title><rect x="55.9367%" y="85" width="0.0100%" height="15" fill="rgb(222,107,31)" fg:x="396913" fg:w="71"/><text x="56.1867%" y="95.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1,191 samples, 0.17%)</title><rect x="55.8075%" y="117" width="0.1678%" height="15" fill="rgb(216,127,34)" fg:x="395996" fg:w="1191"/><text x="56.0575%" y="127.50"></text></g><g><title>core::ptr::slice_from_raw_parts (542 samples, 0.08%)</title><rect x="55.8990%" y="101" width="0.0764%" height="15" fill="rgb(234,116,52)" fg:x="396645" fg:w="542"/><text x="56.1490%" y="111.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (203 samples, 0.03%)</title><rect x="55.9467%" y="85" width="0.0286%" height="15" fill="rgb(222,124,15)" fg:x="396984" fg:w="203"/><text x="56.1967%" y="95.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2,298 samples, 0.32%)</title><rect x="55.6880%" y="149" width="0.3239%" height="15" fill="rgb(231,179,28)" fg:x="395148" fg:w="2298"/><text x="55.9380%" y="159.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1,944 samples, 0.27%)</title><rect x="55.7379%" y="133" width="0.2740%" height="15" fill="rgb(226,93,45)" fg:x="395502" fg:w="1944"/><text x="55.9879%" y="143.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::len (259 samples, 0.04%)</title><rect x="55.9753%" y="117" width="0.0365%" height="15" fill="rgb(215,8,51)" fg:x="397187" fg:w="259"/><text x="56.2253%" y="127.50"></text></g><g><title>core::ptr::metadata::metadata (125 samples, 0.02%)</title><rect x="55.9942%" y="101" width="0.0176%" height="15" fill="rgb(223,106,5)" fg:x="397321" fg:w="125"/><text x="56.2442%" y="111.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::as_ptr (106 samples, 0.01%)</title><rect x="56.1996%" y="101" width="0.0149%" height="15" fill="rgb(250,191,5)" fg:x="398778" fg:w="106"/><text x="56.4496%" y="111.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (88 samples, 0.01%)</title><rect x="56.2511%" y="85" width="0.0124%" height="15" fill="rgb(242,132,44)" fg:x="399144" fg:w="88"/><text x="56.5011%" y="95.50"></text></g><g><title>&lt;core::slice::iter::Windows&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6,007 samples, 0.85%)</title><rect x="55.4436%" y="181" width="0.8466%" height="15" fill="rgb(251,152,29)" fg:x="393414" fg:w="6007"/><text x="55.6936%" y="191.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4,863 samples, 0.69%)</title><rect x="55.6048%" y="165" width="0.6853%" height="15" fill="rgb(218,179,5)" fg:x="394558" fg:w="4863"/><text x="55.8548%" y="175.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1,975 samples, 0.28%)</title><rect x="56.0118%" y="149" width="0.2783%" height="15" fill="rgb(227,67,19)" fg:x="397446" fg:w="1975"/><text x="56.2618%" y="159.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1,668 samples, 0.24%)</title><rect x="56.0551%" y="133" width="0.2351%" height="15" fill="rgb(233,119,31)" fg:x="397753" fg:w="1668"/><text x="56.3051%" y="143.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1,158 samples, 0.16%)</title><rect x="56.1270%" y="117" width="0.1632%" height="15" fill="rgb(241,120,22)" fg:x="398263" fg:w="1158"/><text x="56.3770%" y="127.50"></text></g><g><title>core::ptr::slice_from_raw_parts (537 samples, 0.08%)</title><rect x="56.2145%" y="101" width="0.0757%" height="15" fill="rgb(224,102,30)" fg:x="398884" fg:w="537"/><text x="56.4645%" y="111.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (189 samples, 0.03%)</title><rect x="56.2635%" y="85" width="0.0266%" height="15" fill="rgb(210,164,37)" fg:x="399232" fg:w="189"/><text x="56.5135%" y="95.50"></text></g><g><title>core::cmp::PartialOrd::ge (1,349 samples, 0.19%)</title><rect x="56.2902%" y="181" width="0.1901%" height="15" fill="rgb(226,191,16)" fg:x="399421" fg:w="1349"/><text x="56.5402%" y="191.50"></text></g><g><title>&lt;regex_syntax::hir::ClassUnicodeRange as core::cmp::PartialOrd&gt;::partial_cmp (953 samples, 0.13%)</title><rect x="56.3460%" y="165" width="0.1343%" height="15" fill="rgb(214,40,45)" fg:x="399817" fg:w="953"/><text x="56.5960%" y="175.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for char&gt;::partial_cmp (408 samples, 0.06%)</title><rect x="56.4228%" y="149" width="0.0575%" height="15" fill="rgb(244,29,26)" fg:x="400362" fg:w="408"/><text x="56.6728%" y="159.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for char&gt;::cmp (246 samples, 0.03%)</title><rect x="56.4456%" y="133" width="0.0347%" height="15" fill="rgb(216,16,5)" fg:x="400524" fg:w="246"/><text x="56.6956%" y="143.50"></text></g><g><title>&lt;char as regex_syntax::hir::interval::Bound&gt;::as_u32 (317 samples, 0.04%)</title><rect x="56.6202%" y="165" width="0.0447%" height="15" fill="rgb(249,76,35)" fg:x="401763" fg:w="317"/><text x="56.8702%" y="175.50"></text></g><g><title>&lt;regex_syntax::hir::ClassUnicodeRange as regex_syntax::hir::interval::Interval&gt;::lower (160 samples, 0.02%)</title><rect x="56.6649%" y="165" width="0.0225%" height="15" fill="rgb(207,11,44)" fg:x="402080" fg:w="160"/><text x="56.9149%" y="175.50"></text></g><g><title>&lt;regex_syntax::hir::ClassUnicodeRange as regex_syntax::hir::interval::Interval&gt;::upper (177 samples, 0.02%)</title><rect x="56.6875%" y="165" width="0.0249%" height="15" fill="rgb(228,190,49)" fg:x="402240" fg:w="177"/><text x="56.9375%" y="175.50"></text></g><g><title>core::cmp::max (1,365 samples, 0.19%)</title><rect x="56.7124%" y="165" width="0.1924%" height="15" fill="rgb(214,173,12)" fg:x="402417" fg:w="1365"/><text x="56.9624%" y="175.50"></text></g><g><title>core::cmp::Ord::max (1,192 samples, 0.17%)</title><rect x="56.7368%" y="149" width="0.1680%" height="15" fill="rgb(218,26,35)" fg:x="402590" fg:w="1192"/><text x="56.9868%" y="159.50"></text></g><g><title>core::cmp::max_by (1,062 samples, 0.15%)</title><rect x="56.7551%" y="133" width="0.1497%" height="15" fill="rgb(220,200,19)" fg:x="402720" fg:w="1062"/><text x="57.0051%" y="143.50"></text></g><g><title>core::ops::function::FnOnce::call_once (405 samples, 0.06%)</title><rect x="56.8477%" y="117" width="0.0571%" height="15" fill="rgb(239,95,49)" fg:x="403377" fg:w="405"/><text x="57.0977%" y="127.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (215 samples, 0.03%)</title><rect x="56.8745%" y="101" width="0.0303%" height="15" fill="rgb(235,85,53)" fg:x="403567" fg:w="215"/><text x="57.1245%" y="111.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (18,583 samples, 2.62%)</title><rect x="54.4742%" y="293" width="2.6189%" height="15" fill="rgb(233,133,31)" fg:x="386535" fg:w="18583"/><text x="54.7242%" y="303.50">co..</text></g><g><title>core::ops::function::FnOnce::call_once (18,579 samples, 2.62%)</title><rect x="54.4747%" y="277" width="2.6183%" height="15" fill="rgb(218,25,20)" fg:x="386539" fg:w="18579"/><text x="54.7247%" y="287.50">co..</text></g><g><title>regex_syntax::unicode::hir_class (18,578 samples, 2.62%)</title><rect x="54.4749%" y="261" width="2.6182%" height="15" fill="rgb(252,210,38)" fg:x="386540" fg:w="18578"/><text x="54.7249%" y="271.50">re..</text></g><g><title>regex_syntax::hir::ClassUnicode::new (12,875 samples, 1.81%)</title><rect x="55.2786%" y="245" width="1.8145%" height="15" fill="rgb(242,134,21)" fg:x="392243" fg:w="12875"/><text x="55.5286%" y="255.50">r..</text></g><g><title>regex_syntax::hir::interval::IntervalSet&lt;I&gt;::new (12,875 samples, 1.81%)</title><rect x="55.2786%" y="229" width="1.8145%" height="15" fill="rgb(213,28,48)" fg:x="392243" fg:w="12875"/><text x="55.5286%" y="239.50">r..</text></g><g><title>regex_syntax::hir::interval::IntervalSet&lt;I&gt;::canonicalize (12,854 samples, 1.81%)</title><rect x="55.2815%" y="213" width="1.8115%" height="15" fill="rgb(250,196,2)" fg:x="392264" fg:w="12854"/><text x="55.5315%" y="223.50">r..</text></g><g><title>regex_syntax::hir::interval::IntervalSet&lt;I&gt;::is_canonical (12,854 samples, 1.81%)</title><rect x="55.2815%" y="197" width="1.8115%" height="15" fill="rgb(227,5,17)" fg:x="392264" fg:w="12854"/><text x="55.5315%" y="207.50">r..</text></g><g><title>regex_syntax::hir::interval::Interval::is_contiguous (4,343 samples, 0.61%)</title><rect x="56.4810%" y="181" width="0.6121%" height="15" fill="rgb(221,226,24)" fg:x="400775" fg:w="4343"/><text x="56.7310%" y="191.50"></text></g><g><title>core::cmp::min (1,336 samples, 0.19%)</title><rect x="56.9048%" y="165" width="0.1883%" height="15" fill="rgb(211,5,48)" fg:x="403782" fg:w="1336"/><text x="57.1548%" y="175.50"></text></g><g><title>core::cmp::Ord::min (1,223 samples, 0.17%)</title><rect x="56.9207%" y="149" width="0.1724%" height="15" fill="rgb(219,150,6)" fg:x="403895" fg:w="1223"/><text x="57.1707%" y="159.50"></text></g><g><title>core::cmp::min_by (1,080 samples, 0.15%)</title><rect x="56.9408%" y="133" width="0.1522%" height="15" fill="rgb(251,46,16)" fg:x="404038" fg:w="1080"/><text x="57.1908%" y="143.50"></text></g><g><title>core::ops::function::FnOnce::call_once (409 samples, 0.06%)</title><rect x="57.0354%" y="117" width="0.0576%" height="15" fill="rgb(220,204,40)" fg:x="404709" fg:w="409"/><text x="57.2854%" y="127.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (223 samples, 0.03%)</title><rect x="57.0616%" y="101" width="0.0314%" height="15" fill="rgb(211,85,2)" fg:x="404895" fg:w="223"/><text x="57.3116%" y="111.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::hir_unicode_class (19,119 samples, 2.69%)</title><rect x="54.4127%" y="357" width="2.6944%" height="15" fill="rgb(229,17,7)" fg:x="386099" fg:w="19119"/><text x="54.6627%" y="367.50">re..</text></g><g><title>regex_syntax::unicode::class (19,090 samples, 2.69%)</title><rect x="54.4168%" y="341" width="2.6903%" height="15" fill="rgb(239,72,28)" fg:x="386128" fg:w="19090"/><text x="54.6668%" y="351.50">re..</text></g><g><title>regex_syntax::unicode::gencat (18,693 samples, 2.63%)</title><rect x="54.4727%" y="325" width="2.6344%" height="15" fill="rgb(230,47,54)" fg:x="386525" fg:w="18693"/><text x="54.7227%" y="335.50">re..</text></g><g><title>regex_syntax::unicode::gencat::imp (18,688 samples, 2.63%)</title><rect x="54.4735%" y="309" width="2.6337%" height="15" fill="rgb(214,50,8)" fg:x="386530" fg:w="18688"/><text x="54.7235%" y="319.50">re..</text></g><g><title>regex_syntax::unicode::property_set (91 samples, 0.01%)</title><rect x="57.0943%" y="293" width="0.0128%" height="15" fill="rgb(216,198,43)" fg:x="405127" fg:w="91"/><text x="57.3443%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key (88 samples, 0.01%)</title><rect x="57.0947%" y="277" width="0.0124%" height="15" fill="rgb(234,20,35)" fg:x="405130" fg:w="88"/><text x="57.3447%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (88 samples, 0.01%)</title><rect x="57.0947%" y="261" width="0.0124%" height="15" fill="rgb(254,45,19)" fg:x="405130" fg:w="88"/><text x="57.3447%" y="271.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::visit_class_post (64,015 samples, 9.02%)</title><rect x="48.0920%" y="389" width="9.0216%" height="15" fill="rgb(219,14,44)" fg:x="341249" fg:w="64015"/><text x="48.3420%" y="399.50">regex_syntax:..</text></g><g><title>&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_class_set_item_post (64,012 samples, 9.02%)</title><rect x="48.0924%" y="373" width="9.0212%" height="15" fill="rgb(217,220,26)" fg:x="341252" fg:w="64012"/><text x="48.3424%" y="383.50">&lt;regex_syntax..</text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::induct (64,097 samples, 9.03%)</title><rect x="48.0810%" y="421" width="9.0332%" height="15" fill="rgb(213,158,28)" fg:x="341171" fg:w="64097"/><text x="48.3310%" y="431.50">regex_syntax:..</text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::visit_class (64,085 samples, 9.03%)</title><rect x="48.0827%" y="405" width="9.0315%" height="15" fill="rgb(252,51,52)" fg:x="341183" fg:w="64085"/><text x="48.3327%" y="415.50">regex_syntax:..</text></g><g><title>regex_syntax::parser::Parser::parse (67,217 samples, 9.47%)</title><rect x="47.6420%" y="485" width="9.4729%" height="15" fill="rgb(246,89,16)" fg:x="338056" fg:w="67217"/><text x="47.8920%" y="495.50">regex_syntax::..</text></g><g><title>regex_syntax::hir::translate::Translator::translate (64,763 samples, 9.13%)</title><rect x="47.9879%" y="469" width="9.1270%" height="15" fill="rgb(216,158,49)" fg:x="340510" fg:w="64763"/><text x="48.2379%" y="479.50">regex_syntax:..</text></g><g><title>regex_syntax::ast::visitor::visit (64,763 samples, 9.13%)</title><rect x="47.9879%" y="453" width="9.1270%" height="15" fill="rgb(236,107,19)" fg:x="340510" fg:w="64763"/><text x="48.2379%" y="463.50">regex_syntax:..</text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::visit (64,738 samples, 9.12%)</title><rect x="47.9914%" y="437" width="9.1235%" height="15" fill="rgb(228,185,30)" fg:x="340535" fg:w="64738"/><text x="48.2414%" y="447.50">regex_syntax:..</text></g><g><title>regex::re_builder::unicode::RegexBuilder::build (376,673 samples, 53.08%)</title><rect x="4.0326%" y="533" width="53.0843%" height="15" fill="rgb(246,134,8)" fg:x="28614" fg:w="376673"/><text x="4.2826%" y="543.50">regex::re_builder::unicode::RegexBuilder::build</text></g><g><title>regex::exec::ExecBuilder::build (376,633 samples, 53.08%)</title><rect x="4.0382%" y="517" width="53.0787%" height="15" fill="rgb(214,143,50)" fg:x="28654" fg:w="376633"/><text x="4.2882%" y="527.50">regex::exec::ExecBuilder::build</text></g><g><title>regex::exec::ExecBuilder::parse (75,557 samples, 10.65%)</title><rect x="46.4687%" y="501" width="10.6482%" height="15" fill="rgb(228,75,8)" fg:x="329730" fg:w="75557"/><text x="46.7187%" y="511.50">regex::exec::Exe..</text></g><g><title>std::sync::once::Once::call_inner (376,734 samples, 53.09%)</title><rect x="4.0321%" y="613" width="53.0929%" height="15" fill="rgb(207,175,4)" fg:x="28611" fg:w="376734"/><text x="4.2821%" y="623.50">std::sync::once::Once::call_inner</text></g><g><title>std::sync::once::Once::call_once::{{closure}} (376,733 samples, 53.09%)</title><rect x="4.0323%" y="597" width="53.0928%" height="15" fill="rgb(205,108,24)" fg:x="28612" fg:w="376733"/><text x="4.2823%" y="607.50">std::sync::once::Once::call_once::{{closure}}</text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (376,731 samples, 53.09%)</title><rect x="4.0326%" y="581" width="53.0925%" height="15" fill="rgb(244,120,49)" fg:x="28614" fg:w="376731"/><text x="4.2826%" y="591.50">lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}}</text></g><g><title>core::ops::function::FnOnce::call_once (376,731 samples, 53.09%)</title><rect x="4.0326%" y="565" width="53.0925%" height="15" fill="rgb(223,47,38)" fg:x="28614" fg:w="376731"/><text x="4.2826%" y="575.50">core::ops::function::FnOnce::call_once</text></g><g><title>regex::re_unicode::Regex::new (376,731 samples, 53.09%)</title><rect x="4.0326%" y="549" width="53.0925%" height="15" fill="rgb(229,179,11)" fg:x="28614" fg:w="376731"/><text x="4.2826%" y="559.50">regex::re_unicode::Regex::new</text></g><g><title>&lt;ignore::types::TypesBuilder::add::RE as core::ops::deref::Deref&gt;::deref (376,735 samples, 53.09%)</title><rect x="4.0321%" y="645" width="53.0930%" height="15" fill="rgb(231,122,1)" fg:x="28611" fg:w="376735"/><text x="4.2821%" y="655.50">&lt;ignore::types::TypesBuilder::add::RE as core::ops::deref::Deref&gt;::deref</text></g><g><title>std::sync::once::Once::call_once (376,735 samples, 53.09%)</title><rect x="4.0321%" y="629" width="53.0930%" height="15" fill="rgb(245,119,9)" fg:x="28611" fg:w="376735"/><text x="4.2821%" y="639.50">std::sync::once::Once::call_once</text></g><g><title>ignore::types::TypesBuilder::add_defaults (376,742 samples, 53.09%)</title><rect x="4.0316%" y="677" width="53.0940%" height="15" fill="rgb(241,163,25)" fg:x="28607" fg:w="376742"/><text x="4.2816%" y="687.50">ignore::types::TypesBuilder::add_defaults</text></g><g><title>ignore::types::TypesBuilder::add (376,738 samples, 53.09%)</title><rect x="4.0321%" y="661" width="53.0935%" height="15" fill="rgb(217,214,3)" fg:x="28611" fg:w="376738"/><text x="4.2821%" y="671.50">ignore::types::TypesBuilder::add</text></g><g><title>rg::args::ArgMatches::types (376,752 samples, 53.10%)</title><rect x="4.0314%" y="693" width="53.0954%" height="15" fill="rgb(240,86,28)" fg:x="28606" fg:w="376752"/><text x="4.2814%" y="703.50">rg::args::ArgMatches::types</text></g><g><title>rg::args::ArgMatches::walker_builder (382,587 samples, 53.92%)</title><rect x="3.2170%" y="709" width="53.9178%" height="15" fill="rgb(215,47,9)" fg:x="22827" fg:w="382587"/><text x="3.4670%" y="719.50">rg::args::ArgMatches::walker_builder</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (405,327 samples, 57.12%)</title><rect x="0.0128%" y="789" width="57.1225%" height="15" fill="rgb(252,25,45)" fg:x="91" fg:w="405327"/><text x="0.2628%" y="799.50">core::result::Result&lt;T,E&gt;::and_then</text></g><g><title>core::ops::function::FnOnce::call_once (405,327 samples, 57.12%)</title><rect x="0.0128%" y="773" width="57.1225%" height="15" fill="rgb(251,164,9)" fg:x="91" fg:w="405327"/><text x="0.2628%" y="783.50">core::ops::function::FnOnce::call_once</text></g><g><title>rg::try_main (405,327 samples, 57.12%)</title><rect x="0.0128%" y="757" width="57.1225%" height="15" fill="rgb(233,194,0)" fg:x="91" fg:w="405327"/><text x="0.2628%" y="767.50">rg::try_main</text></g><g><title>rg::search_parallel (389,457 samples, 54.89%)</title><rect x="2.2494%" y="741" width="54.8860%" height="15" fill="rgb(249,111,24)" fg:x="15961" fg:w="389457"/><text x="2.4994%" y="751.50">rg::search_parallel</text></g><g><title>rg::args::Args::walker_parallel (382,591 samples, 53.92%)</title><rect x="3.2170%" y="725" width="53.9183%" height="15" fill="rgb(250,223,3)" fg:x="22827" fg:w="382591"/><text x="3.4670%" y="735.50">rg::args::Args::walker_parallel</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (79 samples, 0.01%)</title><rect x="57.1434%" y="661" width="0.0111%" height="15" fill="rgb(236,178,37)" fg:x="405475" fg:w="79"/><text x="57.3934%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (77 samples, 0.01%)</title><rect x="57.1436%" y="645" width="0.0109%" height="15" fill="rgb(241,158,50)" fg:x="405477" fg:w="77"/><text x="57.3936%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (75 samples, 0.01%)</title><rect x="57.1439%" y="629" width="0.0106%" height="15" fill="rgb(213,121,41)" fg:x="405479" fg:w="75"/><text x="57.3939%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (225 samples, 0.03%)</title><rect x="57.1428%" y="693" width="0.0317%" height="15" fill="rgb(240,92,3)" fg:x="405471" fg:w="225"/><text x="57.3928%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (223 samples, 0.03%)</title><rect x="57.1431%" y="677" width="0.0314%" height="15" fill="rgb(205,123,3)" fg:x="405473" fg:w="223"/><text x="57.3931%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (120 samples, 0.02%)</title><rect x="57.1576%" y="661" width="0.0169%" height="15" fill="rgb(205,97,47)" fg:x="405576" fg:w="120"/><text x="57.4076%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (119 samples, 0.02%)</title><rect x="57.1577%" y="645" width="0.0168%" height="15" fill="rgb(247,152,14)" fg:x="405577" fg:w="119"/><text x="57.4077%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (168 samples, 0.02%)</title><rect x="57.1745%" y="693" width="0.0237%" height="15" fill="rgb(248,195,53)" fg:x="405696" fg:w="168"/><text x="57.4245%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (164 samples, 0.02%)</title><rect x="57.1751%" y="677" width="0.0231%" height="15" fill="rgb(226,201,16)" fg:x="405700" fg:w="164"/><text x="57.4251%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (158 samples, 0.02%)</title><rect x="57.1759%" y="661" width="0.0223%" height="15" fill="rgb(205,98,0)" fg:x="405706" fg:w="158"/><text x="57.4259%" y="671.50"></text></g><g><title>rg::args::ArgMatches::is_present (432 samples, 0.06%)</title><rect x="57.1379%" y="773" width="0.0609%" height="15" fill="rgb(214,191,48)" fg:x="405436" fg:w="432"/><text x="57.3879%" y="783.50"></text></g><g><title>clap::args::arg_matches::ArgMatches::is_present (429 samples, 0.06%)</title><rect x="57.1383%" y="757" width="0.0605%" height="15" fill="rgb(237,112,39)" fg:x="405439" fg:w="429"/><text x="57.3883%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (419 samples, 0.06%)</title><rect x="57.1397%" y="741" width="0.0590%" height="15" fill="rgb(247,203,27)" fg:x="405449" fg:w="419"/><text x="57.3897%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (416 samples, 0.06%)</title><rect x="57.1401%" y="725" width="0.0586%" height="15" fill="rgb(235,124,28)" fg:x="405452" fg:w="416"/><text x="57.3901%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (404 samples, 0.06%)</title><rect x="57.1418%" y="709" width="0.0569%" height="15" fill="rgb(208,207,46)" fg:x="405464" fg:w="404"/><text x="57.3918%" y="719.50"></text></g><g><title>rg::args::ArgMatches::is_present (110 samples, 0.02%)</title><rect x="57.2107%" y="741" width="0.0155%" height="15" fill="rgb(234,176,4)" fg:x="405953" fg:w="110"/><text x="57.4607%" y="751.50"></text></g><g><title>clap::args::arg_matches::ArgMatches::is_present (109 samples, 0.02%)</title><rect x="57.2109%" y="725" width="0.0154%" height="15" fill="rgb(230,133,28)" fg:x="405954" fg:w="109"/><text x="57.4609%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (106 samples, 0.01%)</title><rect x="57.2113%" y="709" width="0.0149%" height="15" fill="rgb(211,137,40)" fg:x="405957" fg:w="106"/><text x="57.4613%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (106 samples, 0.01%)</title><rect x="57.2113%" y="693" width="0.0149%" height="15" fill="rgb(254,35,13)" fg:x="405957" fg:w="106"/><text x="57.4613%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (101 samples, 0.01%)</title><rect x="57.2120%" y="677" width="0.0142%" height="15" fill="rgb(225,49,51)" fg:x="405962" fg:w="101"/><text x="57.4620%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (112 samples, 0.02%)</title><rect x="57.2434%" y="645" width="0.0158%" height="15" fill="rgb(251,10,15)" fg:x="406185" fg:w="112"/><text x="57.4934%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (110 samples, 0.02%)</title><rect x="57.2437%" y="629" width="0.0155%" height="15" fill="rgb(228,207,15)" fg:x="406187" fg:w="110"/><text x="57.4937%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (79 samples, 0.01%)</title><rect x="57.2481%" y="613" width="0.0111%" height="15" fill="rgb(241,99,19)" fg:x="406218" fg:w="79"/><text x="57.4981%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (79 samples, 0.01%)</title><rect x="57.2481%" y="597" width="0.0111%" height="15" fill="rgb(207,104,49)" fg:x="406218" fg:w="79"/><text x="57.4981%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;grep_regex::config::ConfiguredHIR&gt; (216 samples, 0.03%)</title><rect x="57.2416%" y="693" width="0.0304%" height="15" fill="rgb(234,99,18)" fg:x="406172" fg:w="216"/><text x="57.4916%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::Hir&gt; (210 samples, 0.03%)</title><rect x="57.2424%" y="677" width="0.0296%" height="15" fill="rgb(213,191,49)" fg:x="406178" fg:w="210"/><text x="57.4924%" y="687.50"></text></g><g><title>&lt;regex_syntax::hir::Hir as core::ops::drop::Drop&gt;::drop (210 samples, 0.03%)</title><rect x="57.2424%" y="661" width="0.0296%" height="15" fill="rgb(210,226,19)" fg:x="406178" fg:w="210"/><text x="57.4924%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (97 samples, 0.01%)</title><rect x="57.2850%" y="597" width="0.0137%" height="15" fill="rgb(229,97,18)" fg:x="406480" fg:w="97"/><text x="57.5350%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (138 samples, 0.02%)</title><rect x="57.2794%" y="645" width="0.0194%" height="15" fill="rgb(211,167,15)" fg:x="406440" fg:w="138"/><text x="57.5294%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (138 samples, 0.02%)</title><rect x="57.2794%" y="629" width="0.0194%" height="15" fill="rgb(210,169,34)" fg:x="406440" fg:w="138"/><text x="57.5294%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (99 samples, 0.01%)</title><rect x="57.2849%" y="613" width="0.0140%" height="15" fill="rgb(241,121,31)" fg:x="406479" fg:w="99"/><text x="57.5349%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::Ast&gt; (239 samples, 0.03%)</title><rect x="57.2784%" y="677" width="0.0337%" height="15" fill="rgb(232,40,11)" fg:x="406433" fg:w="239"/><text x="57.5284%" y="687.50"></text></g><g><title>&lt;regex_syntax::ast::Ast as core::ops::drop::Drop&gt;::drop (239 samples, 0.03%)</title><rect x="57.2784%" y="661" width="0.0337%" height="15" fill="rgb(205,86,26)" fg:x="406433" fg:w="239"/><text x="57.5284%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (76 samples, 0.01%)</title><rect x="57.3297%" y="581" width="0.0107%" height="15" fill="rgb(231,126,28)" fg:x="406797" fg:w="76"/><text x="57.5797%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (79 samples, 0.01%)</title><rect x="57.3297%" y="597" width="0.0111%" height="15" fill="rgb(219,221,18)" fg:x="406797" fg:w="79"/><text x="57.5797%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (95 samples, 0.01%)</title><rect x="57.3281%" y="613" width="0.0134%" height="15" fill="rgb(211,40,0)" fg:x="406786" fg:w="95"/><text x="57.5781%" y="623.50"></text></g><g><title>regex_syntax::ast::parse::NestLimiter&lt;P&gt;::check (120 samples, 0.02%)</title><rect x="57.3428%" y="613" width="0.0169%" height="15" fill="rgb(239,85,43)" fg:x="406890" fg:w="120"/><text x="57.5928%" y="623.50"></text></g><g><title>regex_syntax::ast::visitor::visit (120 samples, 0.02%)</title><rect x="57.3428%" y="597" width="0.0169%" height="15" fill="rgb(231,55,21)" fg:x="406890" fg:w="120"/><text x="57.5928%" y="607.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::visit (113 samples, 0.02%)</title><rect x="57.3438%" y="581" width="0.0159%" height="15" fill="rgb(225,184,43)" fg:x="406897" fg:w="113"/><text x="57.5938%" y="591.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char_at (97 samples, 0.01%)</title><rect x="57.3622%" y="597" width="0.0137%" height="15" fill="rgb(251,158,41)" fg:x="407028" fg:w="97"/><text x="57.6122%" y="607.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char (105 samples, 0.01%)</title><rect x="57.3619%" y="613" width="0.0148%" height="15" fill="rgb(234,159,37)" fg:x="407026" fg:w="105"/><text x="57.6119%" y="623.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (78 samples, 0.01%)</title><rect x="57.4096%" y="549" width="0.0110%" height="15" fill="rgb(216,204,22)" fg:x="407364" fg:w="78"/><text x="57.6596%" y="559.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (77 samples, 0.01%)</title><rect x="57.4097%" y="533" width="0.0109%" height="15" fill="rgb(214,17,3)" fg:x="407365" fg:w="77"/><text x="57.6597%" y="543.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char_at (180 samples, 0.03%)</title><rect x="57.3958%" y="565" width="0.0254%" height="15" fill="rgb(212,111,17)" fg:x="407266" fg:w="180"/><text x="57.6458%" y="575.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char (197 samples, 0.03%)</title><rect x="57.3955%" y="581" width="0.0278%" height="15" fill="rgb(221,157,24)" fg:x="407264" fg:w="197"/><text x="57.6455%" y="591.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::bump (322 samples, 0.05%)</title><rect x="57.3804%" y="597" width="0.0454%" height="15" fill="rgb(252,16,13)" fg:x="407157" fg:w="322"/><text x="57.6304%" y="607.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char_at (102 samples, 0.01%)</title><rect x="57.4258%" y="581" width="0.0144%" height="15" fill="rgb(221,62,2)" fg:x="407479" fg:w="102"/><text x="57.6758%" y="591.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char (103 samples, 0.01%)</title><rect x="57.4258%" y="597" width="0.0145%" height="15" fill="rgb(247,87,22)" fg:x="407479" fg:w="103"/><text x="57.6758%" y="607.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (74 samples, 0.01%)</title><rect x="57.4459%" y="549" width="0.0104%" height="15" fill="rgb(215,73,9)" fg:x="407622" fg:w="74"/><text x="57.6959%" y="559.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (87 samples, 0.01%)</title><rect x="57.4623%" y="549" width="0.0123%" height="15" fill="rgb(207,175,33)" fg:x="407738" fg:w="87"/><text x="57.7123%" y="559.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (80 samples, 0.01%)</title><rect x="57.4633%" y="533" width="0.0113%" height="15" fill="rgb(243,129,54)" fg:x="407745" fg:w="80"/><text x="57.7133%" y="543.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char_at (213 samples, 0.03%)</title><rect x="57.4451%" y="565" width="0.0300%" height="15" fill="rgb(227,119,45)" fg:x="407616" fg:w="213"/><text x="57.6951%" y="575.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char (231 samples, 0.03%)</title><rect x="57.4445%" y="581" width="0.0326%" height="15" fill="rgb(205,109,36)" fg:x="407612" fg:w="231"/><text x="57.6945%" y="591.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_primitive (720 samples, 0.10%)</title><rect x="57.3780%" y="613" width="0.1015%" height="15" fill="rgb(205,6,39)" fg:x="407140" fg:w="720"/><text x="57.6280%" y="623.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::span_char (278 samples, 0.04%)</title><rect x="57.4403%" y="597" width="0.0392%" height="15" fill="rgb(221,32,16)" fg:x="407582" fg:w="278"/><text x="57.6903%" y="607.50"></text></g><g><title>regex_syntax::ast::parse::Parser::parse (1,141 samples, 0.16%)</title><rect x="57.3228%" y="661" width="0.1608%" height="15" fill="rgb(228,144,50)" fg:x="406748" fg:w="1141"/><text x="57.5728%" y="671.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse (1,141 samples, 0.16%)</title><rect x="57.3228%" y="645" width="0.1608%" height="15" fill="rgb(229,201,53)" fg:x="406748" fg:w="1141"/><text x="57.5728%" y="655.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_with_comments (1,139 samples, 0.16%)</title><rect x="57.3230%" y="629" width="0.1605%" height="15" fill="rgb(249,153,27)" fg:x="406750" fg:w="1139"/><text x="57.5730%" y="639.50"></text></g><g><title>grep_regex::config::Config::ast (1,171 samples, 0.17%)</title><rect x="57.3195%" y="677" width="0.1650%" height="15" fill="rgb(227,106,25)" fg:x="406725" fg:w="1171"/><text x="57.5695%" y="687.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (126 samples, 0.02%)</title><rect x="57.4915%" y="469" width="0.0178%" height="15" fill="rgb(230,65,29)" fg:x="407945" fg:w="126"/><text x="57.7415%" y="479.50"></text></g><g><title>grep_regex::strip::strip_from_match_ascii::{{closure}} (88 samples, 0.01%)</title><rect x="57.4968%" y="453" width="0.0124%" height="15" fill="rgb(221,57,46)" fg:x="407983" fg:w="88"/><text x="57.7468%" y="463.50"></text></g><g><title>grep_regex::strip::strip_from_match_ascii (87 samples, 0.01%)</title><rect x="57.4970%" y="437" width="0.0123%" height="15" fill="rgb(229,161,17)" fg:x="407984" fg:w="87"/><text x="57.7470%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (164 samples, 0.02%)</title><rect x="57.4862%" y="501" width="0.0231%" height="15" fill="rgb(222,213,11)" fg:x="407908" fg:w="164"/><text x="57.7362%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (162 samples, 0.02%)</title><rect x="57.4865%" y="485" width="0.0228%" height="15" fill="rgb(235,35,13)" fg:x="407910" fg:w="162"/><text x="57.7365%" y="495.50"></text></g><g><title>&lt;I as alloc::vec::source_iter_marker::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (167 samples, 0.02%)</title><rect x="57.4860%" y="533" width="0.0235%" height="15" fill="rgb(233,158,34)" fg:x="407906" fg:w="167"/><text x="57.7360%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (167 samples, 0.02%)</title><rect x="57.4860%" y="517" width="0.0235%" height="15" fill="rgb(215,151,48)" fg:x="407906" fg:w="167"/><text x="57.7360%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (193 samples, 0.03%)</title><rect x="57.4851%" y="645" width="0.0272%" height="15" fill="rgb(229,84,14)" fg:x="407900" fg:w="193"/><text x="57.7351%" y="655.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (193 samples, 0.03%)</title><rect x="57.4851%" y="629" width="0.0272%" height="15" fill="rgb(229,68,14)" fg:x="407900" fg:w="193"/><text x="57.7351%" y="639.50"></text></g><g><title>core::iter::adapters::try_process (192 samples, 0.03%)</title><rect x="57.4853%" y="613" width="0.0271%" height="15" fill="rgb(243,106,26)" fg:x="407901" fg:w="192"/><text x="57.7353%" y="623.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (190 samples, 0.03%)</title><rect x="57.4855%" y="597" width="0.0268%" height="15" fill="rgb(206,45,38)" fg:x="407903" fg:w="190"/><text x="57.7355%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (190 samples, 0.03%)</title><rect x="57.4855%" y="581" width="0.0268%" height="15" fill="rgb(226,6,15)" fg:x="407903" fg:w="190"/><text x="57.7355%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (190 samples, 0.03%)</title><rect x="57.4855%" y="565" width="0.0268%" height="15" fill="rgb(232,22,54)" fg:x="407903" fg:w="190"/><text x="57.7355%" y="575.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (189 samples, 0.03%)</title><rect x="57.4857%" y="549" width="0.0266%" height="15" fill="rgb(229,222,32)" fg:x="407904" fg:w="189"/><text x="57.7357%" y="559.50"></text></g><g><title>regex_syntax::hir::Hir::concat (151 samples, 0.02%)</title><rect x="57.5123%" y="645" width="0.0213%" height="15" fill="rgb(228,62,29)" fg:x="408093" fg:w="151"/><text x="57.7623%" y="655.50"></text></g><g><title>grep_regex::strip::strip_from_match (351 samples, 0.05%)</title><rect x="57.4846%" y="677" width="0.0495%" height="15" fill="rgb(251,103,34)" fg:x="407896" fg:w="351"/><text x="57.7346%" y="687.50"></text></g><g><title>grep_regex::strip::strip_from_match_ascii (350 samples, 0.05%)</title><rect x="57.4847%" y="661" width="0.0493%" height="15" fill="rgb(233,12,30)" fg:x="407897" fg:w="350"/><text x="57.7347%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (79 samples, 0.01%)</title><rect x="57.5478%" y="613" width="0.0111%" height="15" fill="rgb(238,52,0)" fg:x="408345" fg:w="79"/><text x="57.7978%" y="623.50"></text></g><g><title>regex_syntax::hir::Hir::concat (171 samples, 0.02%)</title><rect x="57.5632%" y="613" width="0.0241%" height="15" fill="rgb(223,98,5)" fg:x="408454" fg:w="171"/><text x="57.8132%" y="623.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::hir_literal (78 samples, 0.01%)</title><rect x="57.5874%" y="613" width="0.0110%" height="15" fill="rgb(228,75,37)" fg:x="408626" fg:w="78"/><text x="57.8374%" y="623.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::pop (80 samples, 0.01%)</title><rect x="57.5984%" y="613" width="0.0113%" height="15" fill="rgb(205,115,49)" fg:x="408704" fg:w="80"/><text x="57.8484%" y="623.50"></text></g><g><title>&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_post (593 samples, 0.08%)</title><rect x="57.5422%" y="629" width="0.0836%" height="15" fill="rgb(250,154,43)" fg:x="408305" fg:w="593"/><text x="57.7922%" y="639.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::push (114 samples, 0.02%)</title><rect x="57.6097%" y="613" width="0.0161%" height="15" fill="rgb(226,43,29)" fg:x="408784" fg:w="114"/><text x="57.8597%" y="623.50"></text></g><g><title>regex_syntax::hir::translate::Translator::translate (803 samples, 0.11%)</title><rect x="57.5340%" y="677" width="0.1132%" height="15" fill="rgb(249,228,39)" fg:x="408247" fg:w="803"/><text x="57.7840%" y="687.50"></text></g><g><title>regex_syntax::ast::visitor::visit (803 samples, 0.11%)</title><rect x="57.5340%" y="661" width="0.1132%" height="15" fill="rgb(216,79,43)" fg:x="408247" fg:w="803"/><text x="57.7840%" y="671.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::visit (788 samples, 0.11%)</title><rect x="57.5361%" y="645" width="0.1111%" height="15" fill="rgb(228,95,12)" fg:x="408262" fg:w="788"/><text x="57.7861%" y="655.50"></text></g><g><title>grep_regex::config::Config::hir (2,660 samples, 0.37%)</title><rect x="57.2726%" y="693" width="0.3749%" height="15" fill="rgb(249,221,15)" fg:x="406392" fg:w="2660"/><text x="57.5226%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regex_syntax::hir::literal::Literal]&gt; (85 samples, 0.01%)</title><rect x="57.6641%" y="597" width="0.0120%" height="15" fill="rgb(233,34,13)" fg:x="409170" fg:w="85"/><text x="57.9141%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::literal::Literal&gt; (78 samples, 0.01%)</title><rect x="57.6651%" y="581" width="0.0110%" height="15" fill="rgb(214,103,39)" fg:x="409177" fg:w="78"/><text x="57.9151%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (78 samples, 0.01%)</title><rect x="57.6651%" y="565" width="0.0110%" height="15" fill="rgb(251,126,39)" fg:x="409177" fg:w="78"/><text x="57.9151%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (100 samples, 0.01%)</title><rect x="57.6627%" y="613" width="0.0141%" height="15" fill="rgb(214,216,36)" fg:x="409160" fg:w="100"/><text x="57.9127%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::literal::Literals&gt; (137 samples, 0.02%)</title><rect x="57.6621%" y="645" width="0.0193%" height="15" fill="rgb(220,221,8)" fg:x="409156" fg:w="137"/><text x="57.9121%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_syntax::hir::literal::Literal&gt;&gt; (137 samples, 0.02%)</title><rect x="57.6621%" y="629" width="0.0193%" height="15" fill="rgb(240,216,3)" fg:x="409156" fg:w="137"/><text x="57.9121%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (80 samples, 0.01%)</title><rect x="57.6954%" y="533" width="0.0113%" height="15" fill="rgb(232,218,17)" fg:x="409392" fg:w="80"/><text x="57.9454%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (79 samples, 0.01%)</title><rect x="57.6955%" y="517" width="0.0111%" height="15" fill="rgb(229,163,45)" fg:x="409393" fg:w="79"/><text x="57.9455%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (74 samples, 0.01%)</title><rect x="57.6962%" y="501" width="0.0104%" height="15" fill="rgb(231,110,42)" fg:x="409398" fg:w="74"/><text x="57.9462%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (108 samples, 0.02%)</title><rect x="57.6928%" y="613" width="0.0152%" height="15" fill="rgb(208,170,48)" fg:x="409374" fg:w="108"/><text x="57.9428%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (107 samples, 0.02%)</title><rect x="57.6930%" y="597" width="0.0151%" height="15" fill="rgb(239,116,25)" fg:x="409375" fg:w="107"/><text x="57.9430%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (104 samples, 0.01%)</title><rect x="57.6934%" y="581" width="0.0147%" height="15" fill="rgb(219,200,50)" fg:x="409378" fg:w="104"/><text x="57.9434%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (103 samples, 0.01%)</title><rect x="57.6935%" y="565" width="0.0145%" height="15" fill="rgb(245,200,0)" fg:x="409379" fg:w="103"/><text x="57.9435%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (103 samples, 0.01%)</title><rect x="57.6935%" y="549" width="0.0145%" height="15" fill="rgb(245,119,33)" fg:x="409379" fg:w="103"/><text x="57.9435%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (161 samples, 0.02%)</title><rect x="57.7096%" y="581" width="0.0227%" height="15" fill="rgb(231,125,12)" fg:x="409493" fg:w="161"/><text x="57.9596%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (163 samples, 0.02%)</title><rect x="57.7096%" y="597" width="0.0230%" height="15" fill="rgb(216,96,41)" fg:x="409493" fg:w="163"/><text x="57.9596%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (187 samples, 0.03%)</title><rect x="57.7082%" y="613" width="0.0264%" height="15" fill="rgb(248,43,45)" fg:x="409483" fg:w="187"/><text x="57.9582%" y="623.50"></text></g><g><title>grep_regex::literal::union_required (401 samples, 0.06%)</title><rect x="57.6817%" y="645" width="0.0565%" height="15" fill="rgb(217,222,7)" fg:x="409295" fg:w="401"/><text x="57.9317%" y="655.50"></text></g><g><title>regex_syntax::hir::literal::Literals::cross_add (368 samples, 0.05%)</title><rect x="57.6864%" y="629" width="0.0519%" height="15" fill="rgb(233,28,6)" fg:x="409328" fg:w="368"/><text x="57.9364%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (86 samples, 0.01%)</title><rect x="57.7773%" y="485" width="0.0121%" height="15" fill="rgb(231,218,15)" fg:x="409973" fg:w="86"/><text x="58.0273%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (84 samples, 0.01%)</title><rect x="57.7775%" y="469" width="0.0118%" height="15" fill="rgb(226,171,48)" fg:x="409975" fg:w="84"/><text x="58.0275%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (81 samples, 0.01%)</title><rect x="57.7780%" y="453" width="0.0114%" height="15" fill="rgb(235,201,9)" fg:x="409978" fg:w="81"/><text x="58.0280%" y="463.50"></text></g><g><title>&lt;regex_syntax::hir::literal::Literal as core::clone::Clone&gt;::clone (147 samples, 0.02%)</title><rect x="57.7704%" y="565" width="0.0207%" height="15" fill="rgb(217,80,15)" fg:x="409924" fg:w="147"/><text x="58.0204%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (141 samples, 0.02%)</title><rect x="57.7712%" y="549" width="0.0199%" height="15" fill="rgb(219,152,8)" fg:x="409930" fg:w="141"/><text x="58.0212%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (114 samples, 0.02%)</title><rect x="57.7750%" y="533" width="0.0161%" height="15" fill="rgb(243,107,38)" fg:x="409957" fg:w="114"/><text x="58.0250%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (114 samples, 0.02%)</title><rect x="57.7750%" y="517" width="0.0161%" height="15" fill="rgb(231,17,5)" fg:x="409957" fg:w="114"/><text x="58.0250%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (113 samples, 0.02%)</title><rect x="57.7751%" y="501" width="0.0159%" height="15" fill="rgb(209,25,54)" fg:x="409958" fg:w="113"/><text x="58.0251%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (74 samples, 0.01%)</title><rect x="57.7946%" y="565" width="0.0104%" height="15" fill="rgb(219,0,2)" fg:x="410096" fg:w="74"/><text x="58.0446%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (72 samples, 0.01%)</title><rect x="57.7949%" y="549" width="0.0101%" height="15" fill="rgb(246,9,5)" fg:x="410098" fg:w="72"/><text x="58.0449%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (71 samples, 0.01%)</title><rect x="57.7950%" y="533" width="0.0100%" height="15" fill="rgb(226,159,4)" fg:x="410099" fg:w="71"/><text x="58.0450%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (339 samples, 0.05%)</title><rect x="57.7596%" y="629" width="0.0478%" height="15" fill="rgb(219,175,34)" fg:x="409848" fg:w="339"/><text x="58.0096%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (320 samples, 0.05%)</title><rect x="57.7623%" y="613" width="0.0451%" height="15" fill="rgb(236,10,46)" fg:x="409867" fg:w="320"/><text x="58.0123%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (318 samples, 0.04%)</title><rect x="57.7626%" y="597" width="0.0448%" height="15" fill="rgb(240,211,16)" fg:x="409869" fg:w="318"/><text x="58.0126%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (316 samples, 0.04%)</title><rect x="57.7629%" y="581" width="0.0445%" height="15" fill="rgb(205,3,43)" fg:x="409871" fg:w="316"/><text x="58.0129%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (83 samples, 0.01%)</title><rect x="57.8215%" y="517" width="0.0117%" height="15" fill="rgb(245,7,22)" fg:x="410287" fg:w="83"/><text x="58.0715%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (180 samples, 0.03%)</title><rect x="57.8160%" y="533" width="0.0254%" height="15" fill="rgb(239,132,32)" fg:x="410248" fg:w="180"/><text x="58.0660%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (199 samples, 0.03%)</title><rect x="57.8139%" y="581" width="0.0280%" height="15" fill="rgb(228,202,34)" fg:x="410233" fg:w="199"/><text x="58.0639%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (196 samples, 0.03%)</title><rect x="57.8143%" y="565" width="0.0276%" height="15" fill="rgb(254,200,22)" fg:x="410236" fg:w="196"/><text x="58.0643%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (184 samples, 0.03%)</title><rect x="57.8160%" y="549" width="0.0259%" height="15" fill="rgb(219,10,39)" fg:x="410248" fg:w="184"/><text x="58.0660%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (216 samples, 0.03%)</title><rect x="57.8124%" y="597" width="0.0304%" height="15" fill="rgb(226,210,39)" fg:x="410222" fg:w="216"/><text x="58.0624%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (272 samples, 0.04%)</title><rect x="57.8074%" y="629" width="0.0383%" height="15" fill="rgb(208,219,16)" fg:x="410187" fg:w="272"/><text x="58.0574%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (244 samples, 0.03%)</title><rect x="57.8114%" y="613" width="0.0344%" height="15" fill="rgb(216,158,51)" fg:x="410215" fg:w="244"/><text x="58.0614%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (98 samples, 0.01%)</title><rect x="57.8521%" y="629" width="0.0138%" height="15" fill="rgb(233,14,44)" fg:x="410504" fg:w="98"/><text x="58.1021%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (138 samples, 0.02%)</title><rect x="57.8700%" y="597" width="0.0194%" height="15" fill="rgb(237,97,39)" fg:x="410631" fg:w="138"/><text x="58.1200%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (150 samples, 0.02%)</title><rect x="57.8691%" y="613" width="0.0211%" height="15" fill="rgb(218,198,43)" fg:x="410625" fg:w="150"/><text x="58.1191%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (172 samples, 0.02%)</title><rect x="57.8676%" y="629" width="0.0242%" height="15" fill="rgb(231,104,20)" fg:x="410614" fg:w="172"/><text x="58.1176%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regex_syntax::hir::literal::Literal]&gt; (73 samples, 0.01%)</title><rect x="57.8983%" y="597" width="0.0103%" height="15" fill="rgb(254,36,13)" fg:x="410832" fg:w="73"/><text x="58.1483%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (90 samples, 0.01%)</title><rect x="57.8973%" y="613" width="0.0127%" height="15" fill="rgb(248,14,50)" fg:x="410825" fg:w="90"/><text x="58.1473%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_syntax::hir::literal::Literal&gt;&gt; (127 samples, 0.02%)</title><rect x="57.8969%" y="629" width="0.0179%" height="15" fill="rgb(217,107,29)" fg:x="410822" fg:w="127"/><text x="58.1469%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;regex_syntax::hir::literal::Literal&gt;&gt; (79 samples, 0.01%)</title><rect x="57.9148%" y="629" width="0.0111%" height="15" fill="rgb(251,169,33)" fg:x="410949" fg:w="79"/><text x="58.1648%" y="639.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (79 samples, 0.01%)</title><rect x="57.9148%" y="613" width="0.0111%" height="15" fill="rgb(217,108,32)" fg:x="410949" fg:w="79"/><text x="58.1648%" y="623.50"></text></g><g><title>regex_syntax::hir::literal::Literals::is_empty (115 samples, 0.02%)</title><rect x="57.9396%" y="629" width="0.0162%" height="15" fill="rgb(219,66,42)" fg:x="411125" fg:w="115"/><text x="58.1896%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (99 samples, 0.01%)</title><rect x="57.9716%" y="581" width="0.0140%" height="15" fill="rgb(206,180,7)" fg:x="411352" fg:w="99"/><text x="58.2216%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (115 samples, 0.02%)</title><rect x="57.9710%" y="597" width="0.0162%" height="15" fill="rgb(208,226,31)" fg:x="411348" fg:w="115"/><text x="58.2210%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (137 samples, 0.02%)</title><rect x="57.9685%" y="613" width="0.0193%" height="15" fill="rgb(218,26,49)" fg:x="411330" fg:w="137"/><text x="58.2185%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;regex_syntax::hir::literal::Literal&gt;&gt; (79 samples, 0.01%)</title><rect x="57.9901%" y="613" width="0.0111%" height="15" fill="rgb(233,197,48)" fg:x="411483" fg:w="79"/><text x="58.2401%" y="623.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (79 samples, 0.01%)</title><rect x="57.9901%" y="597" width="0.0111%" height="15" fill="rgb(252,181,51)" fg:x="411483" fg:w="79"/><text x="58.2401%" y="607.50"></text></g><g><title>regex_syntax::hir::literal::Literals::cross_product (1,759 samples, 0.25%)</title><rect x="57.7534%" y="645" width="0.2479%" height="15" fill="rgb(253,90,19)" fg:x="409804" fg:w="1759"/><text x="58.0034%" y="655.50"></text></g><g><title>regex_syntax::hir::literal::Literals::remove_complete (273 samples, 0.04%)</title><rect x="57.9629%" y="629" width="0.0385%" height="15" fill="rgb(215,171,30)" fg:x="411290" fg:w="273"/><text x="58.2129%" y="639.50"></text></g><g><title>grep_regex::literal::union_required (2,514 samples, 0.35%)</title><rect x="57.6569%" y="661" width="0.3543%" height="15" fill="rgb(214,222,9)" fg:x="409119" fg:w="2514"/><text x="57.9069%" y="671.50"></text></g><g><title>regex_syntax::hir::literal::Literals::union (77 samples, 0.01%)</title><rect x="58.0150%" y="629" width="0.0109%" height="15" fill="rgb(223,3,22)" fg:x="411660" fg:w="77"/><text x="58.2650%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::literal::Literals&gt; (111 samples, 0.02%)</title><rect x="58.0315%" y="613" width="0.0156%" height="15" fill="rgb(225,196,46)" fg:x="411777" fg:w="111"/><text x="58.2815%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_syntax::hir::literal::Literal&gt;&gt; (111 samples, 0.02%)</title><rect x="58.0315%" y="597" width="0.0156%" height="15" fill="rgb(209,110,37)" fg:x="411777" fg:w="111"/><text x="58.2815%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (78 samples, 0.01%)</title><rect x="58.0818%" y="453" width="0.0110%" height="15" fill="rgb(249,89,12)" fg:x="412134" fg:w="78"/><text x="58.3318%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (78 samples, 0.01%)</title><rect x="58.0818%" y="437" width="0.0110%" height="15" fill="rgb(226,27,33)" fg:x="412134" fg:w="78"/><text x="58.3318%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (76 samples, 0.01%)</title><rect x="58.0821%" y="421" width="0.0107%" height="15" fill="rgb(213,82,22)" fg:x="412136" fg:w="76"/><text x="58.3321%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (129 samples, 0.02%)</title><rect x="58.0755%" y="517" width="0.0182%" height="15" fill="rgb(248,140,0)" fg:x="412089" fg:w="129"/><text x="58.3255%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (106 samples, 0.01%)</title><rect x="58.0787%" y="501" width="0.0149%" height="15" fill="rgb(228,106,3)" fg:x="412112" fg:w="106"/><text x="58.3287%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (105 samples, 0.01%)</title><rect x="58.0789%" y="485" width="0.0148%" height="15" fill="rgb(209,23,37)" fg:x="412113" fg:w="105"/><text x="58.3289%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (103 samples, 0.01%)</title><rect x="58.0791%" y="469" width="0.0145%" height="15" fill="rgb(241,93,50)" fg:x="412115" fg:w="103"/><text x="58.3291%" y="479.50"></text></g><g><title>&lt;regex_syntax::hir::literal::Literal as core::clone::Clone&gt;::clone (134 samples, 0.02%)</title><rect x="58.0749%" y="533" width="0.0189%" height="15" fill="rgb(253,46,43)" fg:x="412085" fg:w="134"/><text x="58.3249%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (105 samples, 0.01%)</title><rect x="58.0958%" y="533" width="0.0148%" height="15" fill="rgb(226,206,43)" fg:x="412233" fg:w="105"/><text x="58.3458%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (101 samples, 0.01%)</title><rect x="58.0963%" y="517" width="0.0142%" height="15" fill="rgb(217,54,7)" fg:x="412237" fg:w="101"/><text x="58.3463%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (98 samples, 0.01%)</title><rect x="58.0967%" y="501" width="0.0138%" height="15" fill="rgb(223,5,52)" fg:x="412240" fg:w="98"/><text x="58.3467%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (337 samples, 0.05%)</title><rect x="58.0660%" y="581" width="0.0475%" height="15" fill="rgb(206,52,46)" fg:x="412022" fg:w="337"/><text x="58.3160%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (335 samples, 0.05%)</title><rect x="58.0663%" y="565" width="0.0472%" height="15" fill="rgb(253,136,11)" fg:x="412024" fg:w="335"/><text x="58.3163%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (332 samples, 0.05%)</title><rect x="58.0667%" y="549" width="0.0468%" height="15" fill="rgb(208,106,33)" fg:x="412027" fg:w="332"/><text x="58.3167%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (355 samples, 0.05%)</title><rect x="58.0638%" y="597" width="0.0500%" height="15" fill="rgb(206,54,4)" fg:x="412006" fg:w="355"/><text x="58.3138%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (83 samples, 0.01%)</title><rect x="58.1272%" y="485" width="0.0117%" height="15" fill="rgb(213,3,15)" fg:x="412456" fg:w="83"/><text x="58.3772%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (178 samples, 0.03%)</title><rect x="58.1227%" y="501" width="0.0251%" height="15" fill="rgb(252,211,39)" fg:x="412424" fg:w="178"/><text x="58.3727%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (198 samples, 0.03%)</title><rect x="58.1204%" y="549" width="0.0279%" height="15" fill="rgb(223,6,36)" fg:x="412408" fg:w="198"/><text x="58.3704%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (197 samples, 0.03%)</title><rect x="58.1206%" y="533" width="0.0278%" height="15" fill="rgb(252,169,45)" fg:x="412409" fg:w="197"/><text x="58.3706%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (187 samples, 0.03%)</title><rect x="58.1220%" y="517" width="0.0264%" height="15" fill="rgb(212,48,26)" fg:x="412419" fg:w="187"/><text x="58.3720%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (212 samples, 0.03%)</title><rect x="58.1192%" y="565" width="0.0299%" height="15" fill="rgb(251,102,48)" fg:x="412399" fg:w="212"/><text x="58.3692%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (263 samples, 0.04%)</title><rect x="58.1138%" y="597" width="0.0371%" height="15" fill="rgb(243,208,16)" fg:x="412361" fg:w="263"/><text x="58.3638%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (225 samples, 0.03%)</title><rect x="58.1192%" y="581" width="0.0317%" height="15" fill="rgb(219,96,24)" fg:x="412399" fg:w="225"/><text x="58.3692%" y="591.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 samples, 0.01%)</title><rect x="58.1588%" y="597" width="0.0134%" height="15" fill="rgb(219,33,29)" fg:x="412680" fg:w="95"/><text x="58.4088%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (138 samples, 0.02%)</title><rect x="58.1765%" y="565" width="0.0194%" height="15" fill="rgb(223,176,5)" fg:x="412806" fg:w="138"/><text x="58.4265%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (148 samples, 0.02%)</title><rect x="58.1760%" y="581" width="0.0209%" height="15" fill="rgb(228,140,14)" fg:x="412802" fg:w="148"/><text x="58.4260%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (169 samples, 0.02%)</title><rect x="58.1744%" y="597" width="0.0238%" height="15" fill="rgb(217,179,31)" fg:x="412791" fg:w="169"/><text x="58.4244%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (74 samples, 0.01%)</title><rect x="58.2040%" y="581" width="0.0104%" height="15" fill="rgb(230,9,30)" fg:x="413001" fg:w="74"/><text x="58.4540%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_syntax::hir::literal::Literal&gt;&gt; (121 samples, 0.02%)</title><rect x="58.2039%" y="597" width="0.0171%" height="15" fill="rgb(230,136,20)" fg:x="413000" fg:w="121"/><text x="58.4539%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;regex_syntax::hir::literal::Literal&gt;&gt; (90 samples, 0.01%)</title><rect x="58.2209%" y="597" width="0.0127%" height="15" fill="rgb(215,210,22)" fg:x="413121" fg:w="90"/><text x="58.4709%" y="607.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (89 samples, 0.01%)</title><rect x="58.2210%" y="581" width="0.0125%" height="15" fill="rgb(218,43,5)" fg:x="413122" fg:w="89"/><text x="58.4710%" y="591.50"></text></g><g><title>regex_syntax::hir::literal::Literals::is_empty (128 samples, 0.02%)</title><rect x="58.2459%" y="597" width="0.0180%" height="15" fill="rgb(216,11,5)" fg:x="413298" fg:w="128"/><text x="58.4959%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (125 samples, 0.02%)</title><rect x="58.2814%" y="549" width="0.0176%" height="15" fill="rgb(209,82,29)" fg:x="413550" fg:w="125"/><text x="58.5314%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (131 samples, 0.02%)</title><rect x="58.2811%" y="565" width="0.0185%" height="15" fill="rgb(244,115,12)" fg:x="413548" fg:w="131"/><text x="58.5311%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (138 samples, 0.02%)</title><rect x="58.2805%" y="581" width="0.0194%" height="15" fill="rgb(222,82,18)" fg:x="413544" fg:w="138"/><text x="58.5305%" y="591.50"></text></g><g><title>regex_syntax::hir::literal::Literals::cross_product (1,817 samples, 0.26%)</title><rect x="58.0563%" y="613" width="0.2561%" height="15" fill="rgb(249,227,8)" fg:x="411953" fg:w="1817"/><text x="58.3063%" y="623.50"></text></g><g><title>regex_syntax::hir::literal::Literals::remove_complete (273 samples, 0.04%)</title><rect x="58.2739%" y="597" width="0.0385%" height="15" fill="rgb(253,141,45)" fg:x="413497" fg:w="273"/><text x="58.5239%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;regex_syntax::hir::literal::Literal&gt;&gt; (78 samples, 0.01%)</title><rect x="58.3014%" y="581" width="0.0110%" height="15" fill="rgb(234,184,4)" fg:x="413692" fg:w="78"/><text x="58.5514%" y="591.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (78 samples, 0.01%)</title><rect x="58.3014%" y="565" width="0.0110%" height="15" fill="rgb(218,194,23)" fg:x="413692" fg:w="78"/><text x="58.5514%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (90 samples, 0.01%)</title><rect x="58.3272%" y="581" width="0.0127%" height="15" fill="rgb(235,66,41)" fg:x="413875" fg:w="90"/><text x="58.5772%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (88 samples, 0.01%)</title><rect x="58.3274%" y="565" width="0.0124%" height="15" fill="rgb(245,217,1)" fg:x="413877" fg:w="88"/><text x="58.5774%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (88 samples, 0.01%)</title><rect x="58.3274%" y="549" width="0.0124%" height="15" fill="rgb(229,91,1)" fg:x="413877" fg:w="88"/><text x="58.5774%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (86 samples, 0.01%)</title><rect x="58.3277%" y="533" width="0.0121%" height="15" fill="rgb(207,101,30)" fg:x="413879" fg:w="86"/><text x="58.5777%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (85 samples, 0.01%)</title><rect x="58.3279%" y="517" width="0.0120%" height="15" fill="rgb(223,82,49)" fg:x="413880" fg:w="85"/><text x="58.5779%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (142 samples, 0.02%)</title><rect x="58.3420%" y="549" width="0.0200%" height="15" fill="rgb(218,167,17)" fg:x="413980" fg:w="142"/><text x="58.5920%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (147 samples, 0.02%)</title><rect x="58.3418%" y="565" width="0.0207%" height="15" fill="rgb(208,103,14)" fg:x="413979" fg:w="147"/><text x="58.5918%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (163 samples, 0.02%)</title><rect x="58.3400%" y="581" width="0.0230%" height="15" fill="rgb(238,20,8)" fg:x="413966" fg:w="163"/><text x="58.5900%" y="591.50"></text></g><g><title>regex_syntax::hir::literal::Literals::prefixes (2,536 samples, 0.36%)</title><rect x="58.0112%" y="661" width="0.3574%" height="15" fill="rgb(218,80,54)" fg:x="411633" fg:w="2536"/><text x="58.2612%" y="671.50"></text></g><g><title>regex_syntax::hir::literal::Literals::union_prefixes (2,534 samples, 0.36%)</title><rect x="58.0115%" y="645" width="0.3571%" height="15" fill="rgb(240,144,17)" fg:x="411635" fg:w="2534"/><text x="58.2615%" y="655.50"></text></g><g><title>regex_syntax::hir::literal::prefixes (2,432 samples, 0.34%)</title><rect x="58.0259%" y="629" width="0.3427%" height="15" fill="rgb(245,27,50)" fg:x="411737" fg:w="2432"/><text x="58.2759%" y="639.50"></text></g><g><title>regex_syntax::hir::literal::prefixes (393 samples, 0.06%)</title><rect x="58.3132%" y="613" width="0.0554%" height="15" fill="rgb(251,51,7)" fg:x="413776" fg:w="393"/><text x="58.5632%" y="623.50"></text></g><g><title>regex_syntax::hir::literal::Literals::cross_add (351 samples, 0.05%)</title><rect x="58.3191%" y="597" width="0.0495%" height="15" fill="rgb(245,217,29)" fg:x="413818" fg:w="351"/><text x="58.5691%" y="607.50"></text></g><g><title>regex_syntax::hir::literal::Literals::union (82 samples, 0.01%)</title><rect x="58.3778%" y="629" width="0.0116%" height="15" fill="rgb(221,176,29)" fg:x="414234" fg:w="82"/><text x="58.6278%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::literal::Literals&gt; (89 samples, 0.01%)</title><rect x="58.3928%" y="613" width="0.0125%" height="15" fill="rgb(212,180,24)" fg:x="414341" fg:w="89"/><text x="58.6428%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_syntax::hir::literal::Literal&gt;&gt; (89 samples, 0.01%)</title><rect x="58.3928%" y="597" width="0.0125%" height="15" fill="rgb(254,24,2)" fg:x="414341" fg:w="89"/><text x="58.6428%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (82 samples, 0.01%)</title><rect x="58.4393%" y="453" width="0.0116%" height="15" fill="rgb(230,100,2)" fg:x="414671" fg:w="82"/><text x="58.6893%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (78 samples, 0.01%)</title><rect x="58.4399%" y="437" width="0.0110%" height="15" fill="rgb(219,142,25)" fg:x="414675" fg:w="78"/><text x="58.6899%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (77 samples, 0.01%)</title><rect x="58.4401%" y="421" width="0.0109%" height="15" fill="rgb(240,73,43)" fg:x="414676" fg:w="77"/><text x="58.6901%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (112 samples, 0.02%)</title><rect x="58.4362%" y="501" width="0.0158%" height="15" fill="rgb(214,114,15)" fg:x="414649" fg:w="112"/><text x="58.6862%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (112 samples, 0.02%)</title><rect x="58.4362%" y="485" width="0.0158%" height="15" fill="rgb(207,130,4)" fg:x="414649" fg:w="112"/><text x="58.6862%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (110 samples, 0.02%)</title><rect x="58.4365%" y="469" width="0.0155%" height="15" fill="rgb(221,25,40)" fg:x="414651" fg:w="110"/><text x="58.6865%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (136 samples, 0.02%)</title><rect x="58.4336%" y="517" width="0.0192%" height="15" fill="rgb(241,184,7)" fg:x="414630" fg:w="136"/><text x="58.6836%" y="527.50"></text></g><g><title>&lt;regex_syntax::hir::literal::Literal as core::clone::Clone&gt;::clone (140 samples, 0.02%)</title><rect x="58.4331%" y="533" width="0.0197%" height="15" fill="rgb(235,159,4)" fg:x="414627" fg:w="140"/><text x="58.6831%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (81 samples, 0.01%)</title><rect x="58.4557%" y="533" width="0.0114%" height="15" fill="rgb(214,87,48)" fg:x="414787" fg:w="81"/><text x="58.7057%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (76 samples, 0.01%)</title><rect x="58.4564%" y="517" width="0.0107%" height="15" fill="rgb(246,198,24)" fg:x="414792" fg:w="76"/><text x="58.7064%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (76 samples, 0.01%)</title><rect x="58.4564%" y="501" width="0.0107%" height="15" fill="rgb(209,66,40)" fg:x="414792" fg:w="76"/><text x="58.7064%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (338 samples, 0.05%)</title><rect x="58.4240%" y="581" width="0.0476%" height="15" fill="rgb(233,147,39)" fg:x="414562" fg:w="338"/><text x="58.6740%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (335 samples, 0.05%)</title><rect x="58.4244%" y="565" width="0.0472%" height="15" fill="rgb(231,145,52)" fg:x="414565" fg:w="335"/><text x="58.6744%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (334 samples, 0.05%)</title><rect x="58.4245%" y="549" width="0.0471%" height="15" fill="rgb(206,20,26)" fg:x="414566" fg:w="334"/><text x="58.6745%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (361 samples, 0.05%)</title><rect x="58.4209%" y="597" width="0.0509%" height="15" fill="rgb(238,220,4)" fg:x="414540" fg:w="361"/><text x="58.6709%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 samples, 0.02%)</title><rect x="58.4892%" y="485" width="0.0155%" height="15" fill="rgb(252,195,42)" fg:x="415025" fg:w="110"/><text x="58.7392%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (208 samples, 0.03%)</title><rect x="58.4826%" y="501" width="0.0293%" height="15" fill="rgb(209,10,6)" fg:x="414978" fg:w="208"/><text x="58.7326%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (227 samples, 0.03%)</title><rect x="58.4804%" y="549" width="0.0320%" height="15" fill="rgb(229,3,52)" fg:x="414962" fg:w="227"/><text x="58.7304%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (224 samples, 0.03%)</title><rect x="58.4808%" y="533" width="0.0316%" height="15" fill="rgb(253,49,37)" fg:x="414965" fg:w="224"/><text x="58.7308%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (212 samples, 0.03%)</title><rect x="58.4825%" y="517" width="0.0299%" height="15" fill="rgb(240,103,49)" fg:x="414977" fg:w="212"/><text x="58.7325%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (248 samples, 0.03%)</title><rect x="58.4778%" y="565" width="0.0350%" height="15" fill="rgb(250,182,30)" fg:x="414944" fg:w="248"/><text x="58.7278%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (311 samples, 0.04%)</title><rect x="58.4718%" y="597" width="0.0438%" height="15" fill="rgb(248,8,30)" fg:x="414901" fg:w="311"/><text x="58.7218%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (273 samples, 0.04%)</title><rect x="58.4771%" y="581" width="0.0385%" height="15" fill="rgb(237,120,30)" fg:x="414939" fg:w="273"/><text x="58.7271%" y="591.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (98 samples, 0.01%)</title><rect x="58.5231%" y="597" width="0.0138%" height="15" fill="rgb(221,146,34)" fg:x="415265" fg:w="98"/><text x="58.7731%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (143 samples, 0.02%)</title><rect x="58.5417%" y="565" width="0.0202%" height="15" fill="rgb(242,55,13)" fg:x="415397" fg:w="143"/><text x="58.7917%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (147 samples, 0.02%)</title><rect x="58.5414%" y="581" width="0.0207%" height="15" fill="rgb(242,112,31)" fg:x="415395" fg:w="147"/><text x="58.7914%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (173 samples, 0.02%)</title><rect x="58.5394%" y="597" width="0.0244%" height="15" fill="rgb(249,192,27)" fg:x="415381" fg:w="173"/><text x="58.7894%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_syntax::hir::literal::Literal&gt;&gt; (95 samples, 0.01%)</title><rect x="58.5714%" y="597" width="0.0134%" height="15" fill="rgb(208,204,44)" fg:x="415608" fg:w="95"/><text x="58.8214%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;regex_syntax::hir::literal::Literal&gt;&gt; (88 samples, 0.01%)</title><rect x="58.5848%" y="597" width="0.0124%" height="15" fill="rgb(208,93,54)" fg:x="415703" fg:w="88"/><text x="58.8348%" y="607.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (88 samples, 0.01%)</title><rect x="58.5848%" y="581" width="0.0124%" height="15" fill="rgb(242,1,31)" fg:x="415703" fg:w="88"/><text x="58.8348%" y="591.50"></text></g><g><title>regex_syntax::hir::literal::Literals::is_empty (126 samples, 0.02%)</title><rect x="58.6094%" y="597" width="0.0178%" height="15" fill="rgb(241,83,25)" fg:x="415878" fg:w="126"/><text x="58.8594%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (118 samples, 0.02%)</title><rect x="58.6399%" y="549" width="0.0166%" height="15" fill="rgb(205,169,50)" fg:x="416094" fg:w="118"/><text x="58.8899%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (128 samples, 0.02%)</title><rect x="58.6399%" y="565" width="0.0180%" height="15" fill="rgb(239,186,37)" fg:x="416094" fg:w="128"/><text x="58.8899%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (142 samples, 0.02%)</title><rect x="58.6392%" y="581" width="0.0200%" height="15" fill="rgb(205,221,10)" fg:x="416089" fg:w="142"/><text x="58.8892%" y="591.50"></text></g><g><title>regex_syntax::hir::literal::Literals::cross_product (1,835 samples, 0.26%)</title><rect x="58.4144%" y="613" width="0.2586%" height="15" fill="rgb(218,196,15)" fg:x="414494" fg:w="1835"/><text x="58.6644%" y="623.50"></text></g><g><title>regex_syntax::hir::literal::Literals::remove_complete (283 samples, 0.04%)</title><rect x="58.6331%" y="597" width="0.0399%" height="15" fill="rgb(218,196,35)" fg:x="416046" fg:w="283"/><text x="58.8831%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;regex_syntax::hir::literal::Literal&gt;&gt; (84 samples, 0.01%)</title><rect x="58.6612%" y="581" width="0.0118%" height="15" fill="rgb(233,63,24)" fg:x="416245" fg:w="84"/><text x="58.9112%" y="591.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (84 samples, 0.01%)</title><rect x="58.6612%" y="565" width="0.0118%" height="15" fill="rgb(225,8,4)" fg:x="416245" fg:w="84"/><text x="58.9112%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::reverse (75 samples, 0.01%)</title><rect x="58.6819%" y="597" width="0.0106%" height="15" fill="rgb(234,105,35)" fg:x="416392" fg:w="75"/><text x="58.9319%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (94 samples, 0.01%)</title><rect x="58.7032%" y="501" width="0.0132%" height="15" fill="rgb(236,21,32)" fg:x="416543" fg:w="94"/><text x="58.9532%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (92 samples, 0.01%)</title><rect x="58.7034%" y="485" width="0.0130%" height="15" fill="rgb(228,109,6)" fg:x="416545" fg:w="92"/><text x="58.9534%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (92 samples, 0.01%)</title><rect x="58.7034%" y="469" width="0.0130%" height="15" fill="rgb(229,215,31)" fg:x="416545" fg:w="92"/><text x="58.9534%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (122 samples, 0.02%)</title><rect x="58.7002%" y="581" width="0.0172%" height="15" fill="rgb(221,52,54)" fg:x="416522" fg:w="122"/><text x="58.9502%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (121 samples, 0.02%)</title><rect x="58.7003%" y="565" width="0.0171%" height="15" fill="rgb(252,129,43)" fg:x="416523" fg:w="121"/><text x="58.9503%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (120 samples, 0.02%)</title><rect x="58.7005%" y="549" width="0.0169%" height="15" fill="rgb(248,183,27)" fg:x="416524" fg:w="120"/><text x="58.9505%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (120 samples, 0.02%)</title><rect x="58.7005%" y="533" width="0.0169%" height="15" fill="rgb(250,0,22)" fg:x="416524" fg:w="120"/><text x="58.9505%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (120 samples, 0.02%)</title><rect x="58.7005%" y="517" width="0.0169%" height="15" fill="rgb(213,166,10)" fg:x="416524" fg:w="120"/><text x="58.9505%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (151 samples, 0.02%)</title><rect x="58.7192%" y="549" width="0.0213%" height="15" fill="rgb(207,163,36)" fg:x="416657" fg:w="151"/><text x="58.9692%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (159 samples, 0.02%)</title><rect x="58.7191%" y="565" width="0.0224%" height="15" fill="rgb(208,122,22)" fg:x="416656" fg:w="159"/><text x="58.9691%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (173 samples, 0.02%)</title><rect x="58.7177%" y="581" width="0.0244%" height="15" fill="rgb(207,104,49)" fg:x="416646" fg:w="173"/><text x="58.9677%" y="591.50"></text></g><g><title>grep_regex::literal::LiteralSets::new (7,722 samples, 1.09%)</title><rect x="57.6568%" y="677" width="1.0883%" height="15" fill="rgb(248,211,50)" fg:x="409118" fg:w="7722"/><text x="57.9068%" y="687.50"></text></g><g><title>regex_syntax::hir::literal::Literals::suffixes (2,671 samples, 0.38%)</title><rect x="58.3686%" y="661" width="0.3764%" height="15" fill="rgb(217,13,45)" fg:x="414169" fg:w="2671"/><text x="58.6186%" y="671.50"></text></g><g><title>regex_syntax::hir::literal::Literals::union_suffixes (2,670 samples, 0.38%)</title><rect x="58.3687%" y="645" width="0.3763%" height="15" fill="rgb(211,216,49)" fg:x="414170" fg:w="2670"/><text x="58.6187%" y="655.50"></text></g><g><title>regex_syntax::hir::literal::suffixes (2,524 samples, 0.36%)</title><rect x="58.3893%" y="629" width="0.3557%" height="15" fill="rgb(221,58,53)" fg:x="414316" fg:w="2524"/><text x="58.6393%" y="639.50"></text></g><g><title>regex_syntax::hir::literal::suffixes (501 samples, 0.07%)</title><rect x="58.6744%" y="613" width="0.0706%" height="15" fill="rgb(220,112,41)" fg:x="416339" fg:w="501"/><text x="58.9244%" y="623.50"></text></g><g><title>regex_syntax::hir::literal::Literals::cross_add (370 samples, 0.05%)</title><rect x="58.6929%" y="597" width="0.0521%" height="15" fill="rgb(236,38,28)" fg:x="416470" fg:w="370"/><text x="58.9429%" y="607.50"></text></g><g><title>grep_regex::config::ConfiguredHIR::fast_line_regex (7,813 samples, 1.10%)</title><rect x="57.6475%" y="693" width="1.1011%" height="15" fill="rgb(227,195,22)" fg:x="409052" fg:w="7813"/><text x="57.8975%" y="703.50"></text></g><g><title>grep_regex::config::ConfiguredHIR::non_matching_bytes (112 samples, 0.02%)</title><rect x="58.7485%" y="693" width="0.0158%" height="15" fill="rgb(214,55,33)" fg:x="416865" fg:w="112"/><text x="58.9985%" y="703.50"></text></g><g><title>grep_regex::non_matching::non_matching_bytes (111 samples, 0.02%)</title><rect x="58.7487%" y="677" width="0.0156%" height="15" fill="rgb(248,80,13)" fg:x="416866" fg:w="111"/><text x="58.9987%" y="687.50"></text></g><g><title>grep_regex::non_matching::remove_matching_bytes (111 samples, 0.02%)</title><rect x="58.7487%" y="661" width="0.0156%" height="15" fill="rgb(238,52,6)" fg:x="416866" fg:w="111"/><text x="58.9987%" y="671.50"></text></g><g><title>grep_regex::non_matching::remove_matching_bytes (82 samples, 0.01%)</title><rect x="58.7528%" y="645" width="0.0116%" height="15" fill="rgb(224,198,47)" fg:x="416895" fg:w="82"/><text x="59.0028%" y="655.50"></text></g><g><title>&lt;regex_syntax::hir::print::Writer&lt;W&gt; as regex_syntax::hir::visitor::Visitor&gt;::visit_pre (78 samples, 0.01%)</title><rect x="58.7724%" y="565" width="0.0110%" height="15" fill="rgb(233,171,20)" fg:x="417034" fg:w="78"/><text x="59.0224%" y="575.50"></text></g><g><title>regex_syntax::hir::print::Writer&lt;W&gt;::write_literal_char (72 samples, 0.01%)</title><rect x="58.7732%" y="549" width="0.0101%" height="15" fill="rgb(241,30,25)" fg:x="417040" fg:w="72"/><text x="59.0232%" y="559.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (254 samples, 0.04%)</title><rect x="58.7657%" y="645" width="0.0358%" height="15" fill="rgb(207,171,38)" fg:x="416987" fg:w="254"/><text x="59.0157%" y="655.50"></text></g><g><title>&lt;regex_syntax::hir::Hir as core::fmt::Display&gt;::fmt (254 samples, 0.04%)</title><rect x="58.7657%" y="629" width="0.0358%" height="15" fill="rgb(234,70,1)" fg:x="416987" fg:w="254"/><text x="59.0157%" y="639.50"></text></g><g><title>regex_syntax::hir::print::Printer::print (254 samples, 0.04%)</title><rect x="58.7657%" y="613" width="0.0358%" height="15" fill="rgb(232,178,18)" fg:x="416987" fg:w="254"/><text x="59.0157%" y="623.50"></text></g><g><title>regex_syntax::hir::visitor::visit (254 samples, 0.04%)</title><rect x="58.7657%" y="597" width="0.0358%" height="15" fill="rgb(241,78,40)" fg:x="416987" fg:w="254"/><text x="59.0157%" y="607.50"></text></g><g><title>regex_syntax::hir::visitor::HeapVisitor::visit (241 samples, 0.03%)</title><rect x="58.7676%" y="581" width="0.0340%" height="15" fill="rgb(222,35,25)" fg:x="417000" fg:w="241"/><text x="59.0176%" y="591.50"></text></g><g><title>&lt;memchr::memmem::Searcher as core::clone::Clone&gt;::clone (74 samples, 0.01%)</title><rect x="58.8225%" y="549" width="0.0104%" height="15" fill="rgb(207,92,16)" fg:x="417390" fg:w="74"/><text x="59.0725%" y="559.50"></text></g><g><title>&lt;memchr::memmem::Finder as core::clone::Clone&gt;::clone (77 samples, 0.01%)</title><rect x="58.8223%" y="565" width="0.0109%" height="15" fill="rgb(216,59,51)" fg:x="417388" fg:w="77"/><text x="59.0723%" y="575.50"></text></g><g><title>&lt;regex::literal::imp::Memmem as core::clone::Clone&gt;::clone (78 samples, 0.01%)</title><rect x="58.8223%" y="581" width="0.0110%" height="15" fill="rgb(213,80,28)" fg:x="417388" fg:w="78"/><text x="59.0723%" y="591.50"></text></g><g><title>&lt;regex::literal::imp::LiteralSearcher as core::clone::Clone&gt;::clone (124 samples, 0.02%)</title><rect x="58.8161%" y="597" width="0.0175%" height="15" fill="rgb(220,93,7)" fg:x="417344" fg:w="124"/><text x="59.0661%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (97 samples, 0.01%)</title><rect x="58.8435%" y="517" width="0.0137%" height="15" fill="rgb(225,24,44)" fg:x="417539" fg:w="97"/><text x="59.0935%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (95 samples, 0.01%)</title><rect x="58.8438%" y="501" width="0.0134%" height="15" fill="rgb(243,74,40)" fg:x="417541" fg:w="95"/><text x="59.0938%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regex_syntax::hir::Hir]&gt; (188 samples, 0.03%)</title><rect x="58.8423%" y="565" width="0.0265%" height="15" fill="rgb(228,39,7)" fg:x="417530" fg:w="188"/><text x="59.0923%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::Hir&gt; (188 samples, 0.03%)</title><rect x="58.8423%" y="549" width="0.0265%" height="15" fill="rgb(227,79,8)" fg:x="417530" fg:w="188"/><text x="59.0923%" y="559.50"></text></g><g><title>&lt;regex_syntax::hir::Hir as core::ops::drop::Drop&gt;::drop (188 samples, 0.03%)</title><rect x="58.8423%" y="533" width="0.0265%" height="15" fill="rgb(236,58,11)" fg:x="417530" fg:w="188"/><text x="59.0923%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (190 samples, 0.03%)</title><rect x="58.8423%" y="581" width="0.0268%" height="15" fill="rgb(249,63,35)" fg:x="417530" fg:w="190"/><text x="59.0923%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_syntax::hir::Hir&gt;&gt; (198 samples, 0.03%)</title><rect x="58.8423%" y="597" width="0.0279%" height="15" fill="rgb(252,114,16)" fg:x="417530" fg:w="198"/><text x="59.0923%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (117 samples, 0.02%)</title><rect x="58.9350%" y="437" width="0.0165%" height="15" fill="rgb(254,151,24)" fg:x="418188" fg:w="117"/><text x="59.1850%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (125 samples, 0.02%)</title><rect x="58.9347%" y="453" width="0.0176%" height="15" fill="rgb(253,54,39)" fg:x="418186" fg:w="125"/><text x="59.1847%" y="463.50"></text></g><g><title>regex::compile::Compiler::push_hole (207 samples, 0.03%)</title><rect x="58.9282%" y="485" width="0.0292%" height="15" fill="rgb(243,25,45)" fg:x="418140" fg:w="207"/><text x="59.1782%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (183 samples, 0.03%)</title><rect x="58.9316%" y="469" width="0.0258%" height="15" fill="rgb(234,134,9)" fg:x="418164" fg:w="183"/><text x="59.1816%" y="479.50"></text></g><g><title>regex::compile::Compiler::c_char (278 samples, 0.04%)</title><rect x="58.9195%" y="501" width="0.0392%" height="15" fill="rgb(227,166,31)" fg:x="418078" fg:w="278"/><text x="59.1695%" y="511.50"></text></g><g><title>regex::compile::Compiler::c (316 samples, 0.04%)</title><rect x="58.9161%" y="517" width="0.0445%" height="15" fill="rgb(245,143,41)" fg:x="418054" fg:w="316"/><text x="59.1661%" y="527.50"></text></g><g><title>regex::compile::Compiler::c_concat (549 samples, 0.08%)</title><rect x="58.8972%" y="533" width="0.0774%" height="15" fill="rgb(238,181,32)" fg:x="417920" fg:w="549"/><text x="59.1472%" y="543.50"></text></g><g><title>regex::compile::Compiler::fill (99 samples, 0.01%)</title><rect x="58.9606%" y="517" width="0.0140%" height="15" fill="rgb(224,113,18)" fg:x="418370" fg:w="99"/><text x="59.2106%" y="527.50"></text></g><g><title>regex::compile::Compiler::c (562 samples, 0.08%)</title><rect x="58.8958%" y="549" width="0.0792%" height="15" fill="rgb(240,229,28)" fg:x="417910" fg:w="562"/><text x="59.1458%" y="559.50"></text></g><g><title>regex::compile::Compiler::c_capture (622 samples, 0.09%)</title><rect x="58.8944%" y="565" width="0.0877%" height="15" fill="rgb(250,185,3)" fg:x="417900" fg:w="622"/><text x="59.1444%" y="575.50"></text></g><g><title>regex::compile::Compiler::c_repeat (99 samples, 0.01%)</title><rect x="58.9878%" y="533" width="0.0140%" height="15" fill="rgb(212,59,25)" fg:x="418563" fg:w="99"/><text x="59.2378%" y="543.50"></text></g><g><title>regex::compile::Compiler::c_repeat_zero_or_more (99 samples, 0.01%)</title><rect x="58.9878%" y="517" width="0.0140%" height="15" fill="rgb(221,87,20)" fg:x="418563" fg:w="99"/><text x="59.2378%" y="527.50"></text></g><g><title>regex::compile::Compiler::c (102 samples, 0.01%)</title><rect x="58.9876%" y="549" width="0.0144%" height="15" fill="rgb(213,74,28)" fg:x="418561" fg:w="102"/><text x="59.2376%" y="559.50"></text></g><g><title>regex::compile::Compiler::c_dotstar (202 samples, 0.03%)</title><rect x="58.9821%" y="565" width="0.0285%" height="15" fill="rgb(224,132,34)" fg:x="418522" fg:w="202"/><text x="59.2321%" y="575.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (73 samples, 0.01%)</title><rect x="59.0263%" y="421" width="0.0103%" height="15" fill="rgb(222,101,24)" fg:x="418836" fg:w="73"/><text x="59.2763%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (79 samples, 0.01%)</title><rect x="59.0366%" y="421" width="0.0111%" height="15" fill="rgb(254,142,4)" fg:x="418909" fg:w="79"/><text x="59.2866%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (230 samples, 0.03%)</title><rect x="59.0205%" y="485" width="0.0324%" height="15" fill="rgb(230,229,49)" fg:x="418795" fg:w="230"/><text x="59.2705%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (217 samples, 0.03%)</title><rect x="59.0224%" y="469" width="0.0306%" height="15" fill="rgb(238,70,47)" fg:x="418808" fg:w="217"/><text x="59.2724%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (215 samples, 0.03%)</title><rect x="59.0227%" y="453" width="0.0303%" height="15" fill="rgb(231,160,17)" fg:x="418810" fg:w="215"/><text x="59.2727%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (213 samples, 0.03%)</title><rect x="59.0229%" y="437" width="0.0300%" height="15" fill="rgb(218,68,53)" fg:x="418812" fg:w="213"/><text x="59.2729%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (287 samples, 0.04%)</title><rect x="59.0196%" y="549" width="0.0404%" height="15" fill="rgb(236,111,10)" fg:x="418788" fg:w="287"/><text x="59.2696%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (287 samples, 0.04%)</title><rect x="59.0196%" y="533" width="0.0404%" height="15" fill="rgb(224,34,41)" fg:x="418788" fg:w="287"/><text x="59.2696%" y="543.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (284 samples, 0.04%)</title><rect x="59.0200%" y="517" width="0.0400%" height="15" fill="rgb(241,118,19)" fg:x="418791" fg:w="284"/><text x="59.2700%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (283 samples, 0.04%)</title><rect x="59.0201%" y="501" width="0.0399%" height="15" fill="rgb(238,129,25)" fg:x="418792" fg:w="283"/><text x="59.2701%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (216 samples, 0.03%)</title><rect x="59.3010%" y="485" width="0.0304%" height="15" fill="rgb(238,22,31)" fg:x="420785" fg:w="216"/><text x="59.5510%" y="495.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (81 samples, 0.01%)</title><rect x="59.3200%" y="469" width="0.0114%" height="15" fill="rgb(222,174,48)" fg:x="420920" fg:w="81"/><text x="59.5700%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (887 samples, 0.13%)</title><rect x="59.2708%" y="501" width="0.1250%" height="15" fill="rgb(206,152,40)" fg:x="420571" fg:w="887"/><text x="59.5208%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (457 samples, 0.06%)</title><rect x="59.3314%" y="485" width="0.0644%" height="15" fill="rgb(218,99,54)" fg:x="421001" fg:w="457"/><text x="59.5814%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (225 samples, 0.03%)</title><rect x="59.3641%" y="469" width="0.0317%" height="15" fill="rgb(220,174,26)" fg:x="421233" fg:w="225"/><text x="59.6141%" y="479.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (428 samples, 0.06%)</title><rect x="59.4343%" y="485" width="0.0603%" height="15" fill="rgb(245,116,9)" fg:x="421731" fg:w="428"/><text x="59.6843%" y="495.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (191 samples, 0.03%)</title><rect x="59.4677%" y="469" width="0.0269%" height="15" fill="rgb(209,72,35)" fg:x="421968" fg:w="191"/><text x="59.7177%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,905 samples, 0.27%)</title><rect x="59.2366%" y="517" width="0.2685%" height="15" fill="rgb(226,126,21)" fg:x="420328" fg:w="1905"/><text x="59.4866%" y="527.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (775 samples, 0.11%)</title><rect x="59.3958%" y="501" width="0.1092%" height="15" fill="rgb(227,192,1)" fg:x="421458" fg:w="775"/><text x="59.6458%" y="511.50"></text></g><g><title>core::slice::raw::debug_check_data_len (74 samples, 0.01%)</title><rect x="59.4946%" y="485" width="0.0104%" height="15" fill="rgb(237,180,29)" fg:x="422159" fg:w="74"/><text x="59.7446%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (2,818 samples, 0.40%)</title><rect x="59.1828%" y="533" width="0.3971%" height="15" fill="rgb(230,197,35)" fg:x="419946" fg:w="2818"/><text x="59.4328%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (531 samples, 0.07%)</title><rect x="59.5051%" y="517" width="0.0748%" height="15" fill="rgb(246,193,31)" fg:x="422233" fg:w="531"/><text x="59.7551%" y="527.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (305 samples, 0.04%)</title><rect x="59.5369%" y="501" width="0.0430%" height="15" fill="rgb(241,36,4)" fg:x="422459" fg:w="305"/><text x="59.7869%" y="511.50"></text></g><g><title>regex::compile::Compiler::compile_finish (4,107 samples, 0.58%)</title><rect x="59.0105%" y="565" width="0.5788%" height="15" fill="rgb(241,130,17)" fg:x="418724" fg:w="4107"/><text x="59.2605%" y="575.50"></text></g><g><title>regex::compile::ByteClassSet::byte_classes (3,622 samples, 0.51%)</title><rect x="59.0789%" y="549" width="0.5104%" height="15" fill="rgb(206,137,32)" fg:x="419209" fg:w="3622"/><text x="59.3289%" y="559.50"></text></g><g><title>regex::compile::Compiler::push_compiled (72 samples, 0.01%)</title><rect x="59.5936%" y="565" width="0.0101%" height="15" fill="rgb(237,228,51)" fg:x="422861" fg:w="72"/><text x="59.8436%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (71 samples, 0.01%)</title><rect x="59.5937%" y="549" width="0.0100%" height="15" fill="rgb(243,6,42)" fg:x="422862" fg:w="71"/><text x="59.8437%" y="559.50"></text></g><g><title>regex::compile::Compiler::compile (5,187 samples, 0.73%)</title><rect x="58.8733%" y="597" width="0.7310%" height="15" fill="rgb(251,74,28)" fg:x="417750" fg:w="5187"/><text x="59.1233%" y="607.50"></text></g><g><title>regex::compile::Compiler::compile_one (5,175 samples, 0.73%)</title><rect x="58.8750%" y="581" width="0.7293%" height="15" fill="rgb(218,20,49)" fg:x="417762" fg:w="5175"/><text x="59.1250%" y="591.50"></text></g><g><title>regex::compile::SuffixCache::new (152 samples, 0.02%)</title><rect x="59.6077%" y="581" width="0.0214%" height="15" fill="rgb(238,28,14)" fg:x="422961" fg:w="152"/><text x="59.8577%" y="591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (96 samples, 0.01%)</title><rect x="59.6477%" y="485" width="0.0135%" height="15" fill="rgb(229,40,46)" fg:x="423245" fg:w="96"/><text x="59.8977%" y="495.50"></text></g><g><title>memchr::memmem::Finder::into_owned (113 samples, 0.02%)</title><rect x="59.6456%" y="517" width="0.0159%" height="15" fill="rgb(244,195,20)" fg:x="423230" fg:w="113"/><text x="59.8956%" y="527.50"></text></g><g><title>memchr::memmem::Searcher::into_owned (108 samples, 0.02%)</title><rect x="59.6463%" y="501" width="0.0152%" height="15" fill="rgb(253,56,35)" fg:x="423235" fg:w="108"/><text x="59.8963%" y="511.50"></text></g><g><title>regex::literal::imp::Memmem::new (222 samples, 0.03%)</title><rect x="59.6449%" y="533" width="0.0313%" height="15" fill="rgb(210,149,44)" fg:x="423225" fg:w="222"/><text x="59.8949%" y="543.50"></text></g><g><title>regex::literal::imp::LiteralSearcher::new (253 samples, 0.04%)</title><rect x="59.6416%" y="549" width="0.0357%" height="15" fill="rgb(240,135,12)" fg:x="423202" fg:w="253"/><text x="59.8916%" y="559.50"></text></g><g><title>regex::literal::imp::LiteralSearcher::empty (259 samples, 0.04%)</title><rect x="59.6415%" y="565" width="0.0365%" height="15" fill="rgb(251,24,50)" fg:x="423201" fg:w="259"/><text x="59.8915%" y="575.50"></text></g><g><title>regex::prog::Program::new (378 samples, 0.05%)</title><rect x="59.6291%" y="581" width="0.0533%" height="15" fill="rgb(243,200,47)" fg:x="423113" fg:w="378"/><text x="59.8791%" y="591.50"></text></g><g><title>regex_syntax::utf8::Utf8Sequences::new (78 samples, 0.01%)</title><rect x="59.6823%" y="581" width="0.0110%" height="15" fill="rgb(224,166,26)" fg:x="423491" fg:w="78"/><text x="59.9323%" y="591.50"></text></g><g><title>regex_syntax::utf8::Utf8Sequences::push (76 samples, 0.01%)</title><rect x="59.6826%" y="565" width="0.0107%" height="15" fill="rgb(233,0,47)" fg:x="423493" fg:w="76"/><text x="59.9326%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (76 samples, 0.01%)</title><rect x="59.6826%" y="549" width="0.0107%" height="15" fill="rgb(253,80,5)" fg:x="423493" fg:w="76"/><text x="59.9326%" y="559.50"></text></g><g><title>regex::compile::Compiler::new (654 samples, 0.09%)</title><rect x="59.6053%" y="597" width="0.0922%" height="15" fill="rgb(214,133,25)" fg:x="422944" fg:w="654"/><text x="59.8553%" y="607.50"></text></g><g><title>regex_syntax::hir::literal::Literals::union (80 samples, 0.01%)</title><rect x="59.7125%" y="533" width="0.0113%" height="15" fill="rgb(209,27,14)" fg:x="423705" fg:w="80"/><text x="59.9625%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regex_syntax::hir::literal::Literal]&gt; (79 samples, 0.01%)</title><rect x="59.7311%" y="469" width="0.0111%" height="15" fill="rgb(219,102,51)" fg:x="423837" fg:w="79"/><text x="59.9811%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::literal::Literal&gt; (75 samples, 0.01%)</title><rect x="59.7317%" y="453" width="0.0106%" height="15" fill="rgb(237,18,16)" fg:x="423841" fg:w="75"/><text x="59.9817%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (74 samples, 0.01%)</title><rect x="59.7318%" y="437" width="0.0104%" height="15" fill="rgb(241,85,17)" fg:x="423842" fg:w="74"/><text x="59.9818%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (93 samples, 0.01%)</title><rect x="59.7294%" y="485" width="0.0131%" height="15" fill="rgb(236,90,42)" fg:x="423825" fg:w="93"/><text x="59.9794%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::literal::Literals&gt; (143 samples, 0.02%)</title><rect x="59.7284%" y="517" width="0.0202%" height="15" fill="rgb(249,57,21)" fg:x="423818" fg:w="143"/><text x="59.9784%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_syntax::hir::literal::Literal&gt;&gt; (140 samples, 0.02%)</title><rect x="59.7289%" y="501" width="0.0197%" height="15" fill="rgb(243,12,36)" fg:x="423821" fg:w="140"/><text x="59.9789%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (88 samples, 0.01%)</title><rect x="59.7779%" y="357" width="0.0124%" height="15" fill="rgb(253,128,47)" fg:x="424169" fg:w="88"/><text x="60.0279%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (84 samples, 0.01%)</title><rect x="59.7785%" y="341" width="0.0118%" height="15" fill="rgb(207,33,20)" fg:x="424173" fg:w="84"/><text x="60.0285%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (82 samples, 0.01%)</title><rect x="59.7787%" y="325" width="0.0116%" height="15" fill="rgb(233,215,35)" fg:x="424175" fg:w="82"/><text x="60.0287%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (116 samples, 0.02%)</title><rect x="59.7756%" y="405" width="0.0163%" height="15" fill="rgb(249,188,52)" fg:x="424153" fg:w="116"/><text x="60.0256%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (115 samples, 0.02%)</title><rect x="59.7758%" y="389" width="0.0162%" height="15" fill="rgb(225,12,32)" fg:x="424154" fg:w="115"/><text x="60.0258%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (112 samples, 0.02%)</title><rect x="59.7762%" y="373" width="0.0158%" height="15" fill="rgb(247,98,14)" fg:x="424157" fg:w="112"/><text x="60.0262%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (135 samples, 0.02%)</title><rect x="59.7734%" y="421" width="0.0190%" height="15" fill="rgb(247,219,48)" fg:x="424137" fg:w="135"/><text x="60.0234%" y="431.50"></text></g><g><title>&lt;regex_syntax::hir::literal::Literal as core::clone::Clone&gt;::clone (139 samples, 0.02%)</title><rect x="59.7730%" y="437" width="0.0196%" height="15" fill="rgb(253,60,48)" fg:x="424134" fg:w="139"/><text x="60.0230%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (72 samples, 0.01%)</title><rect x="59.7945%" y="437" width="0.0101%" height="15" fill="rgb(245,15,52)" fg:x="424287" fg:w="72"/><text x="60.0445%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (71 samples, 0.01%)</title><rect x="59.7947%" y="421" width="0.0100%" height="15" fill="rgb(220,133,28)" fg:x="424288" fg:w="71"/><text x="60.0447%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (304 samples, 0.04%)</title><rect x="59.7654%" y="485" width="0.0428%" height="15" fill="rgb(217,180,4)" fg:x="424080" fg:w="304"/><text x="60.0154%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (304 samples, 0.04%)</title><rect x="59.7654%" y="469" width="0.0428%" height="15" fill="rgb(251,24,1)" fg:x="424080" fg:w="304"/><text x="60.0154%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (302 samples, 0.04%)</title><rect x="59.7656%" y="453" width="0.0426%" height="15" fill="rgb(212,185,49)" fg:x="424082" fg:w="302"/><text x="60.0156%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (320 samples, 0.05%)</title><rect x="59.7634%" y="501" width="0.0451%" height="15" fill="rgb(215,175,22)" fg:x="424066" fg:w="320"/><text x="60.0134%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (99 samples, 0.01%)</title><rect x="59.8245%" y="389" width="0.0140%" height="15" fill="rgb(250,205,14)" fg:x="424500" fg:w="99"/><text x="60.0745%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (195 samples, 0.03%)</title><rect x="59.8175%" y="405" width="0.0275%" height="15" fill="rgb(225,211,22)" fg:x="424450" fg:w="195"/><text x="60.0675%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (224 samples, 0.03%)</title><rect x="59.8145%" y="453" width="0.0316%" height="15" fill="rgb(251,179,42)" fg:x="424429" fg:w="224"/><text x="60.0645%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (222 samples, 0.03%)</title><rect x="59.8148%" y="437" width="0.0313%" height="15" fill="rgb(208,216,51)" fg:x="424431" fg:w="222"/><text x="60.0648%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (204 samples, 0.03%)</title><rect x="59.8174%" y="421" width="0.0287%" height="15" fill="rgb(235,36,11)" fg:x="424449" fg:w="204"/><text x="60.0674%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (239 samples, 0.03%)</title><rect x="59.8128%" y="469" width="0.0337%" height="15" fill="rgb(213,189,28)" fg:x="424417" fg:w="239"/><text x="60.0628%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (283 samples, 0.04%)</title><rect x="59.8085%" y="501" width="0.0399%" height="15" fill="rgb(227,203,42)" fg:x="424386" fg:w="283"/><text x="60.0585%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (253 samples, 0.04%)</title><rect x="59.8127%" y="485" width="0.0357%" height="15" fill="rgb(244,72,36)" fg:x="424416" fg:w="253"/><text x="60.0627%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (80 samples, 0.01%)</title><rect x="59.8541%" y="501" width="0.0113%" height="15" fill="rgb(213,53,17)" fg:x="424710" fg:w="80"/><text x="60.1041%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (76 samples, 0.01%)</title><rect x="59.8727%" y="453" width="0.0107%" height="15" fill="rgb(207,167,3)" fg:x="424842" fg:w="76"/><text x="60.1227%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (155 samples, 0.02%)</title><rect x="59.8689%" y="469" width="0.0218%" height="15" fill="rgb(216,98,30)" fg:x="424815" fg:w="155"/><text x="60.1189%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (165 samples, 0.02%)</title><rect x="59.8688%" y="485" width="0.0233%" height="15" fill="rgb(236,123,15)" fg:x="424814" fg:w="165"/><text x="60.1188%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (178 samples, 0.03%)</title><rect x="59.8685%" y="501" width="0.0251%" height="15" fill="rgb(248,81,50)" fg:x="424812" fg:w="178"/><text x="60.1185%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_syntax::hir::literal::Literal&gt;&gt; (111 samples, 0.02%)</title><rect x="59.8987%" y="501" width="0.0156%" height="15" fill="rgb(214,120,4)" fg:x="425026" fg:w="111"/><text x="60.1487%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;regex_syntax::hir::literal::Literal,alloc::alloc::Global&gt;&gt; (76 samples, 0.01%)</title><rect x="59.9176%" y="469" width="0.0107%" height="15" fill="rgb(208,179,34)" fg:x="425160" fg:w="76"/><text x="60.1676%" y="479.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (76 samples, 0.01%)</title><rect x="59.9176%" y="453" width="0.0107%" height="15" fill="rgb(227,140,7)" fg:x="425160" fg:w="76"/><text x="60.1676%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;regex_syntax::hir::literal::Literal&gt;&gt; (100 samples, 0.01%)</title><rect x="59.9143%" y="501" width="0.0141%" height="15" fill="rgb(214,22,6)" fg:x="425137" fg:w="100"/><text x="60.1643%" y="511.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (100 samples, 0.01%)</title><rect x="59.9143%" y="485" width="0.0141%" height="15" fill="rgb(207,137,27)" fg:x="425137" fg:w="100"/><text x="60.1643%" y="495.50"></text></g><g><title>regex_syntax::hir::literal::Literals::is_empty (114 samples, 0.02%)</title><rect x="59.9439%" y="501" width="0.0161%" height="15" fill="rgb(210,8,46)" fg:x="425347" fg:w="114"/><text x="60.1939%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (130 samples, 0.02%)</title><rect x="59.9732%" y="453" width="0.0183%" height="15" fill="rgb(240,16,54)" fg:x="425555" fg:w="130"/><text x="60.2232%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (133 samples, 0.02%)</title><rect x="59.9732%" y="469" width="0.0187%" height="15" fill="rgb(211,209,29)" fg:x="425555" fg:w="133"/><text x="60.2232%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (150 samples, 0.02%)</title><rect x="59.9718%" y="485" width="0.0211%" height="15" fill="rgb(226,228,24)" fg:x="425545" fg:w="150"/><text x="60.2218%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;regex_syntax::hir::literal::Literal&gt;&gt; (75 samples, 0.01%)</title><rect x="59.9958%" y="485" width="0.0106%" height="15" fill="rgb(222,84,9)" fg:x="425715" fg:w="75"/><text x="60.2458%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (75 samples, 0.01%)</title><rect x="59.9958%" y="469" width="0.0106%" height="15" fill="rgb(234,203,30)" fg:x="425715" fg:w="75"/><text x="60.2458%" y="479.50"></text></g><g><title>regex_syntax::hir::literal::Literals::cross_product (1,768 samples, 0.25%)</title><rect x="59.7573%" y="517" width="0.2492%" height="15" fill="rgb(238,109,14)" fg:x="424023" fg:w="1768"/><text x="60.0073%" y="527.50"></text></g><g><title>regex_syntax::hir::literal::Literals::remove_complete (284 samples, 0.04%)</title><rect x="59.9665%" y="501" width="0.0400%" height="15" fill="rgb(233,206,34)" fg:x="425507" fg:w="284"/><text x="60.2165%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (98 samples, 0.01%)</title><rect x="60.0245%" y="405" width="0.0138%" height="15" fill="rgb(220,167,47)" fg:x="425919" fg:w="98"/><text x="60.2745%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (96 samples, 0.01%)</title><rect x="60.0248%" y="389" width="0.0135%" height="15" fill="rgb(238,105,10)" fg:x="425921" fg:w="96"/><text x="60.2748%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (92 samples, 0.01%)</title><rect x="60.0254%" y="373" width="0.0130%" height="15" fill="rgb(213,227,17)" fg:x="425925" fg:w="92"/><text x="60.2754%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (125 samples, 0.02%)</title><rect x="60.0214%" y="485" width="0.0176%" height="15" fill="rgb(217,132,38)" fg:x="425897" fg:w="125"/><text x="60.2714%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (123 samples, 0.02%)</title><rect x="60.0217%" y="469" width="0.0173%" height="15" fill="rgb(242,146,4)" fg:x="425899" fg:w="123"/><text x="60.2717%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (119 samples, 0.02%)</title><rect x="60.0223%" y="453" width="0.0168%" height="15" fill="rgb(212,61,9)" fg:x="425903" fg:w="119"/><text x="60.2723%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (119 samples, 0.02%)</title><rect x="60.0223%" y="437" width="0.0168%" height="15" fill="rgb(247,126,22)" fg:x="425903" fg:w="119"/><text x="60.2723%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (119 samples, 0.02%)</title><rect x="60.0223%" y="421" width="0.0168%" height="15" fill="rgb(220,196,2)" fg:x="425903" fg:w="119"/><text x="60.2723%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (144 samples, 0.02%)</title><rect x="60.0403%" y="453" width="0.0203%" height="15" fill="rgb(208,46,4)" fg:x="426031" fg:w="144"/><text x="60.2903%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (153 samples, 0.02%)</title><rect x="60.0397%" y="469" width="0.0216%" height="15" fill="rgb(252,104,46)" fg:x="426027" fg:w="153"/><text x="60.2897%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (166 samples, 0.02%)</title><rect x="60.0390%" y="485" width="0.0234%" height="15" fill="rgb(237,152,48)" fg:x="426022" fg:w="166"/><text x="60.2890%" y="495.50"></text></g><g><title>regex_syntax::hir::literal::Literals::union_prefixes (2,534 samples, 0.36%)</title><rect x="59.7090%" y="549" width="0.3571%" height="15" fill="rgb(221,59,37)" fg:x="423680" fg:w="2534"/><text x="59.9590%" y="559.50"></text></g><g><title>regex_syntax::hir::literal::prefixes (2,429 samples, 0.34%)</title><rect x="59.7238%" y="533" width="0.3423%" height="15" fill="rgb(209,202,51)" fg:x="423785" fg:w="2429"/><text x="59.9738%" y="543.50"></text></g><g><title>regex_syntax::hir::literal::prefixes (420 samples, 0.06%)</title><rect x="60.0069%" y="517" width="0.0592%" height="15" fill="rgb(228,81,30)" fg:x="425794" fg:w="420"/><text x="60.2569%" y="527.50"></text></g><g><title>regex_syntax::hir::literal::Literals::cross_add (379 samples, 0.05%)</title><rect x="60.0127%" y="501" width="0.0534%" height="15" fill="rgb(227,42,39)" fg:x="425835" fg:w="379"/><text x="60.2627%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (81 samples, 0.01%)</title><rect x="60.0893%" y="485" width="0.0114%" height="15" fill="rgb(221,26,2)" fg:x="426379" fg:w="81"/><text x="60.3393%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::hir::literal::Literals&gt; (115 samples, 0.02%)</title><rect x="60.0889%" y="517" width="0.0162%" height="15" fill="rgb(254,61,31)" fg:x="426376" fg:w="115"/><text x="60.3389%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_syntax::hir::literal::Literal&gt;&gt; (114 samples, 0.02%)</title><rect x="60.0891%" y="501" width="0.0161%" height="15" fill="rgb(222,173,38)" fg:x="426377" fg:w="114"/><text x="60.3391%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (96 samples, 0.01%)</title><rect x="60.1430%" y="357" width="0.0135%" height="15" fill="rgb(218,50,12)" fg:x="426760" fg:w="96"/><text x="60.3930%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (93 samples, 0.01%)</title><rect x="60.1435%" y="341" width="0.0131%" height="15" fill="rgb(223,88,40)" fg:x="426763" fg:w="93"/><text x="60.3935%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (93 samples, 0.01%)</title><rect x="60.1435%" y="325" width="0.0131%" height="15" fill="rgb(237,54,19)" fg:x="426763" fg:w="93"/><text x="60.3935%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (133 samples, 0.02%)</title><rect x="60.1391%" y="405" width="0.0187%" height="15" fill="rgb(251,129,25)" fg:x="426732" fg:w="133"/><text x="60.3891%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (132 samples, 0.02%)</title><rect x="60.1392%" y="389" width="0.0186%" height="15" fill="rgb(238,97,19)" fg:x="426733" fg:w="132"/><text x="60.3892%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (128 samples, 0.02%)</title><rect x="60.1398%" y="373" width="0.0180%" height="15" fill="rgb(240,169,18)" fg:x="426737" fg:w="128"/><text x="60.3898%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (161 samples, 0.02%)</title><rect x="60.1356%" y="421" width="0.0227%" height="15" fill="rgb(230,187,49)" fg:x="426707" fg:w="161"/><text x="60.3856%" y="431.50"></text></g><g><title>&lt;regex_syntax::hir::literal::Literal as core::clone::Clone&gt;::clone (166 samples, 0.02%)</title><rect x="60.1350%" y="437" width="0.0234%" height="15" fill="rgb(209,44,26)" fg:x="426703" fg:w="166"/><text x="60.3850%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (75 samples, 0.01%)</title><rect x="60.1607%" y="437" width="0.0106%" height="15" fill="rgb(244,0,6)" fg:x="426885" fg:w="75"/><text x="60.4107%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (73 samples, 0.01%)</title><rect x="60.1609%" y="421" width="0.0103%" height="15" fill="rgb(248,18,21)" fg:x="426887" fg:w="73"/><text x="60.4109%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (342 samples, 0.05%)</title><rect x="60.1258%" y="485" width="0.0482%" height="15" fill="rgb(245,180,19)" fg:x="426638" fg:w="342"/><text x="60.3758%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (341 samples, 0.05%)</title><rect x="60.1260%" y="469" width="0.0481%" height="15" fill="rgb(252,118,36)" fg:x="426639" fg:w="341"/><text x="60.3760%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (339 samples, 0.05%)</title><rect x="60.1263%" y="453" width="0.0478%" height="15" fill="rgb(210,224,19)" fg:x="426641" fg:w="339"/><text x="60.3763%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (363 samples, 0.05%)</title><rect x="60.1233%" y="501" width="0.0512%" height="15" fill="rgb(218,30,24)" fg:x="426620" fg:w="363"/><text x="60.3733%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (82 samples, 0.01%)</title><rect x="60.1870%" y="389" width="0.0116%" height="15" fill="rgb(219,75,50)" fg:x="427072" fg:w="82"/><text x="60.4370%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (171 samples, 0.02%)</title><rect x="60.1817%" y="405" width="0.0241%" height="15" fill="rgb(234,72,50)" fg:x="427034" fg:w="171"/><text x="60.4317%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (186 samples, 0.03%)</title><rect x="60.1802%" y="453" width="0.0262%" height="15" fill="rgb(219,100,48)" fg:x="427024" fg:w="186"/><text x="60.4302%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (186 samples, 0.03%)</title><rect x="60.1802%" y="437" width="0.0262%" height="15" fill="rgb(253,5,41)" fg:x="427024" fg:w="186"/><text x="60.4302%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (180 samples, 0.03%)</title><rect x="60.1811%" y="421" width="0.0254%" height="15" fill="rgb(247,181,11)" fg:x="427030" fg:w="180"/><text x="60.4311%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (199 samples, 0.03%)</title><rect x="60.1790%" y="469" width="0.0280%" height="15" fill="rgb(222,223,25)" fg:x="427015" fg:w="199"/><text x="60.4290%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (241 samples, 0.03%)</title><rect x="60.1745%" y="501" width="0.0340%" height="15" fill="rgb(214,198,28)" fg:x="426983" fg:w="241"/><text x="60.4245%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (210 samples, 0.03%)</title><rect x="60.1788%" y="485" width="0.0296%" height="15" fill="rgb(230,46,43)" fg:x="427014" fg:w="210"/><text x="60.4288%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (82 samples, 0.01%)</title><rect x="60.2136%" y="501" width="0.0116%" height="15" fill="rgb(233,65,53)" fg:x="427261" fg:w="82"/><text x="60.4636%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (150 samples, 0.02%)</title><rect x="60.2283%" y="469" width="0.0211%" height="15" fill="rgb(221,121,27)" fg:x="427365" fg:w="150"/><text x="60.4783%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (156 samples, 0.02%)</title><rect x="60.2279%" y="485" width="0.0220%" height="15" fill="rgb(247,70,47)" fg:x="427362" fg:w="156"/><text x="60.4779%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (164 samples, 0.02%)</title><rect x="60.2272%" y="501" width="0.0231%" height="15" fill="rgb(228,85,35)" fg:x="427357" fg:w="164"/><text x="60.4772%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (74 samples, 0.01%)</title><rect x="60.2566%" y="485" width="0.0104%" height="15" fill="rgb(209,50,18)" fg:x="427566" fg:w="74"/><text x="60.5066%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_syntax::hir::literal::Literal&gt;&gt; (113 samples, 0.02%)</title><rect x="60.2559%" y="501" width="0.0159%" height="15" fill="rgb(250,19,35)" fg:x="427561" fg:w="113"/><text x="60.5059%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;regex_syntax::hir::literal::Literal&gt;&gt; (82 samples, 0.01%)</title><rect x="60.2719%" y="501" width="0.0116%" height="15" fill="rgb(253,107,29)" fg:x="427674" fg:w="82"/><text x="60.5219%" y="511.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (81 samples, 0.01%)</title><rect x="60.2720%" y="485" width="0.0114%" height="15" fill="rgb(252,179,29)" fg:x="427675" fg:w="81"/><text x="60.5220%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (72 samples, 0.01%)</title><rect x="60.2999%" y="485" width="0.0101%" height="15" fill="rgb(238,194,6)" fg:x="427873" fg:w="72"/><text x="60.5499%" y="495.50"></text></g><g><title>regex_syntax::hir::literal::Literals::is_empty (128 samples, 0.02%)</title><rect x="60.2948%" y="501" width="0.0180%" height="15" fill="rgb(238,164,29)" fg:x="427837" fg:w="128"/><text x="60.5448%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (108 samples, 0.02%)</title><rect x="60.3302%" y="453" width="0.0152%" height="15" fill="rgb(224,25,9)" fg:x="428088" fg:w="108"/><text x="60.5802%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (117 samples, 0.02%)</title><rect x="60.3301%" y="469" width="0.0165%" height="15" fill="rgb(244,153,23)" fg:x="428087" fg:w="117"/><text x="60.5801%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (131 samples, 0.02%)</title><rect x="60.3289%" y="485" width="0.0185%" height="15" fill="rgb(212,203,14)" fg:x="428079" fg:w="131"/><text x="60.5789%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;regex_syntax::hir::literal::Literal&gt;&gt; (74 samples, 0.01%)</title><rect x="60.3485%" y="485" width="0.0104%" height="15" fill="rgb(220,164,20)" fg:x="428218" fg:w="74"/><text x="60.5985%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (73 samples, 0.01%)</title><rect x="60.3487%" y="469" width="0.0103%" height="15" fill="rgb(222,203,48)" fg:x="428219" fg:w="73"/><text x="60.5987%" y="479.50"></text></g><g><title>regex_syntax::hir::literal::Literals::cross_product (1,737 samples, 0.24%)</title><rect x="60.1144%" y="517" width="0.2448%" height="15" fill="rgb(215,159,22)" fg:x="426557" fg:w="1737"/><text x="60.3644%" y="527.50"></text></g><g><title>regex_syntax::hir::literal::Literals::remove_complete (269 samples, 0.04%)</title><rect x="60.3213%" y="501" width="0.0379%" height="15" fill="rgb(216,183,47)" fg:x="428025" fg:w="269"/><text x="60.5713%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::reverse (72 samples, 0.01%)</title><rect x="60.3687%" y="501" width="0.0101%" height="15" fill="rgb(229,195,25)" fg:x="428361" fg:w="72"/><text x="60.6187%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (90 samples, 0.01%)</title><rect x="60.3890%" y="405" width="0.0127%" height="15" fill="rgb(224,132,51)" fg:x="428505" fg:w="90"/><text x="60.6390%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (90 samples, 0.01%)</title><rect x="60.3890%" y="389" width="0.0127%" height="15" fill="rgb(240,63,7)" fg:x="428505" fg:w="90"/><text x="60.6390%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (89 samples, 0.01%)</title><rect x="60.3891%" y="373" width="0.0125%" height="15" fill="rgb(249,182,41)" fg:x="428506" fg:w="89"/><text x="60.6391%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (126 samples, 0.02%)</title><rect x="60.3859%" y="485" width="0.0178%" height="15" fill="rgb(243,47,26)" fg:x="428483" fg:w="126"/><text x="60.6359%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (123 samples, 0.02%)</title><rect x="60.3863%" y="469" width="0.0173%" height="15" fill="rgb(233,48,2)" fg:x="428486" fg:w="123"/><text x="60.6363%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (123 samples, 0.02%)</title><rect x="60.3863%" y="453" width="0.0173%" height="15" fill="rgb(244,165,34)" fg:x="428486" fg:w="123"/><text x="60.6363%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (123 samples, 0.02%)</title><rect x="60.3863%" y="437" width="0.0173%" height="15" fill="rgb(207,89,7)" fg:x="428486" fg:w="123"/><text x="60.6363%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (122 samples, 0.02%)</title><rect x="60.3864%" y="421" width="0.0172%" height="15" fill="rgb(244,117,36)" fg:x="428487" fg:w="122"/><text x="60.6364%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (73 samples, 0.01%)</title><rect x="60.4111%" y="437" width="0.0103%" height="15" fill="rgb(226,144,34)" fg:x="428662" fg:w="73"/><text x="60.6611%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (162 samples, 0.02%)</title><rect x="60.4063%" y="453" width="0.0228%" height="15" fill="rgb(213,23,19)" fg:x="428628" fg:w="162"/><text x="60.6563%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (173 samples, 0.02%)</title><rect x="60.4057%" y="469" width="0.0244%" height="15" fill="rgb(217,75,12)" fg:x="428624" fg:w="173"/><text x="60.6557%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (188 samples, 0.03%)</title><rect x="60.4040%" y="485" width="0.0265%" height="15" fill="rgb(224,159,17)" fg:x="428612" fg:w="188"/><text x="60.6540%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (5,158 samples, 0.73%)</title><rect x="59.7080%" y="581" width="0.7269%" height="15" fill="rgb(217,118,1)" fg:x="423673" fg:w="5158"/><text x="59.9580%" y="591.50"></text></g><g><title>regex::exec::ExecBuilder::parse::{{closure}} (5,154 samples, 0.73%)</title><rect x="59.7086%" y="565" width="0.7264%" height="15" fill="rgb(232,180,48)" fg:x="423677" fg:w="5154"/><text x="59.9586%" y="575.50"></text></g><g><title>regex_syntax::hir::literal::Literals::union_suffixes (2,617 samples, 0.37%)</title><rect x="60.0661%" y="549" width="0.3688%" height="15" fill="rgb(230,27,33)" fg:x="426214" fg:w="2617"/><text x="60.3161%" y="559.50"></text></g><g><title>regex_syntax::hir::literal::suffixes (2,504 samples, 0.35%)</title><rect x="60.0820%" y="533" width="0.3529%" height="15" fill="rgb(205,31,21)" fg:x="426327" fg:w="2504"/><text x="60.3320%" y="543.50"></text></g><g><title>regex_syntax::hir::literal::suffixes (526 samples, 0.07%)</title><rect x="60.3608%" y="517" width="0.0741%" height="15" fill="rgb(253,59,4)" fg:x="428305" fg:w="526"/><text x="60.6108%" y="527.50"></text></g><g><title>regex_syntax::hir::literal::Literals::cross_add (396 samples, 0.06%)</title><rect x="60.3791%" y="501" width="0.0558%" height="15" fill="rgb(224,201,9)" fg:x="428435" fg:w="396"/><text x="60.6291%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (80 samples, 0.01%)</title><rect x="60.4476%" y="485" width="0.0113%" height="15" fill="rgb(229,206,30)" fg:x="428921" fg:w="80"/><text x="60.6976%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (119 samples, 0.02%)</title><rect x="60.4422%" y="533" width="0.0168%" height="15" fill="rgb(212,67,47)" fg:x="428883" fg:w="119"/><text x="60.6922%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (119 samples, 0.02%)</title><rect x="60.4422%" y="517" width="0.0168%" height="15" fill="rgb(211,96,50)" fg:x="428883" fg:w="119"/><text x="60.6922%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (81 samples, 0.01%)</title><rect x="60.4476%" y="501" width="0.0114%" height="15" fill="rgb(252,114,18)" fg:x="428921" fg:w="81"/><text x="60.6976%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::Ast&gt; (216 samples, 0.03%)</title><rect x="60.4415%" y="565" width="0.0304%" height="15" fill="rgb(223,58,37)" fg:x="428878" fg:w="216"/><text x="60.6915%" y="575.50"></text></g><g><title>&lt;regex_syntax::ast::Ast as core::ops::drop::Drop&gt;::drop (216 samples, 0.03%)</title><rect x="60.4415%" y="549" width="0.0304%" height="15" fill="rgb(237,70,4)" fg:x="428878" fg:w="216"/><text x="60.6915%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (88 samples, 0.01%)</title><rect x="60.4782%" y="517" width="0.0124%" height="15" fill="rgb(244,85,46)" fg:x="429138" fg:w="88"/><text x="60.7282%" y="527.50"></text></g><g><title>regex_syntax::ast::parse::NestLimiter&lt;P&gt;::check (162 samples, 0.02%)</title><rect x="60.4921%" y="517" width="0.0228%" height="15" fill="rgb(223,39,52)" fg:x="429237" fg:w="162"/><text x="60.7421%" y="527.50"></text></g><g><title>regex_syntax::ast::visitor::visit (162 samples, 0.02%)</title><rect x="60.4921%" y="501" width="0.0228%" height="15" fill="rgb(218,200,14)" fg:x="429237" fg:w="162"/><text x="60.7421%" y="511.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::visit (146 samples, 0.02%)</title><rect x="60.4944%" y="485" width="0.0206%" height="15" fill="rgb(208,171,16)" fg:x="429253" fg:w="146"/><text x="60.7444%" y="495.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char_at (77 samples, 0.01%)</title><rect x="60.5209%" y="501" width="0.0109%" height="15" fill="rgb(234,200,18)" fg:x="429441" fg:w="77"/><text x="60.7709%" y="511.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char (83 samples, 0.01%)</title><rect x="60.5205%" y="517" width="0.0117%" height="15" fill="rgb(228,45,11)" fg:x="429438" fg:w="83"/><text x="60.7705%" y="527.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (78 samples, 0.01%)</title><rect x="60.5537%" y="453" width="0.0110%" height="15" fill="rgb(237,182,11)" fg:x="429674" fg:w="78"/><text x="60.8037%" y="463.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (77 samples, 0.01%)</title><rect x="60.5710%" y="453" width="0.0109%" height="15" fill="rgb(241,175,49)" fg:x="429797" fg:w="77"/><text x="60.8210%" y="463.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (72 samples, 0.01%)</title><rect x="60.5718%" y="437" width="0.0101%" height="15" fill="rgb(247,38,35)" fg:x="429802" fg:w="72"/><text x="60.8218%" y="447.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char_at (212 samples, 0.03%)</title><rect x="60.5527%" y="469" width="0.0299%" height="15" fill="rgb(228,39,49)" fg:x="429667" fg:w="212"/><text x="60.8027%" y="479.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char (226 samples, 0.03%)</title><rect x="60.5517%" y="485" width="0.0319%" height="15" fill="rgb(226,101,26)" fg:x="429660" fg:w="226"/><text x="60.8017%" y="495.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::bump (366 samples, 0.05%)</title><rect x="60.5355%" y="501" width="0.0516%" height="15" fill="rgb(206,141,19)" fg:x="429545" fg:w="366"/><text x="60.7855%" y="511.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char_at (80 samples, 0.01%)</title><rect x="60.5874%" y="485" width="0.0113%" height="15" fill="rgb(211,200,13)" fg:x="429913" fg:w="80"/><text x="60.8374%" y="495.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char (87 samples, 0.01%)</title><rect x="60.5871%" y="501" width="0.0123%" height="15" fill="rgb(241,121,6)" fg:x="429911" fg:w="87"/><text x="60.8371%" y="511.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (79 samples, 0.01%)</title><rect x="60.6188%" y="453" width="0.0111%" height="15" fill="rgb(234,221,29)" fg:x="430136" fg:w="79"/><text x="60.8688%" y="463.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (79 samples, 0.01%)</title><rect x="60.6188%" y="437" width="0.0111%" height="15" fill="rgb(229,136,5)" fg:x="430136" fg:w="79"/><text x="60.8688%" y="447.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char_at (192 samples, 0.03%)</title><rect x="60.6033%" y="469" width="0.0271%" height="15" fill="rgb(238,36,11)" fg:x="430026" fg:w="192"/><text x="60.8533%" y="479.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char (208 samples, 0.03%)</title><rect x="60.6032%" y="485" width="0.0293%" height="15" fill="rgb(251,55,41)" fg:x="430025" fg:w="208"/><text x="60.8532%" y="495.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_primitive (719 samples, 0.10%)</title><rect x="60.5337%" y="517" width="0.1013%" height="15" fill="rgb(242,34,40)" fg:x="429532" fg:w="719"/><text x="60.7837%" y="527.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::span_char (253 samples, 0.04%)</title><rect x="60.5994%" y="501" width="0.0357%" height="15" fill="rgb(215,42,17)" fg:x="429998" fg:w="253"/><text x="60.8494%" y="511.50"></text></g><g><title>regex_syntax::ast::parse::Parser::parse (1,183 samples, 0.17%)</title><rect x="60.4720%" y="565" width="0.1667%" height="15" fill="rgb(207,44,46)" fg:x="429094" fg:w="1183"/><text x="60.7220%" y="575.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse (1,183 samples, 0.17%)</title><rect x="60.4720%" y="549" width="0.1667%" height="15" fill="rgb(211,206,28)" fg:x="429094" fg:w="1183"/><text x="60.7220%" y="559.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_with_comments (1,173 samples, 0.17%)</title><rect x="60.4734%" y="533" width="0.1653%" height="15" fill="rgb(237,167,16)" fg:x="429104" fg:w="1173"/><text x="60.7234%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (79 samples, 0.01%)</title><rect x="60.6548%" y="501" width="0.0111%" height="15" fill="rgb(233,66,6)" fg:x="430391" fg:w="79"/><text x="60.9048%" y="511.50"></text></g><g><title>regex_syntax::hir::Hir::concat (155 samples, 0.02%)</title><rect x="60.6712%" y="501" width="0.0218%" height="15" fill="rgb(246,123,29)" fg:x="430508" fg:w="155"/><text x="60.9212%" y="511.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::hir_literal (108 samples, 0.02%)</title><rect x="60.6934%" y="501" width="0.0152%" height="15" fill="rgb(209,62,40)" fg:x="430665" fg:w="108"/><text x="60.9434%" y="511.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::pop (85 samples, 0.01%)</title><rect x="60.7086%" y="501" width="0.0120%" height="15" fill="rgb(218,4,25)" fg:x="430773" fg:w="85"/><text x="60.9586%" y="511.50"></text></g><g><title>&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_post (610 samples, 0.09%)</title><rect x="60.6490%" y="517" width="0.0860%" height="15" fill="rgb(253,91,49)" fg:x="430350" fg:w="610"/><text x="60.8990%" y="527.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::push (102 samples, 0.01%)</title><rect x="60.7206%" y="501" width="0.0144%" height="15" fill="rgb(228,155,29)" fg:x="430858" fg:w="102"/><text x="60.9706%" y="511.50"></text></g><g><title>regex_syntax::parser::Parser::parse (2,270 samples, 0.32%)</title><rect x="60.4400%" y="581" width="0.3199%" height="15" fill="rgb(243,57,37)" fg:x="428867" fg:w="2270"/><text x="60.6900%" y="591.50"></text></g><g><title>regex_syntax::hir::translate::Translator::translate (860 samples, 0.12%)</title><rect x="60.6387%" y="565" width="0.1212%" height="15" fill="rgb(244,167,17)" fg:x="430277" fg:w="860"/><text x="60.8887%" y="575.50"></text></g><g><title>regex_syntax::ast::visitor::visit (860 samples, 0.12%)</title><rect x="60.6387%" y="549" width="0.1212%" height="15" fill="rgb(207,181,38)" fg:x="430277" fg:w="860"/><text x="60.8887%" y="559.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::visit (850 samples, 0.12%)</title><rect x="60.6401%" y="533" width="0.1198%" height="15" fill="rgb(211,8,23)" fg:x="430287" fg:w="850"/><text x="60.8901%" y="543.50"></text></g><g><title>regex::exec::ExecBuilder::parse (7,523 samples, 1.06%)</title><rect x="59.7021%" y="597" width="1.0602%" height="15" fill="rgb(235,11,44)" fg:x="423631" fg:w="7523"/><text x="59.9521%" y="607.50"></text></g><g><title>&lt;alloc::vec::ExtendElement&lt;T&gt; as alloc::vec::ExtendWith&lt;T&gt;&gt;::next (150 samples, 0.02%)</title><rect x="60.8346%" y="453" width="0.0211%" height="15" fill="rgb(248,18,52)" fg:x="431667" fg:w="150"/><text x="61.0846%" y="463.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (83 samples, 0.01%)</title><rect x="60.8560%" y="453" width="0.0117%" height="15" fill="rgb(208,4,7)" fg:x="431819" fg:w="83"/><text x="61.1060%" y="463.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (101 samples, 0.01%)</title><rect x="60.9338%" y="421" width="0.0142%" height="15" fill="rgb(240,17,39)" fg:x="432371" fg:w="101"/><text x="61.1838%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (113 samples, 0.02%)</title><rect x="60.9563%" y="421" width="0.0159%" height="15" fill="rgb(207,170,3)" fg:x="432531" fg:w="113"/><text x="61.2063%" y="431.50"></text></g><g><title>core::ptr::read (168 samples, 0.02%)</title><rect x="61.0091%" y="405" width="0.0237%" height="15" fill="rgb(236,100,52)" fg:x="432905" fg:w="168"/><text x="61.2591%" y="415.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1,259 samples, 0.18%)</title><rect x="60.8678%" y="453" width="0.1774%" height="15" fill="rgb(246,78,51)" fg:x="431903" fg:w="1259"/><text x="61.1178%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1,141 samples, 0.16%)</title><rect x="60.8845%" y="437" width="0.1608%" height="15" fill="rgb(211,17,15)" fg:x="432021" fg:w="1141"/><text x="61.1345%" y="447.50"></text></g><g><title>core::mem::replace (518 samples, 0.07%)</title><rect x="60.9723%" y="421" width="0.0730%" height="15" fill="rgb(209,59,46)" fg:x="432644" fg:w="518"/><text x="61.2223%" y="431.50"></text></g><g><title>core::ptr::write (89 samples, 0.01%)</title><rect x="61.0327%" y="405" width="0.0125%" height="15" fill="rgb(210,92,25)" fg:x="433073" fg:w="89"/><text x="61.2827%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (2,045 samples, 0.29%)</title><rect x="60.7693%" y="469" width="0.2882%" height="15" fill="rgb(238,174,52)" fg:x="431204" fg:w="2045"/><text x="61.0193%" y="479.50"></text></g><g><title>core::ptr::write (86 samples, 0.01%)</title><rect x="61.0454%" y="453" width="0.0121%" height="15" fill="rgb(230,73,7)" fg:x="433163" fg:w="86"/><text x="61.2954%" y="463.50"></text></g><g><title>alloc::vec::from_elem (2,078 samples, 0.29%)</title><rect x="60.7688%" y="501" width="0.2929%" height="15" fill="rgb(243,124,40)" fg:x="431200" fg:w="2078"/><text x="61.0188%" y="511.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (2,078 samples, 0.29%)</title><rect x="60.7688%" y="485" width="0.2929%" height="15" fill="rgb(244,170,11)" fg:x="431200" fg:w="2078"/><text x="61.0188%" y="495.50"></text></g><g><title>regex::dfa::Cache::new (2,279 samples, 0.32%)</title><rect x="60.7671%" y="517" width="0.3212%" height="15" fill="rgb(207,114,54)" fg:x="431188" fg:w="2279"/><text x="61.0171%" y="527.50"></text></g><g><title>regex::sparse::SparseSet::new (170 samples, 0.02%)</title><rect x="61.0643%" y="501" width="0.0240%" height="15" fill="rgb(205,42,20)" fg:x="433297" fg:w="170"/><text x="61.3143%" y="511.50"></text></g><g><title>alloc::vec::from_elem (78 samples, 0.01%)</title><rect x="61.0773%" y="485" width="0.0110%" height="15" fill="rgb(230,30,28)" fg:x="433389" fg:w="78"/><text x="61.3273%" y="495.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (77 samples, 0.01%)</title><rect x="61.0774%" y="469" width="0.0109%" height="15" fill="rgb(205,73,54)" fg:x="433390" fg:w="77"/><text x="61.3274%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (74 samples, 0.01%)</title><rect x="61.0778%" y="453" width="0.0104%" height="15" fill="rgb(254,227,23)" fg:x="433393" fg:w="74"/><text x="61.3278%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (71 samples, 0.01%)</title><rect x="61.0783%" y="437" width="0.0100%" height="15" fill="rgb(228,202,34)" fg:x="433396" fg:w="71"/><text x="61.3283%" y="447.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (2,353 samples, 0.33%)</title><rect x="60.7654%" y="565" width="0.3316%" height="15" fill="rgb(222,225,37)" fg:x="431176" fg:w="2353"/><text x="61.0154%" y="575.50"></text></g><g><title>regex::exec::ExecReadOnly::new_pool::{{closure}} (2,353 samples, 0.33%)</title><rect x="60.7654%" y="549" width="0.3316%" height="15" fill="rgb(221,14,54)" fg:x="431176" fg:w="2353"/><text x="61.0154%" y="559.50"></text></g><g><title>regex::exec::ProgramCacheInner::new (2,344 samples, 0.33%)</title><rect x="60.7667%" y="533" width="0.3303%" height="15" fill="rgb(254,102,2)" fg:x="431185" fg:w="2344"/><text x="61.0167%" y="543.50"></text></g><g><title>regex::exec::ExecReadOnly::new_pool (2,377 samples, 0.33%)</title><rect x="60.7626%" y="597" width="0.3350%" height="15" fill="rgb(232,104,17)" fg:x="431156" fg:w="2377"/><text x="61.0126%" y="607.50"></text></g><g><title>regex::pool::Pool&lt;T&gt;::new (2,357 samples, 0.33%)</title><rect x="60.7654%" y="581" width="0.3322%" height="15" fill="rgb(250,220,14)" fg:x="431176" fg:w="2357"/><text x="61.0154%" y="591.50"></text></g><g><title>memchr::memmem::rabinkarp::NeedleHash::forward (81 samples, 0.01%)</title><rect x="61.1124%" y="485" width="0.0114%" height="15" fill="rgb(241,158,9)" fg:x="433638" fg:w="81"/><text x="61.3624%" y="495.50"></text></g><g><title>memchr::memmem::NeedleInfo::new (198 samples, 0.03%)</title><rect x="61.1121%" y="501" width="0.0279%" height="15" fill="rgb(246,9,43)" fg:x="433636" fg:w="198"/><text x="61.3621%" y="511.50"></text></g><g><title>memchr::memmem::rarebytes::RareNeedleBytes::forward (115 samples, 0.02%)</title><rect x="61.1238%" y="485" width="0.0162%" height="15" fill="rgb(206,73,33)" fg:x="433719" fg:w="115"/><text x="61.3738%" y="495.50"></text></g><g><title>memchr::memmem::FinderBuilder::build_forward (227 samples, 0.03%)</title><rect x="61.1104%" y="533" width="0.0320%" height="15" fill="rgb(222,79,8)" fg:x="433624" fg:w="227"/><text x="61.3604%" y="543.50"></text></g><g><title>memchr::memmem::Searcher::new (222 samples, 0.03%)</title><rect x="61.1111%" y="517" width="0.0313%" height="15" fill="rgb(234,8,54)" fg:x="433629" fg:w="222"/><text x="61.3611%" y="527.50"></text></g><g><title>memchr::memmem::Finder::new (230 samples, 0.03%)</title><rect x="61.1102%" y="549" width="0.0324%" height="15" fill="rgb(209,134,38)" fg:x="433623" fg:w="230"/><text x="61.3602%" y="559.50"></text></g><g><title>regex::literal::imp::Memmem::new (305 samples, 0.04%)</title><rect x="61.1022%" y="565" width="0.0430%" height="15" fill="rgb(230,127,29)" fg:x="433566" fg:w="305"/><text x="61.3522%" y="575.50"></text></g><g><title>regex::literal::imp::LiteralSearcher::new (448 samples, 0.06%)</title><rect x="61.0976%" y="581" width="0.0631%" height="15" fill="rgb(242,44,41)" fg:x="433533" fg:w="448"/><text x="61.3476%" y="591.50"></text></g><g><title>memchr::memmem::NeedleInfo::new (103 samples, 0.01%)</title><rect x="61.1665%" y="485" width="0.0145%" height="15" fill="rgb(222,56,43)" fg:x="434022" fg:w="103"/><text x="61.4165%" y="495.50"></text></g><g><title>memchr::memmem::FinderBuilder::build_forward (108 samples, 0.02%)</title><rect x="61.1659%" y="517" width="0.0152%" height="15" fill="rgb(238,39,47)" fg:x="434018" fg:w="108"/><text x="61.4159%" y="527.50"></text></g><g><title>memchr::memmem::Searcher::new (107 samples, 0.02%)</title><rect x="61.1661%" y="501" width="0.0151%" height="15" fill="rgb(226,79,43)" fg:x="434019" fg:w="107"/><text x="61.4161%" y="511.50"></text></g><g><title>memchr::memmem::Finder::new (110 samples, 0.02%)</title><rect x="61.1658%" y="533" width="0.0155%" height="15" fill="rgb(242,105,53)" fg:x="434017" fg:w="110"/><text x="61.4158%" y="543.50"></text></g><g><title>regex::literal::imp::Memmem::new (148 samples, 0.02%)</title><rect x="61.1627%" y="549" width="0.0209%" height="15" fill="rgb(251,132,46)" fg:x="433995" fg:w="148"/><text x="61.4127%" y="559.50"></text></g><g><title>regex::literal::imp::Matcher::new (170 samples, 0.02%)</title><rect x="61.1608%" y="565" width="0.0240%" height="15" fill="rgb(231,77,14)" fg:x="433982" fg:w="170"/><text x="61.4108%" y="575.50"></text></g><g><title>regex::literal::imp::LiteralSearcher::prefixes (699 samples, 0.10%)</title><rect x="61.0976%" y="597" width="0.0985%" height="15" fill="rgb(240,135,9)" fg:x="433533" fg:w="699"/><text x="61.3476%" y="607.50"></text></g><g><title>regex::literal::imp::Matcher::prefixes (251 samples, 0.04%)</title><rect x="61.1607%" y="581" width="0.0354%" height="15" fill="rgb(248,109,14)" fg:x="433981" fg:w="251"/><text x="61.4107%" y="591.50"></text></g><g><title>regex::literal::imp::SingleByteSet::prefixes (80 samples, 0.01%)</title><rect x="61.1848%" y="565" width="0.0113%" height="15" fill="rgb(227,146,52)" fg:x="434152" fg:w="80"/><text x="61.4348%" y="575.50"></text></g><g><title>memchr::memmem::NeedleInfo::new (186 samples, 0.03%)</title><rect x="61.2124%" y="501" width="0.0262%" height="15" fill="rgb(232,54,3)" fg:x="434348" fg:w="186"/><text x="61.4624%" y="511.50"></text></g><g><title>memchr::memmem::rarebytes::RareNeedleBytes::forward (116 samples, 0.02%)</title><rect x="61.2223%" y="485" width="0.0163%" height="15" fill="rgb(229,201,43)" fg:x="434418" fg:w="116"/><text x="61.4723%" y="495.50"></text></g><g><title>memchr::memmem::Finder::new (231 samples, 0.03%)</title><rect x="61.2110%" y="549" width="0.0326%" height="15" fill="rgb(252,161,33)" fg:x="434338" fg:w="231"/><text x="61.4610%" y="559.50"></text></g><g><title>memchr::memmem::FinderBuilder::build_forward (228 samples, 0.03%)</title><rect x="61.2114%" y="533" width="0.0321%" height="15" fill="rgb(226,146,40)" fg:x="434341" fg:w="228"/><text x="61.4614%" y="543.50"></text></g><g><title>memchr::memmem::Searcher::new (227 samples, 0.03%)</title><rect x="61.2116%" y="517" width="0.0320%" height="15" fill="rgb(219,47,25)" fg:x="434342" fg:w="227"/><text x="61.4616%" y="527.50"></text></g><g><title>regex::literal::imp::Memmem::new (316 samples, 0.04%)</title><rect x="61.2013%" y="565" width="0.0445%" height="15" fill="rgb(250,135,13)" fg:x="434269" fg:w="316"/><text x="61.4513%" y="575.50"></text></g><g><title>regex::literal::imp::LiteralSearcher::new (443 samples, 0.06%)</title><rect x="61.1968%" y="581" width="0.0624%" height="15" fill="rgb(219,229,18)" fg:x="434237" fg:w="443"/><text x="61.4468%" y="591.50"></text></g><g><title>memchr::memmem::NeedleInfo::new (89 samples, 0.01%)</title><rect x="61.2677%" y="485" width="0.0125%" height="15" fill="rgb(217,152,27)" fg:x="434740" fg:w="89"/><text x="61.5177%" y="495.50"></text></g><g><title>memchr::memmem::Finder::new (102 samples, 0.01%)</title><rect x="61.2672%" y="533" width="0.0144%" height="15" fill="rgb(225,71,47)" fg:x="434737" fg:w="102"/><text x="61.5172%" y="543.50"></text></g><g><title>memchr::memmem::FinderBuilder::build_forward (102 samples, 0.01%)</title><rect x="61.2672%" y="517" width="0.0144%" height="15" fill="rgb(220,139,14)" fg:x="434737" fg:w="102"/><text x="61.5172%" y="527.50"></text></g><g><title>memchr::memmem::Searcher::new (99 samples, 0.01%)</title><rect x="61.2677%" y="501" width="0.0140%" height="15" fill="rgb(247,54,32)" fg:x="434740" fg:w="99"/><text x="61.5177%" y="511.50"></text></g><g><title>regex::literal::imp::Memmem::new (147 samples, 0.02%)</title><rect x="61.2632%" y="549" width="0.0207%" height="15" fill="rgb(252,131,39)" fg:x="434708" fg:w="147"/><text x="61.5132%" y="559.50"></text></g><g><title>regex::literal::imp::Matcher::new (183 samples, 0.03%)</title><rect x="61.2593%" y="565" width="0.0258%" height="15" fill="rgb(210,108,39)" fg:x="434681" fg:w="183"/><text x="61.5093%" y="575.50"></text></g><g><title>regex::exec::ExecBuilder::build (17,618 samples, 2.48%)</title><rect x="58.8122%" y="613" width="2.4829%" height="15" fill="rgb(205,23,29)" fg:x="417317" fg:w="17618"/><text x="59.0622%" y="623.50">re..</text></g><g><title>regex::literal::imp::LiteralSearcher::suffixes (703 samples, 0.10%)</title><rect x="61.1961%" y="597" width="0.0991%" height="15" fill="rgb(246,139,46)" fg:x="434232" fg:w="703"/><text x="61.4461%" y="607.50"></text></g><g><title>regex::literal::imp::Matcher::suffixes (255 samples, 0.04%)</title><rect x="61.2592%" y="581" width="0.0359%" height="15" fill="rgb(250,81,26)" fg:x="434680" fg:w="255"/><text x="61.5092%" y="591.50"></text></g><g><title>regex::literal::imp::SingleByteSet::suffixes (71 samples, 0.01%)</title><rect x="61.2851%" y="565" width="0.0100%" height="15" fill="rgb(214,104,7)" fg:x="434864" fg:w="71"/><text x="61.5351%" y="575.50"></text></g><g><title>regex::re_builder::bytes::RegexBuilder::build (17,656 samples, 2.49%)</title><rect x="58.8075%" y="629" width="2.4883%" height="15" fill="rgb(233,189,8)" fg:x="417283" fg:w="17656"/><text x="59.0575%" y="639.50">re..</text></g><g><title>grep_regex::config::ConfiguredHIR::regex (18,008 samples, 2.54%)</title><rect x="58.7657%" y="661" width="2.5379%" height="15" fill="rgb(228,141,17)" fg:x="416987" fg:w="18008"/><text x="59.0157%" y="671.50">gr..</text></g><g><title>grep_regex::config::ConfiguredHIR::pattern_to_regex (17,742 samples, 2.50%)</title><rect x="58.8032%" y="645" width="2.5004%" height="15" fill="rgb(247,157,1)" fg:x="417253" fg:w="17742"/><text x="59.0532%" y="655.50">gr..</text></g><g><title>grep_regex::matcher::RegexMatcherBuilder::build (28,866 samples, 4.07%)</title><rect x="57.2374%" y="709" width="4.0681%" height="15" fill="rgb(249,225,5)" fg:x="406142" fg:w="28866"/><text x="57.4874%" y="719.50">grep..</text></g><g><title>grep_regex::matcher::RegexMatcherImpl::new (18,031 samples, 2.54%)</title><rect x="58.7643%" y="693" width="2.5411%" height="15" fill="rgb(242,55,13)" fg:x="416977" fg:w="18031"/><text x="59.0143%" y="703.50">gr..</text></g><g><title>grep_regex::matcher::StandardMatcher::new (18,026 samples, 2.54%)</title><rect x="58.7650%" y="677" width="2.5404%" height="15" fill="rgb(230,49,50)" fg:x="416982" fg:w="18026"/><text x="59.0150%" y="687.50">gr..</text></g><g><title>hashbrown::map::make_hash (133 samples, 0.02%)</title><rect x="61.3333%" y="629" width="0.0187%" height="15" fill="rgb(241,111,38)" fg:x="435206" fg:w="133"/><text x="61.5833%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (130 samples, 0.02%)</title><rect x="61.3338%" y="613" width="0.0183%" height="15" fill="rgb(252,155,4)" fg:x="435209" fg:w="130"/><text x="61.5838%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (97 samples, 0.01%)</title><rect x="61.3521%" y="629" width="0.0137%" height="15" fill="rgb(212,69,32)" fg:x="435339" fg:w="97"/><text x="61.6021%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (96 samples, 0.01%)</title><rect x="61.3522%" y="613" width="0.0135%" height="15" fill="rgb(243,107,47)" fg:x="435340" fg:w="96"/><text x="61.6022%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (94 samples, 0.01%)</title><rect x="61.3525%" y="597" width="0.0132%" height="15" fill="rgb(247,130,12)" fg:x="435342" fg:w="94"/><text x="61.6025%" y="607.50"></text></g><g><title>rg::args::ArgMatches::is_present (254 samples, 0.04%)</title><rect x="61.3304%" y="709" width="0.0358%" height="15" fill="rgb(233,74,16)" fg:x="435185" fg:w="254"/><text x="61.5804%" y="719.50"></text></g><g><title>clap::args::arg_matches::ArgMatches::is_present (252 samples, 0.04%)</title><rect x="61.3307%" y="693" width="0.0355%" height="15" fill="rgb(208,58,18)" fg:x="435187" fg:w="252"/><text x="61.5807%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (245 samples, 0.03%)</title><rect x="61.3316%" y="677" width="0.0345%" height="15" fill="rgb(242,225,1)" fg:x="435194" fg:w="245"/><text x="61.5816%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (245 samples, 0.03%)</title><rect x="61.3316%" y="661" width="0.0345%" height="15" fill="rgb(249,39,40)" fg:x="435194" fg:w="245"/><text x="61.5816%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (239 samples, 0.03%)</title><rect x="61.3325%" y="645" width="0.0337%" height="15" fill="rgb(207,72,44)" fg:x="435200" fg:w="239"/><text x="61.5825%" y="655.50"></text></g><g><title>rg::args::ArgMatches::matcher_engine (29,522 samples, 4.16%)</title><rect x="57.2262%" y="741" width="4.1605%" height="15" fill="rgb(215,193,12)" fg:x="406063" fg:w="29522"/><text x="57.4762%" y="751.50">rg::a..</text></g><g><title>rg::args::ArgMatches::matcher_rust (29,511 samples, 4.16%)</title><rect x="57.2278%" y="725" width="4.1590%" height="15" fill="rgb(248,41,39)" fg:x="406074" fg:w="29511"/><text x="57.4778%" y="735.50">rg::a..</text></g><g><title>rg::args::ArgMatches::unicode (100 samples, 0.01%)</title><rect x="61.3727%" y="709" width="0.0141%" height="15" fill="rgb(253,85,4)" fg:x="435485" fg:w="100"/><text x="61.6227%" y="719.50"></text></g><g><title>rg::args::ArgMatches::is_present (100 samples, 0.01%)</title><rect x="61.3727%" y="693" width="0.0141%" height="15" fill="rgb(243,70,31)" fg:x="435485" fg:w="100"/><text x="61.6227%" y="703.50"></text></g><g><title>clap::args::arg_matches::ArgMatches::is_present (99 samples, 0.01%)</title><rect x="61.3728%" y="677" width="0.0140%" height="15" fill="rgb(253,195,26)" fg:x="435486" fg:w="99"/><text x="61.6228%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (98 samples, 0.01%)</title><rect x="61.3729%" y="661" width="0.0138%" height="15" fill="rgb(243,42,11)" fg:x="435487" fg:w="98"/><text x="61.6229%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (95 samples, 0.01%)</title><rect x="61.3734%" y="645" width="0.0134%" height="15" fill="rgb(239,66,17)" fg:x="435490" fg:w="95"/><text x="61.6234%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (95 samples, 0.01%)</title><rect x="61.3734%" y="629" width="0.0134%" height="15" fill="rgb(217,132,21)" fg:x="435490" fg:w="95"/><text x="61.6234%" y="639.50"></text></g><g><title>clap::args::arg_matches::ArgMatches::value_of_lossy (81 samples, 0.01%)</title><rect x="61.3869%" y="725" width="0.0114%" height="15" fill="rgb(252,202,21)" fg:x="435586" fg:w="81"/><text x="61.6369%" y="735.50"></text></g><g><title>rg::args::ArgMatches::matcher (29,747 samples, 4.19%)</title><rect x="57.2089%" y="757" width="4.1922%" height="15" fill="rgb(233,98,36)" fg:x="405940" fg:w="29747"/><text x="57.4589%" y="767.50">rg::a..</text></g><g><title>rg::args::ArgMatches::value_of_lossy (102 samples, 0.01%)</title><rect x="61.3867%" y="741" width="0.0144%" height="15" fill="rgb(216,153,54)" fg:x="435585" fg:w="102"/><text x="61.6367%" y="751.50"></text></g><g><title>rg::args::ArgMatches::is_present (129 samples, 0.02%)</title><rect x="61.4069%" y="741" width="0.0182%" height="15" fill="rgb(250,99,7)" fg:x="435728" fg:w="129"/><text x="61.6569%" y="751.50"></text></g><g><title>clap::args::arg_matches::ArgMatches::is_present (128 samples, 0.02%)</title><rect x="61.4070%" y="725" width="0.0180%" height="15" fill="rgb(207,56,50)" fg:x="435729" fg:w="128"/><text x="61.6570%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (121 samples, 0.02%)</title><rect x="61.4080%" y="709" width="0.0171%" height="15" fill="rgb(244,61,34)" fg:x="435736" fg:w="121"/><text x="61.6580%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (121 samples, 0.02%)</title><rect x="61.4080%" y="693" width="0.0171%" height="15" fill="rgb(241,50,38)" fg:x="435736" fg:w="121"/><text x="61.6580%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (120 samples, 0.02%)</title><rect x="61.4082%" y="677" width="0.0169%" height="15" fill="rgb(212,166,30)" fg:x="435737" fg:w="120"/><text x="61.6582%" y="687.50"></text></g><g><title>rg::args::ArgMatches::paths (215 samples, 0.03%)</title><rect x="61.4011%" y="757" width="0.0303%" height="15" fill="rgb(249,127,32)" fg:x="435687" fg:w="215"/><text x="61.6511%" y="767.50"></text></g><g><title>rg::args::ArgMatches::is_present (92 samples, 0.01%)</title><rect x="61.4385%" y="741" width="0.0130%" height="15" fill="rgb(209,103,0)" fg:x="435952" fg:w="92"/><text x="61.6885%" y="751.50"></text></g><g><title>clap::args::arg_matches::ArgMatches::is_present (91 samples, 0.01%)</title><rect x="61.4386%" y="725" width="0.0128%" height="15" fill="rgb(238,209,51)" fg:x="435953" fg:w="91"/><text x="61.6886%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (86 samples, 0.01%)</title><rect x="61.4393%" y="709" width="0.0121%" height="15" fill="rgb(237,56,23)" fg:x="435958" fg:w="86"/><text x="61.6893%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (86 samples, 0.01%)</title><rect x="61.4393%" y="693" width="0.0121%" height="15" fill="rgb(215,153,46)" fg:x="435958" fg:w="86"/><text x="61.6893%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (86 samples, 0.01%)</title><rect x="61.4393%" y="677" width="0.0121%" height="15" fill="rgb(224,49,31)" fg:x="435958" fg:w="86"/><text x="61.6893%" y="687.50"></text></g><g><title>rg::args::ArgMatches::pattern_from_os_str (121 samples, 0.02%)</title><rect x="61.4514%" y="741" width="0.0171%" height="15" fill="rgb(250,18,42)" fg:x="436044" fg:w="121"/><text x="61.7014%" y="751.50"></text></g><g><title>rg::args::ArgMatches::pattern_from_str (117 samples, 0.02%)</title><rect x="61.4520%" y="725" width="0.0165%" height="15" fill="rgb(215,176,39)" fg:x="436048" fg:w="117"/><text x="61.7020%" y="735.50"></text></g><g><title>rg::args::ArgMatches::pattern_from_string (89 samples, 0.01%)</title><rect x="61.4559%" y="709" width="0.0125%" height="15" fill="rgb(223,77,29)" fg:x="436076" fg:w="89"/><text x="61.7059%" y="719.50"></text></g><g><title>rg::args::ArgMatches::value_of_os (71 samples, 0.01%)</title><rect x="61.4685%" y="741" width="0.0100%" height="15" fill="rgb(234,94,52)" fg:x="436165" fg:w="71"/><text x="61.7185%" y="751.50"></text></g><g><title>clap::args::arg_matches::ArgMatches::value_of_os (71 samples, 0.01%)</title><rect x="61.4685%" y="725" width="0.0100%" height="15" fill="rgb(220,154,50)" fg:x="436165" fg:w="71"/><text x="61.7185%" y="735.50"></text></g><g><title>rg::args::ArgMatches::to_args (30,458 samples, 4.29%)</title><rect x="57.2044%" y="773" width="4.2924%" height="15" fill="rgb(212,11,10)" fg:x="405908" fg:w="30458"/><text x="57.4544%" y="783.50">rg::a..</text></g><g><title>rg::args::ArgMatches::patterns (464 samples, 0.07%)</title><rect x="61.4314%" y="757" width="0.0654%" height="15" fill="rgb(205,166,19)" fg:x="435902" fg:w="464"/><text x="61.6814%" y="767.50"></text></g><g><title>rg::args::ArgMatches::values_of_os (130 samples, 0.02%)</title><rect x="61.4785%" y="741" width="0.0183%" height="15" fill="rgb(244,198,16)" fg:x="436236" fg:w="130"/><text x="61.7285%" y="751.50"></text></g><g><title>clap::args::arg_matches::ArgMatches::values_of_os (128 samples, 0.02%)</title><rect x="61.4788%" y="725" width="0.0180%" height="15" fill="rgb(219,69,12)" fg:x="436238" fg:w="128"/><text x="61.7288%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (126 samples, 0.02%)</title><rect x="61.4791%" y="709" width="0.0178%" height="15" fill="rgb(245,30,7)" fg:x="436240" fg:w="126"/><text x="61.7291%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (124 samples, 0.02%)</title><rect x="61.4793%" y="693" width="0.0175%" height="15" fill="rgb(218,221,48)" fg:x="436242" fg:w="124"/><text x="61.7293%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (122 samples, 0.02%)</title><rect x="61.4796%" y="677" width="0.0172%" height="15" fill="rgb(216,66,15)" fg:x="436244" fg:w="122"/><text x="61.7296%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (230 samples, 0.03%)</title><rect x="61.6435%" y="677" width="0.0324%" height="15" fill="rgb(226,122,50)" fg:x="437407" fg:w="230"/><text x="61.8935%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (94 samples, 0.01%)</title><rect x="61.6627%" y="661" width="0.0132%" height="15" fill="rgb(239,156,16)" fg:x="437543" fg:w="94"/><text x="61.9127%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (255 samples, 0.04%)</title><rect x="61.6759%" y="677" width="0.0359%" height="15" fill="rgb(224,27,38)" fg:x="437637" fg:w="255"/><text x="61.9259%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (138 samples, 0.02%)</title><rect x="61.6924%" y="661" width="0.0194%" height="15" fill="rgb(224,39,27)" fg:x="437754" fg:w="138"/><text x="61.9424%" y="671.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (180 samples, 0.03%)</title><rect x="61.7119%" y="677" width="0.0254%" height="15" fill="rgb(215,92,29)" fg:x="437892" fg:w="180"/><text x="61.9619%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,340 samples, 0.19%)</title><rect x="61.5580%" y="693" width="0.1888%" height="15" fill="rgb(207,159,16)" fg:x="436800" fg:w="1340"/><text x="61.8080%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (872 samples, 0.12%)</title><rect x="61.7790%" y="677" width="0.1229%" height="15" fill="rgb(238,163,47)" fg:x="438368" fg:w="872"/><text x="62.0290%" y="687.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (740 samples, 0.10%)</title><rect x="61.7976%" y="661" width="0.1043%" height="15" fill="rgb(219,91,49)" fg:x="438500" fg:w="740"/><text x="62.0476%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (446 samples, 0.06%)</title><rect x="61.8390%" y="645" width="0.0629%" height="15" fill="rgb(227,167,31)" fg:x="438794" fg:w="446"/><text x="62.0890%" y="655.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (306 samples, 0.04%)</title><rect x="61.8587%" y="629" width="0.0431%" height="15" fill="rgb(234,80,54)" fg:x="438934" fg:w="306"/><text x="62.1087%" y="639.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (183 samples, 0.03%)</title><rect x="61.8761%" y="613" width="0.0258%" height="15" fill="rgb(212,114,2)" fg:x="439057" fg:w="183"/><text x="62.1261%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (3,037 samples, 0.43%)</title><rect x="61.5116%" y="709" width="0.4280%" height="15" fill="rgb(234,50,24)" fg:x="436471" fg:w="3037"/><text x="61.7616%" y="719.50"></text></g><g><title>clap::app::parser::Parser::get_matches_with::{{closure}} (1,368 samples, 0.19%)</title><rect x="61.7468%" y="693" width="0.1928%" height="15" fill="rgb(221,68,8)" fg:x="438140" fg:w="1368"/><text x="61.9968%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (268 samples, 0.04%)</title><rect x="61.9018%" y="677" width="0.0378%" height="15" fill="rgb(254,180,31)" fg:x="439240" fg:w="268"/><text x="62.1518%" y="687.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (101 samples, 0.01%)</title><rect x="61.9547%" y="629" width="0.0142%" height="15" fill="rgb(247,130,50)" fg:x="439615" fg:w="101"/><text x="62.2047%" y="639.50"></text></g><g><title>clap::args::arg_matcher::ArgMatcher::entry (104 samples, 0.01%)</title><rect x="61.9546%" y="661" width="0.0147%" height="15" fill="rgb(211,109,4)" fg:x="439614" fg:w="104"/><text x="62.2046%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (103 samples, 0.01%)</title><rect x="61.9547%" y="645" width="0.0145%" height="15" fill="rgb(238,50,21)" fg:x="439615" fg:w="103"/><text x="62.2047%" y="655.50"></text></g><g><title>clap::args::arg_matcher::ArgMatcher::add_index_to (168 samples, 0.02%)</title><rect x="61.9491%" y="677" width="0.0237%" height="15" fill="rgb(225,57,45)" fg:x="439575" fg:w="168"/><text x="62.1991%" y="687.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (108 samples, 0.02%)</title><rect x="61.9841%" y="629" width="0.0152%" height="15" fill="rgb(209,196,50)" fg:x="439824" fg:w="108"/><text x="62.2341%" y="639.50"></text></g><g><title>clap::args::arg_matcher::ArgMatcher::entry (111 samples, 0.02%)</title><rect x="61.9840%" y="661" width="0.0156%" height="15" fill="rgb(242,140,13)" fg:x="439823" fg:w="111"/><text x="62.2340%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (111 samples, 0.02%)</title><rect x="61.9840%" y="645" width="0.0156%" height="15" fill="rgb(217,111,7)" fg:x="439823" fg:w="111"/><text x="62.2340%" y="655.50"></text></g><g><title>clap::args::arg_matcher::ArgMatcher::add_val_to (224 samples, 0.03%)</title><rect x="61.9727%" y="677" width="0.0316%" height="15" fill="rgb(253,193,51)" fg:x="439743" fg:w="224"/><text x="62.2227%" y="687.50"></text></g><g><title>clap::args::arg_matcher::ArgMatcher::get (115 samples, 0.02%)</title><rect x="62.0050%" y="661" width="0.0162%" height="15" fill="rgb(252,70,29)" fg:x="439972" fg:w="115"/><text x="62.2550%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (113 samples, 0.02%)</title><rect x="62.0053%" y="645" width="0.0159%" height="15" fill="rgb(232,127,12)" fg:x="439974" fg:w="113"/><text x="62.2553%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (113 samples, 0.02%)</title><rect x="62.0053%" y="629" width="0.0159%" height="15" fill="rgb(211,180,21)" fg:x="439974" fg:w="113"/><text x="62.2553%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (111 samples, 0.02%)</title><rect x="62.0056%" y="613" width="0.0156%" height="15" fill="rgb(229,72,13)" fg:x="439976" fg:w="111"/><text x="62.2556%" y="623.50"></text></g><g><title>clap::args::arg_matcher::ArgMatcher::needs_more_vals (121 samples, 0.02%)</title><rect x="62.0043%" y="677" width="0.0171%" height="15" fill="rgb(240,211,49)" fg:x="439967" fg:w="121"/><text x="62.2543%" y="687.50"></text></g><g><title>clap::app::parser::Parser::add_single_val_to_arg (530 samples, 0.07%)</title><rect x="61.9478%" y="693" width="0.0747%" height="15" fill="rgb(219,149,40)" fg:x="439566" fg:w="530"/><text x="62.1978%" y="703.50"></text></g><g><title>clap::app::parser::Parser::add_val_to_arg (541 samples, 0.08%)</title><rect x="61.9472%" y="709" width="0.0762%" height="15" fill="rgb(210,127,46)" fg:x="439562" fg:w="541"/><text x="62.1972%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (74 samples, 0.01%)</title><rect x="62.0363%" y="629" width="0.0104%" height="15" fill="rgb(220,106,7)" fg:x="440194" fg:w="74"/><text x="62.2863%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (72 samples, 0.01%)</title><rect x="62.0366%" y="613" width="0.0101%" height="15" fill="rgb(249,31,22)" fg:x="440196" fg:w="72"/><text x="62.2866%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (84 samples, 0.01%)</title><rect x="62.0359%" y="645" width="0.0118%" height="15" fill="rgb(253,1,49)" fg:x="440191" fg:w="84"/><text x="62.2859%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any (108 samples, 0.02%)</title><rect x="62.0347%" y="677" width="0.0152%" height="15" fill="rgb(227,144,33)" fg:x="440183" fg:w="108"/><text x="62.2847%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (104 samples, 0.01%)</title><rect x="62.0353%" y="661" width="0.0147%" height="15" fill="rgb(249,163,44)" fg:x="440187" fg:w="104"/><text x="62.2853%" y="671.50"></text></g><g><title>clap::app::parser::Parser::app_debug_asserts (192 samples, 0.03%)</title><rect x="62.0235%" y="709" width="0.0271%" height="15" fill="rgb(234,15,39)" fg:x="440103" fg:w="192"/><text x="62.2735%" y="719.50"></text></g><g><title>clap::app::parser::Parser::verify_positionals (185 samples, 0.03%)</title><rect x="62.0245%" y="693" width="0.0261%" height="15" fill="rgb(207,66,16)" fg:x="440110" fg:w="185"/><text x="62.2745%" y="703.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (86 samples, 0.01%)</title><rect x="62.0983%" y="597" width="0.0121%" height="15" fill="rgb(233,112,24)" fg:x="440634" fg:w="86"/><text x="62.3483%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (145 samples, 0.02%)</title><rect x="62.1633%" y="581" width="0.0204%" height="15" fill="rgb(230,90,22)" fg:x="441095" fg:w="145"/><text x="62.4133%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (72 samples, 0.01%)</title><rect x="62.1736%" y="565" width="0.0101%" height="15" fill="rgb(229,61,13)" fg:x="441168" fg:w="72"/><text x="62.4236%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (170 samples, 0.02%)</title><rect x="62.1837%" y="581" width="0.0240%" height="15" fill="rgb(225,57,24)" fg:x="441240" fg:w="170"/><text x="62.4337%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (87 samples, 0.01%)</title><rect x="62.1954%" y="565" width="0.0123%" height="15" fill="rgb(208,169,48)" fg:x="441323" fg:w="87"/><text x="62.4454%" y="575.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (110 samples, 0.02%)</title><rect x="62.2077%" y="581" width="0.0155%" height="15" fill="rgb(244,218,51)" fg:x="441410" fg:w="110"/><text x="62.4577%" y="591.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (831 samples, 0.12%)</title><rect x="62.1104%" y="597" width="0.1171%" height="15" fill="rgb(214,148,10)" fg:x="440720" fg:w="831"/><text x="62.3604%" y="607.50"></text></g><g><title>clap::app::parser::Parser::contains_long::{{closure}} (176 samples, 0.02%)</title><rect x="62.2626%" y="581" width="0.0248%" height="15" fill="rgb(225,174,27)" fg:x="441800" fg:w="176"/><text x="62.5126%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (89 samples, 0.01%)</title><rect x="62.2749%" y="565" width="0.0125%" height="15" fill="rgb(230,96,26)" fg:x="441887" fg:w="89"/><text x="62.5249%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (91 samples, 0.01%)</title><rect x="62.3252%" y="549" width="0.0128%" height="15" fill="rgb(232,10,30)" fg:x="442244" fg:w="91"/><text x="62.5752%" y="559.50"></text></g><g><title>clap::app::parser::Parser::contains_long::{{closure}} (288 samples, 0.04%)</title><rect x="62.3094%" y="565" width="0.0406%" height="15" fill="rgb(222,8,50)" fg:x="442132" fg:w="288"/><text x="62.5594%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (85 samples, 0.01%)</title><rect x="62.3380%" y="549" width="0.0120%" height="15" fill="rgb(213,81,27)" fg:x="442335" fg:w="85"/><text x="62.5880%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any::check::{{closure}} (210 samples, 0.03%)</title><rect x="62.3500%" y="565" width="0.0296%" height="15" fill="rgb(245,50,10)" fg:x="442420" fg:w="210"/><text x="62.6000%" y="575.50"></text></g><g><title>clap::app::parser::Parser::contains_long::{{closure}} (180 samples, 0.03%)</title><rect x="62.3542%" y="549" width="0.0254%" height="15" fill="rgb(216,100,18)" fg:x="442450" fg:w="180"/><text x="62.6042%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (166 samples, 0.02%)</title><rect x="62.3562%" y="533" width="0.0234%" height="15" fill="rgb(236,147,54)" fg:x="442464" fg:w="166"/><text x="62.6062%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (154 samples, 0.02%)</title><rect x="62.3579%" y="517" width="0.0217%" height="15" fill="rgb(205,143,26)" fg:x="442476" fg:w="154"/><text x="62.6079%" y="527.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (125 samples, 0.02%)</title><rect x="62.3620%" y="501" width="0.0176%" height="15" fill="rgb(236,26,9)" fg:x="442505" fg:w="125"/><text x="62.6120%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (94 samples, 0.01%)</title><rect x="62.3663%" y="485" width="0.0132%" height="15" fill="rgb(221,165,53)" fg:x="442536" fg:w="94"/><text x="62.6163%" y="495.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (71 samples, 0.01%)</title><rect x="62.3696%" y="469" width="0.0100%" height="15" fill="rgb(214,110,17)" fg:x="442559" fg:w="71"/><text x="62.6196%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,967 samples, 0.42%)</title><rect x="62.0581%" y="645" width="0.4181%" height="15" fill="rgb(237,197,12)" fg:x="440349" fg:w="2967"/><text x="62.3081%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,965 samples, 0.42%)</title><rect x="62.0584%" y="629" width="0.4179%" height="15" fill="rgb(205,84,17)" fg:x="440351" fg:w="2965"/><text x="62.3084%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,964 samples, 0.42%)</title><rect x="62.0586%" y="613" width="0.4177%" height="15" fill="rgb(237,18,45)" fg:x="440352" fg:w="2964"/><text x="62.3086%" y="623.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1,765 samples, 0.25%)</title><rect x="62.2275%" y="597" width="0.2487%" height="15" fill="rgb(221,87,14)" fg:x="441551" fg:w="1765"/><text x="62.4775%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1,340 samples, 0.19%)</title><rect x="62.2874%" y="581" width="0.1888%" height="15" fill="rgb(238,186,15)" fg:x="441976" fg:w="1340"/><text x="62.5374%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (686 samples, 0.10%)</title><rect x="62.3796%" y="565" width="0.0967%" height="15" fill="rgb(208,115,11)" fg:x="442630" fg:w="686"/><text x="62.6296%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any::check::{{closure}} (626 samples, 0.09%)</title><rect x="62.3880%" y="549" width="0.0882%" height="15" fill="rgb(254,175,0)" fg:x="442690" fg:w="626"/><text x="62.6380%" y="559.50"></text></g><g><title>clap::app::parser::Parser::contains_long::{{closure}} (540 samples, 0.08%)</title><rect x="62.4002%" y="533" width="0.0761%" height="15" fill="rgb(227,24,42)" fg:x="442776" fg:w="540"/><text x="62.6502%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (462 samples, 0.07%)</title><rect x="62.4112%" y="517" width="0.0651%" height="15" fill="rgb(223,211,37)" fg:x="442854" fg:w="462"/><text x="62.6612%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (410 samples, 0.06%)</title><rect x="62.4185%" y="501" width="0.0578%" height="15" fill="rgb(235,49,27)" fg:x="442906" fg:w="410"/><text x="62.6685%" y="511.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (331 samples, 0.05%)</title><rect x="62.4296%" y="485" width="0.0466%" height="15" fill="rgb(254,97,51)" fg:x="442985" fg:w="331"/><text x="62.6796%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (194 samples, 0.03%)</title><rect x="62.4489%" y="469" width="0.0273%" height="15" fill="rgb(249,51,40)" fg:x="443122" fg:w="194"/><text x="62.6989%" y="479.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (127 samples, 0.02%)</title><rect x="62.4584%" y="453" width="0.0179%" height="15" fill="rgb(210,128,45)" fg:x="443189" fg:w="127"/><text x="62.7084%" y="463.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (90 samples, 0.01%)</title><rect x="62.4636%" y="437" width="0.0127%" height="15" fill="rgb(224,137,50)" fg:x="443226" fg:w="90"/><text x="62.7136%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any (2,980 samples, 0.42%)</title><rect x="62.0567%" y="677" width="0.4200%" height="15" fill="rgb(242,15,9)" fg:x="440339" fg:w="2980"/><text x="62.3067%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,978 samples, 0.42%)</title><rect x="62.0570%" y="661" width="0.4197%" height="15" fill="rgb(233,187,41)" fg:x="440341" fg:w="2978"/><text x="62.3070%" y="671.50"></text></g><g><title>clap::app::parser::Parser::contains_long (3,008 samples, 0.42%)</title><rect x="62.0540%" y="693" width="0.4239%" height="15" fill="rgb(227,2,29)" fg:x="440320" fg:w="3008"/><text x="62.3040%" y="703.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (98 samples, 0.01%)</title><rect x="62.5138%" y="597" width="0.0138%" height="15" fill="rgb(222,70,3)" fg:x="443582" fg:w="98"/><text x="62.7638%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (166 samples, 0.02%)</title><rect x="62.5807%" y="581" width="0.0234%" height="15" fill="rgb(213,11,42)" fg:x="444057" fg:w="166"/><text x="62.8307%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (92 samples, 0.01%)</title><rect x="62.5911%" y="565" width="0.0130%" height="15" fill="rgb(225,150,9)" fg:x="444131" fg:w="92"/><text x="62.8411%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (153 samples, 0.02%)</title><rect x="62.6041%" y="581" width="0.0216%" height="15" fill="rgb(230,162,45)" fg:x="444223" fg:w="153"/><text x="62.8541%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (78 samples, 0.01%)</title><rect x="62.6147%" y="565" width="0.0110%" height="15" fill="rgb(222,14,52)" fg:x="444298" fg:w="78"/><text x="62.8647%" y="575.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (123 samples, 0.02%)</title><rect x="62.6257%" y="581" width="0.0173%" height="15" fill="rgb(254,198,14)" fg:x="444376" fg:w="123"/><text x="62.8757%" y="591.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (852 samples, 0.12%)</title><rect x="62.5279%" y="597" width="0.1201%" height="15" fill="rgb(220,217,30)" fg:x="443682" fg:w="852"/><text x="62.7779%" y="607.50"></text></g><g><title>clap::app::parser::Parser::contains_short::{{closure}} (185 samples, 0.03%)</title><rect x="62.6937%" y="581" width="0.0261%" height="15" fill="rgb(215,146,41)" fg:x="444859" fg:w="185"/><text x="62.9437%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (116 samples, 0.02%)</title><rect x="62.7034%" y="565" width="0.0163%" height="15" fill="rgb(217,27,36)" fg:x="444928" fg:w="116"/><text x="62.9534%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,896 samples, 0.27%)</title><rect x="62.4804%" y="645" width="0.2672%" height="15" fill="rgb(219,218,39)" fg:x="443345" fg:w="1896"/><text x="62.7304%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,896 samples, 0.27%)</title><rect x="62.4804%" y="629" width="0.2672%" height="15" fill="rgb(219,4,42)" fg:x="443345" fg:w="1896"/><text x="62.7304%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,888 samples, 0.27%)</title><rect x="62.4815%" y="613" width="0.2661%" height="15" fill="rgb(249,119,36)" fg:x="443353" fg:w="1888"/><text x="62.7315%" y="623.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (707 samples, 0.10%)</title><rect x="62.6479%" y="597" width="0.0996%" height="15" fill="rgb(209,23,33)" fg:x="444534" fg:w="707"/><text x="62.8979%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (197 samples, 0.03%)</title><rect x="62.7198%" y="581" width="0.0278%" height="15" fill="rgb(211,10,0)" fg:x="445044" fg:w="197"/><text x="62.9698%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any (1,904 samples, 0.27%)</title><rect x="62.4794%" y="677" width="0.2683%" height="15" fill="rgb(208,99,37)" fg:x="443338" fg:w="1904"/><text x="62.7294%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,902 samples, 0.27%)</title><rect x="62.4797%" y="661" width="0.2680%" height="15" fill="rgb(213,132,31)" fg:x="443340" fg:w="1902"/><text x="62.7297%" y="671.50"></text></g><g><title>clap::app::parser::Parser::contains_short (1,930 samples, 0.27%)</title><rect x="62.4780%" y="693" width="0.2720%" height="15" fill="rgb(243,129,40)" fg:x="443328" fg:w="1930"/><text x="62.7280%" y="703.50"></text></g><g><title>clap::app::parser::Parser::create_help_and_version (4,967 samples, 0.70%)</title><rect x="62.0505%" y="709" width="0.7000%" height="15" fill="rgb(210,66,33)" fg:x="440295" fg:w="4967"/><text x="62.3005%" y="719.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (110 samples, 0.02%)</title><rect x="62.7748%" y="677" width="0.0155%" height="15" fill="rgb(209,189,4)" fg:x="445434" fg:w="110"/><text x="63.0248%" y="687.50"></text></g><g><title>clap::args::arg_matcher::ArgMatcher::add_val_to (122 samples, 0.02%)</title><rect x="62.7986%" y="645" width="0.0172%" height="15" fill="rgb(214,107,37)" fg:x="445603" fg:w="122"/><text x="63.0486%" y="655.50"></text></g><g><title>clap::app::parser::Parser::add_single_val_to_arg (240 samples, 0.03%)</title><rect x="62.7903%" y="661" width="0.0338%" height="15" fill="rgb(245,88,54)" fg:x="445544" fg:w="240"/><text x="63.0403%" y="671.50"></text></g><g><title>clap::app::parser::Parser::add_val_to_arg (243 samples, 0.03%)</title><rect x="62.7903%" y="677" width="0.0342%" height="15" fill="rgb(205,146,20)" fg:x="445544" fg:w="243"/><text x="63.0403%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (89 samples, 0.01%)</title><rect x="62.8255%" y="613" width="0.0125%" height="15" fill="rgb(220,161,25)" fg:x="445794" fg:w="89"/><text x="63.0755%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (88 samples, 0.01%)</title><rect x="62.8256%" y="597" width="0.0124%" height="15" fill="rgb(215,152,15)" fg:x="445795" fg:w="88"/><text x="63.0756%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (87 samples, 0.01%)</title><rect x="62.8380%" y="613" width="0.0123%" height="15" fill="rgb(233,192,44)" fg:x="445883" fg:w="87"/><text x="63.0880%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (87 samples, 0.01%)</title><rect x="62.8380%" y="597" width="0.0123%" height="15" fill="rgb(240,170,46)" fg:x="445883" fg:w="87"/><text x="63.0880%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (86 samples, 0.01%)</title><rect x="62.8382%" y="581" width="0.0121%" height="15" fill="rgb(207,104,33)" fg:x="445884" fg:w="86"/><text x="63.0882%" y="591.50"></text></g><g><title>clap::args::arg_matcher::ArgMatcher::get (184 samples, 0.03%)</title><rect x="62.8245%" y="677" width="0.0259%" height="15" fill="rgb(219,21,39)" fg:x="445787" fg:w="184"/><text x="63.0745%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (183 samples, 0.03%)</title><rect x="62.8246%" y="661" width="0.0258%" height="15" fill="rgb(214,133,29)" fg:x="445788" fg:w="183"/><text x="63.0746%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (180 samples, 0.03%)</title><rect x="62.8251%" y="645" width="0.0254%" height="15" fill="rgb(226,93,6)" fg:x="445791" fg:w="180"/><text x="63.0751%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (178 samples, 0.03%)</title><rect x="62.8254%" y="629" width="0.0251%" height="15" fill="rgb(252,222,34)" fg:x="445793" fg:w="178"/><text x="63.0754%" y="639.50"></text></g><g><title>clap::app::parser::Parser::add_defaults (637 samples, 0.09%)</title><rect x="62.7628%" y="693" width="0.0898%" height="15" fill="rgb(252,92,48)" fg:x="445349" fg:w="637"/><text x="63.0128%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 samples, 0.01%)</title><rect x="62.8599%" y="677" width="0.0120%" height="15" fill="rgb(245,223,24)" fg:x="446038" fg:w="85"/><text x="63.1099%" y="687.50"></text></g><g><title>clap::app::parser::Parser::add_env (145 samples, 0.02%)</title><rect x="62.8526%" y="693" width="0.0204%" height="15" fill="rgb(205,176,3)" fg:x="445986" fg:w="145"/><text x="63.1026%" y="703.50"></text></g><g><title>clap::app::usage::create_usage_with_title (110 samples, 0.02%)</title><rect x="62.8731%" y="693" width="0.0155%" height="15" fill="rgb(235,151,15)" fg:x="446132" fg:w="110"/><text x="63.1231%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (238 samples, 0.03%)</title><rect x="63.0160%" y="645" width="0.0335%" height="15" fill="rgb(237,209,11)" fg:x="447146" fg:w="238"/><text x="63.2660%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (124 samples, 0.02%)</title><rect x="63.0321%" y="629" width="0.0175%" height="15" fill="rgb(243,227,24)" fg:x="447260" fg:w="124"/><text x="63.2821%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (209 samples, 0.03%)</title><rect x="63.0496%" y="645" width="0.0295%" height="15" fill="rgb(239,193,16)" fg:x="447384" fg:w="209"/><text x="63.2996%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (113 samples, 0.02%)</title><rect x="63.0631%" y="629" width="0.0159%" height="15" fill="rgb(231,27,9)" fg:x="447480" fg:w="113"/><text x="63.3131%" y="639.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (167 samples, 0.02%)</title><rect x="63.0790%" y="645" width="0.0235%" height="15" fill="rgb(219,169,10)" fg:x="447593" fg:w="167"/><text x="63.3290%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,307 samples, 0.18%)</title><rect x="62.9306%" y="661" width="0.1842%" height="15" fill="rgb(244,229,43)" fg:x="446540" fg:w="1307"/><text x="63.1806%" y="671.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (87 samples, 0.01%)</title><rect x="63.1026%" y="645" width="0.0123%" height="15" fill="rgb(254,38,20)" fg:x="447760" fg:w="87"/><text x="63.3526%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (2,612 samples, 0.37%)</title><rect x="62.8936%" y="677" width="0.3681%" height="15" fill="rgb(250,47,30)" fg:x="446277" fg:w="2612"/><text x="63.1436%" y="687.50"></text></g><g><title>clap::app::validator::Validator::validate_blacklist::{{closure}} (1,042 samples, 0.15%)</title><rect x="63.1148%" y="661" width="0.1468%" height="15" fill="rgb(224,124,36)" fg:x="447847" fg:w="1042"/><text x="63.3648%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (898 samples, 0.13%)</title><rect x="63.1351%" y="645" width="0.1266%" height="15" fill="rgb(246,68,51)" fg:x="447991" fg:w="898"/><text x="63.3851%" y="655.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (731 samples, 0.10%)</title><rect x="63.1587%" y="629" width="0.1030%" height="15" fill="rgb(253,43,49)" fg:x="448158" fg:w="731"/><text x="63.4087%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (465 samples, 0.07%)</title><rect x="63.1961%" y="613" width="0.0655%" height="15" fill="rgb(219,54,36)" fg:x="448424" fg:w="465"/><text x="63.4461%" y="623.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (329 samples, 0.05%)</title><rect x="63.2153%" y="597" width="0.0464%" height="15" fill="rgb(227,133,34)" fg:x="448560" fg:w="329"/><text x="63.4653%" y="607.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (209 samples, 0.03%)</title><rect x="63.2322%" y="581" width="0.0295%" height="15" fill="rgb(247,227,15)" fg:x="448680" fg:w="209"/><text x="63.4822%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (83 samples, 0.01%)</title><rect x="63.2701%" y="629" width="0.0117%" height="15" fill="rgb(229,96,14)" fg:x="448949" fg:w="83"/><text x="63.5201%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (80 samples, 0.01%)</title><rect x="63.2705%" y="613" width="0.0113%" height="15" fill="rgb(220,79,17)" fg:x="448952" fg:w="80"/><text x="63.5205%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (91 samples, 0.01%)</title><rect x="63.2697%" y="645" width="0.0128%" height="15" fill="rgb(205,131,53)" fg:x="448946" fg:w="91"/><text x="63.5197%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (114 samples, 0.02%)</title><rect x="63.2686%" y="661" width="0.0161%" height="15" fill="rgb(209,50,29)" fg:x="448938" fg:w="114"/><text x="63.5186%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (120 samples, 0.02%)</title><rect x="63.2684%" y="677" width="0.0169%" height="15" fill="rgb(245,86,46)" fg:x="448937" fg:w="120"/><text x="63.5184%" y="687.50"></text></g><g><title>clap::app::validator::Validator::validate_blacklist (2,844 samples, 0.40%)</title><rect x="62.8886%" y="693" width="0.4008%" height="15" fill="rgb(235,66,46)" fg:x="446242" fg:w="2844"/><text x="63.1386%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (158 samples, 0.02%)</title><rect x="63.3751%" y="645" width="0.0223%" height="15" fill="rgb(232,148,31)" fg:x="449694" fg:w="158"/><text x="63.6251%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (181 samples, 0.03%)</title><rect x="63.3974%" y="645" width="0.0255%" height="15" fill="rgb(217,149,8)" fg:x="449852" fg:w="181"/><text x="63.6474%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (84 samples, 0.01%)</title><rect x="63.4111%" y="629" width="0.0118%" height="15" fill="rgb(209,183,11)" fg:x="449949" fg:w="84"/><text x="63.6611%" y="639.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (129 samples, 0.02%)</title><rect x="63.4229%" y="645" width="0.0182%" height="15" fill="rgb(208,55,20)" fg:x="450033" fg:w="129"/><text x="63.6729%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (887 samples, 0.13%)</title><rect x="63.3216%" y="661" width="0.1250%" height="15" fill="rgb(218,39,14)" fg:x="449314" fg:w="887"/><text x="63.5716%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (1,734 samples, 0.24%)</title><rect x="63.2930%" y="677" width="0.2444%" height="15" fill="rgb(216,169,33)" fg:x="449111" fg:w="1734"/><text x="63.5430%" y="687.50"></text></g><g><title>clap::app::validator::Validator::validate_matched_args::{{closure}} (644 samples, 0.09%)</title><rect x="63.4466%" y="661" width="0.0908%" height="15" fill="rgb(233,80,24)" fg:x="450201" fg:w="644"/><text x="63.6966%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (557 samples, 0.08%)</title><rect x="63.4588%" y="645" width="0.0785%" height="15" fill="rgb(213,179,31)" fg:x="450288" fg:w="557"/><text x="63.7088%" y="655.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (436 samples, 0.06%)</title><rect x="63.4759%" y="629" width="0.0614%" height="15" fill="rgb(209,19,5)" fg:x="450409" fg:w="436"/><text x="63.7259%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (276 samples, 0.04%)</title><rect x="63.4984%" y="613" width="0.0389%" height="15" fill="rgb(219,18,35)" fg:x="450569" fg:w="276"/><text x="63.7484%" y="623.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (176 samples, 0.02%)</title><rect x="63.5125%" y="597" width="0.0248%" height="15" fill="rgb(209,169,16)" fg:x="450669" fg:w="176"/><text x="63.7625%" y="607.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (116 samples, 0.02%)</title><rect x="63.5210%" y="581" width="0.0163%" height="15" fill="rgb(245,90,51)" fg:x="450729" fg:w="116"/><text x="63.7710%" y="591.50"></text></g><g><title>clap::app::validator::Validator::validate_arg_values (73 samples, 0.01%)</title><rect x="63.5418%" y="677" width="0.0103%" height="15" fill="rgb(220,99,45)" fg:x="450877" fg:w="73"/><text x="63.7918%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (77 samples, 0.01%)</title><rect x="63.5544%" y="661" width="0.0109%" height="15" fill="rgb(249,89,25)" fg:x="450966" fg:w="77"/><text x="63.8044%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (78 samples, 0.01%)</title><rect x="63.5544%" y="677" width="0.0110%" height="15" fill="rgb(239,193,0)" fg:x="450966" fg:w="78"/><text x="63.8044%" y="687.50"></text></g><g><title>clap::app::validator::Validator::validate_matched_args (1,968 samples, 0.28%)</title><rect x="63.2894%" y="693" width="0.2773%" height="15" fill="rgb(231,126,1)" fg:x="449086" fg:w="1968"/><text x="63.5394%" y="703.50"></text></g><g><title>clap::app::validator::Validator::validate (5,775 samples, 0.81%)</title><rect x="62.7624%" y="709" width="0.8139%" height="15" fill="rgb(243,166,3)" fg:x="445346" fg:w="5775"/><text x="63.0124%" y="719.50"></text></g><g><title>clap::args::arg_matcher::ArgMatcher::inc_occurrence_of (109 samples, 0.02%)</title><rect x="63.5762%" y="709" width="0.0154%" height="15" fill="rgb(223,22,34)" fg:x="451121" fg:w="109"/><text x="63.8262%" y="719.50"></text></g><g><title>clap::args::arg_matcher::ArgMatcher::get_mut (109 samples, 0.02%)</title><rect x="63.5762%" y="693" width="0.0154%" height="15" fill="rgb(251,52,51)" fg:x="451121" fg:w="109"/><text x="63.8262%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (106 samples, 0.01%)</title><rect x="63.5766%" y="677" width="0.0149%" height="15" fill="rgb(221,165,28)" fg:x="451124" fg:w="106"/><text x="63.8266%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (106 samples, 0.01%)</title><rect x="63.5766%" y="661" width="0.0149%" height="15" fill="rgb(218,121,47)" fg:x="451124" fg:w="106"/><text x="63.8266%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (105 samples, 0.01%)</title><rect x="63.5768%" y="645" width="0.0148%" height="15" fill="rgb(209,120,9)" fg:x="451125" fg:w="105"/><text x="63.8268%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (83 samples, 0.01%)</title><rect x="63.6158%" y="629" width="0.0117%" height="15" fill="rgb(236,68,12)" fg:x="451402" fg:w="83"/><text x="63.8658%" y="639.50"></text></g><g><title>alloc::collections::btree::mem::replace (81 samples, 0.01%)</title><rect x="63.6161%" y="613" width="0.0114%" height="15" fill="rgb(225,194,26)" fg:x="451404" fg:w="81"/><text x="63.8661%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (99 samples, 0.01%)</title><rect x="63.6153%" y="661" width="0.0140%" height="15" fill="rgb(231,84,39)" fg:x="451398" fg:w="99"/><text x="63.8653%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (97 samples, 0.01%)</title><rect x="63.6155%" y="645" width="0.0137%" height="15" fill="rgb(210,11,45)" fg:x="451400" fg:w="97"/><text x="63.8655%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (104 samples, 0.01%)</title><rect x="63.6153%" y="677" width="0.0147%" height="15" fill="rgb(224,54,52)" fg:x="451398" fg:w="104"/><text x="63.8653%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (128 samples, 0.02%)</title><rect x="63.6144%" y="709" width="0.0180%" height="15" fill="rgb(238,102,14)" fg:x="451392" fg:w="128"/><text x="63.8644%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (127 samples, 0.02%)</title><rect x="63.6146%" y="693" width="0.0179%" height="15" fill="rgb(243,160,52)" fg:x="451393" fg:w="127"/><text x="63.8646%" y="703.50"></text></g><g><title>clap::app::parser::Parser::get_matches_with (15,189 samples, 2.14%)</title><rect x="61.5026%" y="725" width="2.1406%" height="15" fill="rgb(216,114,19)" fg:x="436407" fg:w="15189"/><text x="61.7526%" y="735.50">c..</text></g><g><title>clap::app::App::get_matches_from_safe_borrow (15,342 samples, 2.16%)</title><rect x="61.4971%" y="741" width="2.1621%" height="15" fill="rgb(244,166,37)" fg:x="436368" fg:w="15342"/><text x="61.7471%" y="751.50">c..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (104 samples, 0.01%)</title><rect x="63.7143%" y="581" width="0.0147%" height="15" fill="rgb(246,29,44)" fg:x="452101" fg:w="104"/><text x="63.9643%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (179 samples, 0.03%)</title><rect x="63.7102%" y="597" width="0.0252%" height="15" fill="rgb(215,56,53)" fg:x="452072" fg:w="179"/><text x="63.9602%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (230 samples, 0.03%)</title><rect x="63.7504%" y="549" width="0.0324%" height="15" fill="rgb(217,60,2)" fg:x="452357" fg:w="230"/><text x="64.0004%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (283 samples, 0.04%)</title><rect x="63.7460%" y="565" width="0.0399%" height="15" fill="rgb(207,26,24)" fg:x="452326" fg:w="283"/><text x="63.9960%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;&amp;str&gt;&gt;&gt; (980 samples, 0.14%)</title><rect x="63.6839%" y="629" width="0.1381%" height="15" fill="rgb(252,210,15)" fg:x="451885" fg:w="980"/><text x="63.9339%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;str&gt;&gt; (820 samples, 0.12%)</title><rect x="63.7064%" y="613" width="0.1156%" height="15" fill="rgb(253,209,26)" fg:x="452045" fg:w="820"/><text x="63.9564%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;str&gt;&gt; (614 samples, 0.09%)</title><rect x="63.7355%" y="597" width="0.0865%" height="15" fill="rgb(238,170,14)" fg:x="452251" fg:w="614"/><text x="63.9855%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (598 samples, 0.08%)</title><rect x="63.7377%" y="581" width="0.0843%" height="15" fill="rgb(216,178,15)" fg:x="452267" fg:w="598"/><text x="63.9877%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (256 samples, 0.04%)</title><rect x="63.7859%" y="565" width="0.0361%" height="15" fill="rgb(250,197,2)" fg:x="452609" fg:w="256"/><text x="64.0359%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;clap::args::arg_builder::base::Base&gt; (1,095 samples, 0.15%)</title><rect x="63.6706%" y="645" width="0.1543%" height="15" fill="rgb(212,70,42)" fg:x="451791" fg:w="1095"/><text x="63.9206%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,194 samples, 0.17%)</title><rect x="63.6616%" y="693" width="0.1683%" height="15" fill="rgb(227,213,9)" fg:x="451727" fg:w="1194"/><text x="63.9116%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;[clap::args::arg_builder::flag::FlagBuilder]&gt; (1,194 samples, 0.17%)</title><rect x="63.6616%" y="677" width="0.1683%" height="15" fill="rgb(245,99,25)" fg:x="451727" fg:w="1194"/><text x="63.9116%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;clap::args::arg_builder::flag::FlagBuilder&gt; (1,172 samples, 0.17%)</title><rect x="63.6647%" y="661" width="0.1652%" height="15" fill="rgb(250,82,29)" fg:x="451749" fg:w="1172"/><text x="63.9147%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;clap::args::arg_builder::flag::FlagBuilder&gt;&gt; (1,200 samples, 0.17%)</title><rect x="63.6616%" y="709" width="0.1691%" height="15" fill="rgb(241,226,54)" fg:x="451727" fg:w="1200"/><text x="63.9116%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;&amp;str&gt;&gt;&gt; (105 samples, 0.01%)</title><rect x="63.8384%" y="629" width="0.0148%" height="15" fill="rgb(221,99,41)" fg:x="452981" fg:w="105"/><text x="64.0884%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;str&gt;&gt; (73 samples, 0.01%)</title><rect x="63.8429%" y="613" width="0.0103%" height="15" fill="rgb(213,90,21)" fg:x="453013" fg:w="73"/><text x="64.0929%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;clap::args::arg_builder::base::Base&gt; (135 samples, 0.02%)</title><rect x="63.8354%" y="645" width="0.0190%" height="15" fill="rgb(205,208,24)" fg:x="452960" fg:w="135"/><text x="64.0854%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;dyn core::ops::function::Fn&lt;(alloc::string::String,)&gt;+Output = core::result::Result&lt;(),alloc::string::String&gt;&gt;&gt;&gt; (120 samples, 0.02%)</title><rect x="63.8617%" y="629" width="0.0169%" height="15" fill="rgb(246,31,12)" fg:x="453147" fg:w="120"/><text x="64.1117%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;dyn core::ops::function::Fn&lt;(alloc::string::String,)&gt;+Output = core::result::Result&lt;(),alloc::string::String&gt;&gt;&gt; (111 samples, 0.02%)</title><rect x="63.8630%" y="613" width="0.0156%" height="15" fill="rgb(213,154,6)" fg:x="453156" fg:w="111"/><text x="64.1130%" y="623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (110 samples, 0.02%)</title><rect x="63.8632%" y="597" width="0.0155%" height="15" fill="rgb(222,163,29)" fg:x="453157" fg:w="110"/><text x="64.1132%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (171 samples, 0.02%)</title><rect x="63.8906%" y="565" width="0.0241%" height="15" fill="rgb(227,201,8)" fg:x="453352" fg:w="171"/><text x="64.1406%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (96 samples, 0.01%)</title><rect x="63.9428%" y="437" width="0.0135%" height="15" fill="rgb(233,9,32)" fg:x="453722" fg:w="96"/><text x="64.1928%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (129 samples, 0.02%)</title><rect x="63.9388%" y="453" width="0.0182%" height="15" fill="rgb(217,54,24)" fg:x="453694" fg:w="129"/><text x="64.1888%" y="463.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (344 samples, 0.05%)</title><rect x="63.9283%" y="485" width="0.0485%" height="15" fill="rgb(235,192,0)" fg:x="453619" fg:w="344"/><text x="64.1783%" y="495.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (289 samples, 0.04%)</title><rect x="63.9360%" y="469" width="0.0407%" height="15" fill="rgb(235,45,9)" fg:x="453674" fg:w="289"/><text x="64.1860%" y="479.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (474 samples, 0.07%)</title><rect x="63.9257%" y="501" width="0.0668%" height="15" fill="rgb(246,42,40)" fg:x="453601" fg:w="474"/><text x="64.1757%" y="511.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (112 samples, 0.02%)</title><rect x="63.9767%" y="485" width="0.0158%" height="15" fill="rgb(248,111,24)" fg:x="453963" fg:w="112"/><text x="64.2267%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (80 samples, 0.01%)</title><rect x="64.0103%" y="421" width="0.0113%" height="15" fill="rgb(249,65,22)" fg:x="454201" fg:w="80"/><text x="64.2603%" y="431.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (228 samples, 0.03%)</title><rect x="64.0028%" y="437" width="0.0321%" height="15" fill="rgb(238,111,51)" fg:x="454148" fg:w="228"/><text x="64.2528%" y="447.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::{{closure}} (269 samples, 0.04%)</title><rect x="64.0007%" y="453" width="0.0379%" height="15" fill="rgb(250,118,22)" fg:x="454133" fg:w="269"/><text x="64.2507%" y="463.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (349 samples, 0.05%)</title><rect x="63.9942%" y="485" width="0.0492%" height="15" fill="rgb(234,84,26)" fg:x="454087" fg:w="349"/><text x="64.2442%" y="495.50"></text></g><g><title>alloc::collections::btree::mem::replace (336 samples, 0.05%)</title><rect x="63.9961%" y="469" width="0.0474%" height="15" fill="rgb(243,172,12)" fg:x="454100" fg:w="336"/><text x="64.2461%" y="479.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::init_front (116 samples, 0.02%)</title><rect x="64.0434%" y="485" width="0.0163%" height="15" fill="rgb(236,150,49)" fg:x="454436" fg:w="116"/><text x="64.2934%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (998 samples, 0.14%)</title><rect x="63.9208%" y="517" width="0.1406%" height="15" fill="rgb(225,197,26)" fg:x="453566" fg:w="998"/><text x="64.1708%" y="527.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (489 samples, 0.07%)</title><rect x="63.9925%" y="501" width="0.0689%" height="15" fill="rgb(214,17,42)" fg:x="454075" fg:w="489"/><text x="64.2425%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (95 samples, 0.01%)</title><rect x="64.0614%" y="517" width="0.0134%" height="15" fill="rgb(224,165,40)" fg:x="454564" fg:w="95"/><text x="64.3114%" y="527.50"></text></g><g><title>core::mem::drop (1,140 samples, 0.16%)</title><rect x="63.9147%" y="565" width="0.1607%" height="15" fill="rgb(246,100,4)" fg:x="453523" fg:w="1140"/><text x="64.1647%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;usize,&amp;str&gt;&gt; (1,134 samples, 0.16%)</title><rect x="63.9156%" y="549" width="0.1598%" height="15" fill="rgb(222,103,0)" fg:x="453529" fg:w="1134"/><text x="64.1656%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (1,130 samples, 0.16%)</title><rect x="63.9161%" y="533" width="0.1593%" height="15" fill="rgb(227,189,26)" fg:x="453533" fg:w="1130"/><text x="64.1661%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;clap::map::vec_map::VecMap&lt;&amp;str&gt;&gt;&gt; (1,376 samples, 0.19%)</title><rect x="63.8850%" y="629" width="0.1939%" height="15" fill="rgb(214,202,17)" fg:x="453312" fg:w="1376"/><text x="64.1350%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;clap::map::vec_map::VecMap&lt;&amp;str&gt;&gt; (1,360 samples, 0.19%)</title><rect x="63.8873%" y="613" width="0.1917%" height="15" fill="rgb(229,111,3)" fg:x="453328" fg:w="1360"/><text x="64.1373%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;usize,&amp;str&gt;&gt; (1,355 samples, 0.19%)</title><rect x="63.8880%" y="597" width="0.1910%" height="15" fill="rgb(229,172,15)" fg:x="453333" fg:w="1355"/><text x="64.1380%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (1,351 samples, 0.19%)</title><rect x="63.8885%" y="581" width="0.1904%" height="15" fill="rgb(230,224,35)" fg:x="453337" fg:w="1351"/><text x="64.1385%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;[clap::args::arg_builder::option::OptBuilder]&gt; (1,789 samples, 0.25%)</title><rect x="63.8309%" y="677" width="0.2521%" height="15" fill="rgb(251,141,6)" fg:x="452928" fg:w="1789"/><text x="64.0809%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;clap::args::arg_builder::option::OptBuilder&gt; (1,782 samples, 0.25%)</title><rect x="63.8319%" y="661" width="0.2511%" height="15" fill="rgb(225,208,6)" fg:x="452935" fg:w="1782"/><text x="64.0819%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;clap::args::arg_builder::valued::Valued&gt; (1,602 samples, 0.23%)</title><rect x="63.8572%" y="645" width="0.2258%" height="15" fill="rgb(246,181,16)" fg:x="453115" fg:w="1602"/><text x="64.1072%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,792 samples, 0.25%)</title><rect x="63.8307%" y="693" width="0.2525%" height="15" fill="rgb(227,129,36)" fg:x="452927" fg:w="1792"/><text x="64.0807%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;clap::args::arg_builder::option::OptBuilder&gt;&gt; (1,807 samples, 0.25%)</title><rect x="63.8307%" y="709" width="0.2547%" height="15" fill="rgb(248,117,24)" fg:x="452927" fg:w="1807"/><text x="64.0807%" y="719.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (100 samples, 0.01%)</title><rect x="64.0937%" y="597" width="0.0141%" height="15" fill="rgb(214,185,35)" fg:x="454793" fg:w="100"/><text x="64.3437%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;clap::args::arg_builder::positional::PosBuilder&gt; (98 samples, 0.01%)</title><rect x="64.0940%" y="581" width="0.0138%" height="15" fill="rgb(236,150,34)" fg:x="454795" fg:w="98"/><text x="64.3440%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;clap::args::arg_builder::valued::Valued&gt; (88 samples, 0.01%)</title><rect x="64.0954%" y="565" width="0.0124%" height="15" fill="rgb(243,228,27)" fg:x="454805" fg:w="88"/><text x="64.3454%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;clap::map::vec_map::VecMap&lt;&amp;str&gt;&gt;&gt; (86 samples, 0.01%)</title><rect x="64.0957%" y="549" width="0.0121%" height="15" fill="rgb(245,77,44)" fg:x="454807" fg:w="86"/><text x="64.3457%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;clap::map::vec_map::VecMap&lt;&amp;str&gt;&gt; (83 samples, 0.01%)</title><rect x="64.0961%" y="533" width="0.0117%" height="15" fill="rgb(235,214,42)" fg:x="454810" fg:w="83"/><text x="64.3461%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;usize,&amp;str&gt;&gt; (82 samples, 0.01%)</title><rect x="64.0963%" y="517" width="0.0116%" height="15" fill="rgb(221,74,3)" fg:x="454811" fg:w="82"/><text x="64.3463%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (82 samples, 0.01%)</title><rect x="64.0963%" y="501" width="0.0116%" height="15" fill="rgb(206,121,29)" fg:x="454811" fg:w="82"/><text x="64.3463%" y="511.50"></text></g><g><title>clap::app::App::get_matches_from_safe (18,531 samples, 2.61%)</title><rect x="61.4970%" y="757" width="2.6116%" height="15" fill="rgb(249,131,53)" fg:x="436367" fg:w="18531"/><text x="61.7470%" y="767.50">cl..</text></g><g><title>core::ptr::drop_in_place&lt;clap::app::App&gt; (3,188 samples, 0.45%)</title><rect x="63.6592%" y="741" width="0.4493%" height="15" fill="rgb(236,170,29)" fg:x="451710" fg:w="3188"/><text x="63.9092%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;clap::app::parser::Parser&gt; (3,188 samples, 0.45%)</title><rect x="63.6592%" y="725" width="0.4493%" height="15" fill="rgb(247,96,15)" fg:x="451710" fg:w="3188"/><text x="63.9092%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;clap::map::vec_map::VecMap&lt;clap::args::arg_builder::positional::PosBuilder&gt;&gt; (142 samples, 0.02%)</title><rect x="64.0885%" y="709" width="0.0200%" height="15" fill="rgb(211,210,7)" fg:x="454756" fg:w="142"/><text x="64.3385%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;usize,clap::args::arg_builder::positional::PosBuilder&gt;&gt; (142 samples, 0.02%)</title><rect x="64.0885%" y="693" width="0.0200%" height="15" fill="rgb(240,88,50)" fg:x="454756" fg:w="142"/><text x="64.3385%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (142 samples, 0.02%)</title><rect x="64.0885%" y="677" width="0.0200%" height="15" fill="rgb(209,229,26)" fg:x="454756" fg:w="142"/><text x="64.3385%" y="687.50"></text></g><g><title>core::mem::drop (140 samples, 0.02%)</title><rect x="64.0888%" y="661" width="0.0197%" height="15" fill="rgb(210,68,23)" fg:x="454758" fg:w="140"/><text x="64.3388%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;usize,clap::args::arg_builder::positional::PosBuilder&gt;&gt; (140 samples, 0.02%)</title><rect x="64.0888%" y="645" width="0.0197%" height="15" fill="rgb(229,180,13)" fg:x="454758" fg:w="140"/><text x="64.3388%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (140 samples, 0.02%)</title><rect x="64.0888%" y="629" width="0.0197%" height="15" fill="rgb(236,53,44)" fg:x="454758" fg:w="140"/><text x="64.3388%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (106 samples, 0.01%)</title><rect x="64.0936%" y="613" width="0.0149%" height="15" fill="rgb(244,214,29)" fg:x="454792" fg:w="106"/><text x="64.3436%" y="623.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,475 samples, 0.21%)</title><rect x="64.1281%" y="741" width="0.2079%" height="15" fill="rgb(220,75,29)" fg:x="455037" fg:w="1475"/><text x="64.3781%" y="751.50"></text></g><g><title>core::ptr::read (1,079 samples, 0.15%)</title><rect x="64.1839%" y="725" width="0.1521%" height="15" fill="rgb(214,183,37)" fg:x="455433" fg:w="1079"/><text x="64.4339%" y="735.50"></text></g><g><title>alloc::str::join_generic_copy (176 samples, 0.02%)</title><rect x="64.3391%" y="597" width="0.0248%" height="15" fill="rgb(239,117,29)" fg:x="456534" fg:w="176"/><text x="64.5891%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (179 samples, 0.03%)</title><rect x="64.3388%" y="629" width="0.0252%" height="15" fill="rgb(237,171,35)" fg:x="456532" fg:w="179"/><text x="64.5888%" y="639.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (177 samples, 0.02%)</title><rect x="64.3391%" y="613" width="0.0249%" height="15" fill="rgb(229,178,53)" fg:x="456534" fg:w="177"/><text x="64.5891%" y="623.50"></text></g><g><title>&lt;rg::app::app::LONG_VERSION as core::ops::deref::Deref&gt;::deref (286 samples, 0.04%)</title><rect x="64.3360%" y="741" width="0.0403%" height="15" fill="rgb(210,102,19)" fg:x="456512" fg:w="286"/><text x="64.5860%" y="751.50"></text></g><g><title>std::sync::once::Once::call_once (286 samples, 0.04%)</title><rect x="64.3360%" y="725" width="0.0403%" height="15" fill="rgb(235,127,22)" fg:x="456512" fg:w="286"/><text x="64.5860%" y="735.50"></text></g><g><title>std::sync::once::Once::call_inner (284 samples, 0.04%)</title><rect x="64.3363%" y="709" width="0.0400%" height="15" fill="rgb(244,31,31)" fg:x="456514" fg:w="284"/><text x="64.5863%" y="719.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (284 samples, 0.04%)</title><rect x="64.3363%" y="693" width="0.0400%" height="15" fill="rgb(231,43,21)" fg:x="456514" fg:w="284"/><text x="64.5863%" y="703.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (282 samples, 0.04%)</title><rect x="64.3365%" y="677" width="0.0397%" height="15" fill="rgb(217,131,35)" fg:x="456516" fg:w="282"/><text x="64.5865%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once (277 samples, 0.04%)</title><rect x="64.3372%" y="661" width="0.0390%" height="15" fill="rgb(221,149,4)" fg:x="456521" fg:w="277"/><text x="64.5872%" y="671.50"></text></g><g><title>rg::app::long_version (277 samples, 0.04%)</title><rect x="64.3372%" y="645" width="0.0390%" height="15" fill="rgb(232,170,28)" fg:x="456521" fg:w="277"/><text x="64.5872%" y="655.50"></text></g><g><title>&lt;T as core::convert::From&lt;T&gt;&gt;::from (212 samples, 0.03%)</title><rect x="64.5271%" y="709" width="0.0299%" height="15" fill="rgb(238,56,10)" fg:x="457868" fg:w="212"/><text x="64.7771%" y="719.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (456 samples, 0.06%)</title><rect x="64.5210%" y="725" width="0.0643%" height="15" fill="rgb(235,196,14)" fg:x="457825" fg:w="456"/><text x="64.7710%" y="735.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::default::Default&gt;::default (89 samples, 0.01%)</title><rect x="64.7929%" y="661" width="0.0125%" height="15" fill="rgb(216,45,48)" fg:x="459754" fg:w="89"/><text x="65.0429%" y="671.50"></text></g><g><title>&lt;clap::args::arg_builder::base::Base as core::default::Default&gt;::default (324 samples, 0.05%)</title><rect x="64.7616%" y="677" width="0.0457%" height="15" fill="rgb(238,213,17)" fg:x="459532" fg:w="324"/><text x="65.0116%" y="687.50"></text></g><g><title>core::ptr::read (532 samples, 0.07%)</title><rect x="64.8452%" y="661" width="0.0750%" height="15" fill="rgb(212,13,2)" fg:x="460125" fg:w="532"/><text x="65.0952%" y="671.50"></text></g><g><title>core::mem::take (1,334 samples, 0.19%)</title><rect x="64.7497%" y="693" width="0.1880%" height="15" fill="rgb(240,114,20)" fg:x="459448" fg:w="1334"/><text x="64.9997%" y="703.50"></text></g><g><title>core::mem::replace (884 samples, 0.12%)</title><rect x="64.8132%" y="677" width="0.1246%" height="15" fill="rgb(228,41,40)" fg:x="459898" fg:w="884"/><text x="65.0632%" y="687.50"></text></g><g><title>core::ptr::write (125 samples, 0.02%)</title><rect x="64.9201%" y="661" width="0.0176%" height="15" fill="rgb(244,132,35)" fg:x="460657" fg:w="125"/><text x="65.1701%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;&amp;str&gt;&gt;&gt; (104 samples, 0.01%)</title><rect x="64.9592%" y="661" width="0.0147%" height="15" fill="rgb(253,189,4)" fg:x="460934" fg:w="104"/><text x="65.2092%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;clap::args::arg_builder::base::Base&gt; (223 samples, 0.03%)</title><rect x="64.9459%" y="677" width="0.0314%" height="15" fill="rgb(224,37,19)" fg:x="460840" fg:w="223"/><text x="65.1959%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;clap::args::arg_builder::valued::Valued&gt; (205 samples, 0.03%)</title><rect x="64.9826%" y="677" width="0.0289%" height="15" fill="rgb(235,223,18)" fg:x="461100" fg:w="205"/><text x="65.2326%" y="687.50"></text></g><g><title>&lt;clap::args::arg_builder::flag::FlagBuilder as core::convert::From&lt;clap::args::arg::Arg&gt;&gt;::from (2,036 samples, 0.29%)</title><rect x="64.7276%" y="709" width="0.2869%" height="15" fill="rgb(235,163,25)" fg:x="459291" fg:w="2036"/><text x="64.9776%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;clap::args::arg::Arg&gt; (545 samples, 0.08%)</title><rect x="64.9377%" y="693" width="0.0768%" height="15" fill="rgb(217,145,28)" fg:x="460782" fg:w="545"/><text x="65.1877%" y="703.50"></text></g><g><title>&lt;clap::args::arg_builder::base::Base as core::default::Default&gt;::default (91 samples, 0.01%)</title><rect x="65.0372%" y="677" width="0.0128%" height="15" fill="rgb(223,223,32)" fg:x="461488" fg:w="91"/><text x="65.2872%" y="687.50"></text></g><g><title>core::ptr::read (257 samples, 0.04%)</title><rect x="65.0711%" y="661" width="0.0362%" height="15" fill="rgb(227,189,39)" fg:x="461728" fg:w="257"/><text x="65.3211%" y="671.50"></text></g><g><title>core::mem::take (597 samples, 0.08%)</title><rect x="65.0324%" y="693" width="0.0841%" height="15" fill="rgb(248,10,22)" fg:x="461454" fg:w="597"/><text x="65.2824%" y="703.50"></text></g><g><title>core::mem::replace (419 samples, 0.06%)</title><rect x="65.0575%" y="677" width="0.0590%" height="15" fill="rgb(248,46,39)" fg:x="461632" fg:w="419"/><text x="65.3075%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;clap::args::arg_builder::valued::Valued&gt; (84 samples, 0.01%)</title><rect x="65.1284%" y="677" width="0.0118%" height="15" fill="rgb(248,113,48)" fg:x="462135" fg:w="84"/><text x="65.3784%" y="687.50"></text></g><g><title>&lt;clap::args::arg_builder::option::OptBuilder as core::convert::From&lt;clap::args::arg::Arg&gt;&gt;::from (896 samples, 0.13%)</title><rect x="65.0146%" y="709" width="0.1263%" height="15" fill="rgb(245,16,25)" fg:x="461327" fg:w="896"/><text x="65.2646%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;clap::args::arg::Arg&gt; (172 samples, 0.02%)</title><rect x="65.1166%" y="693" width="0.0242%" height="15" fill="rgb(249,152,16)" fg:x="462051" fg:w="172"/><text x="65.3666%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (100 samples, 0.01%)</title><rect x="65.2496%" y="645" width="0.0141%" height="15" fill="rgb(250,16,1)" fg:x="462995" fg:w="100"/><text x="65.4996%" y="655.50"></text></g><g><title>alloc::alloc::Global::grow_impl (95 samples, 0.01%)</title><rect x="65.2503%" y="629" width="0.0134%" height="15" fill="rgb(249,138,3)" fg:x="463000" fg:w="95"/><text x="65.5003%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (166 samples, 0.02%)</title><rect x="65.2441%" y="661" width="0.0234%" height="15" fill="rgb(227,71,41)" fg:x="462956" fg:w="166"/><text x="65.4941%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (309 samples, 0.04%)</title><rect x="65.2362%" y="677" width="0.0435%" height="15" fill="rgb(209,184,23)" fg:x="462900" fg:w="309"/><text x="65.4862%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (320 samples, 0.05%)</title><rect x="65.2355%" y="693" width="0.0451%" height="15" fill="rgb(223,215,31)" fg:x="462895" fg:w="320"/><text x="65.4855%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (147 samples, 0.02%)</title><rect x="65.2806%" y="693" width="0.0207%" height="15" fill="rgb(210,146,28)" fg:x="463215" fg:w="147"/><text x="65.5306%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (867 samples, 0.12%)</title><rect x="65.1969%" y="709" width="0.1222%" height="15" fill="rgb(209,183,41)" fg:x="462621" fg:w="867"/><text x="65.4469%" y="719.50"></text></g><g><title>core::ptr::write (126 samples, 0.02%)</title><rect x="65.3013%" y="693" width="0.0178%" height="15" fill="rgb(209,224,45)" fg:x="463362" fg:w="126"/><text x="65.5513%" y="703.50"></text></g><g><title>clap::app::parser::Parser::add_reqs (252 samples, 0.04%)</title><rect x="65.3321%" y="709" width="0.0355%" height="15" fill="rgb(224,209,51)" fg:x="463580" fg:w="252"/><text x="65.5821%" y="719.50"></text></g><g><title>clap::args::arg::Arg::is_set (161 samples, 0.02%)</title><rect x="65.3449%" y="693" width="0.0227%" height="15" fill="rgb(223,17,39)" fg:x="463671" fg:w="161"/><text x="65.5949%" y="703.50"></text></g><g><title>clap::args::arg_builder::base::Base::is_set (129 samples, 0.02%)</title><rect x="65.3494%" y="677" width="0.0182%" height="15" fill="rgb(234,204,37)" fg:x="463703" fg:w="129"/><text x="65.5994%" y="687.50"></text></g><g><title>clap::args::settings::ArgFlags::is_set (91 samples, 0.01%)</title><rect x="65.3548%" y="661" width="0.0128%" height="15" fill="rgb(236,120,5)" fg:x="463741" fg:w="91"/><text x="65.6048%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (293 samples, 0.04%)</title><rect x="65.4648%" y="677" width="0.0413%" height="15" fill="rgb(248,97,27)" fg:x="464522" fg:w="293"/><text x="65.7148%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (170 samples, 0.02%)</title><rect x="65.4822%" y="661" width="0.0240%" height="15" fill="rgb(240,66,17)" fg:x="464645" fg:w="170"/><text x="65.7322%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (72 samples, 0.01%)</title><rect x="65.4960%" y="645" width="0.0101%" height="15" fill="rgb(210,79,3)" fg:x="464743" fg:w="72"/><text x="65.7460%" y="655.50"></text></g><g><title>core::ptr::slice_from_raw_parts (218 samples, 0.03%)</title><rect x="65.5192%" y="661" width="0.0307%" height="15" fill="rgb(214,176,27)" fg:x="464908" fg:w="218"/><text x="65.7692%" y="671.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (82 samples, 0.01%)</title><rect x="65.5384%" y="645" width="0.0116%" height="15" fill="rgb(235,185,3)" fg:x="465044" fg:w="82"/><text x="65.7884%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (763 samples, 0.11%)</title><rect x="65.4479%" y="693" width="0.1075%" height="15" fill="rgb(227,24,12)" fg:x="464402" fg:w="763"/><text x="65.6979%" y="703.50"></text></g><g><title>core::slice::raw::from_raw_parts (350 samples, 0.05%)</title><rect x="65.5061%" y="677" width="0.0493%" height="15" fill="rgb(252,169,48)" fg:x="464815" fg:w="350"/><text x="65.7561%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (79 samples, 0.01%)</title><rect x="65.6101%" y="645" width="0.0111%" height="15" fill="rgb(212,65,1)" fg:x="465553" fg:w="79"/><text x="65.8601%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (306 samples, 0.04%)</title><rect x="65.6015%" y="661" width="0.0431%" height="15" fill="rgb(242,39,24)" fg:x="465492" fg:w="306"/><text x="65.8515%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (166 samples, 0.02%)</title><rect x="65.6213%" y="645" width="0.0234%" height="15" fill="rgb(249,32,23)" fg:x="465632" fg:w="166"/><text x="65.8713%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (87 samples, 0.01%)</title><rect x="65.6324%" y="629" width="0.0123%" height="15" fill="rgb(251,195,23)" fg:x="465711" fg:w="87"/><text x="65.8824%" y="639.50"></text></g><g><title>core::ptr::slice_from_raw_parts (192 samples, 0.03%)</title><rect x="65.6578%" y="645" width="0.0271%" height="15" fill="rgb(236,174,8)" fg:x="465891" fg:w="192"/><text x="65.9078%" y="655.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (76 samples, 0.01%)</title><rect x="65.6741%" y="629" width="0.0107%" height="15" fill="rgb(220,197,8)" fg:x="466007" fg:w="76"/><text x="65.9241%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (731 samples, 0.10%)</title><rect x="65.5867%" y="677" width="0.1030%" height="15" fill="rgb(240,108,37)" fg:x="465387" fg:w="731"/><text x="65.8367%" y="687.50"></text></g><g><title>core::slice::raw::from_raw_parts (320 samples, 0.05%)</title><rect x="65.6446%" y="661" width="0.0451%" height="15" fill="rgb(232,176,24)" fg:x="465798" fg:w="320"/><text x="65.8946%" y="671.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (3,193 samples, 0.45%)</title><rect x="67.1257%" y="597" width="0.4500%" height="15" fill="rgb(243,35,29)" fg:x="476307" fg:w="3193"/><text x="67.3757%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (5,338 samples, 0.75%)</title><rect x="69.4049%" y="581" width="0.7523%" height="15" fill="rgb(210,37,18)" fg:x="492480" fg:w="5338"/><text x="69.6549%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (2,644 samples, 0.37%)</title><rect x="69.7846%" y="565" width="0.3726%" height="15" fill="rgb(224,184,40)" fg:x="495174" fg:w="2644"/><text x="70.0346%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (5,555 samples, 0.78%)</title><rect x="70.1572%" y="581" width="0.7829%" height="15" fill="rgb(236,39,29)" fg:x="497818" fg:w="5555"/><text x="70.4072%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (2,752 samples, 0.39%)</title><rect x="70.5522%" y="565" width="0.3878%" height="15" fill="rgb(232,48,39)" fg:x="500621" fg:w="2752"/><text x="70.8022%" y="575.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (4,202 samples, 0.59%)</title><rect x="70.9401%" y="581" width="0.5922%" height="15" fill="rgb(236,34,42)" fg:x="503373" fg:w="4202"/><text x="71.1901%" y="591.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (29,237 samples, 4.12%)</title><rect x="67.5806%" y="597" width="4.1204%" height="15" fill="rgb(243,106,37)" fg:x="479535" fg:w="29237"/><text x="67.8306%" y="607.50">&lt;cor..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1,197 samples, 0.17%)</title><rect x="71.5323%" y="581" width="0.1687%" height="15" fill="rgb(218,96,6)" fg:x="507575" fg:w="1197"/><text x="71.7823%" y="591.50"></text></g><g><title>clap::app::parser::Parser::contains_long::{{closure}} (5,945 samples, 0.84%)</title><rect x="72.9394%" y="581" width="0.8378%" height="15" fill="rgb(235,130,12)" fg:x="517560" fg:w="5945"/><text x="73.1894%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (3,411 samples, 0.48%)</title><rect x="73.2966%" y="565" width="0.4807%" height="15" fill="rgb(231,95,0)" fg:x="520094" fg:w="3411"/><text x="73.5466%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (3,244 samples, 0.46%)</title><rect x="75.1529%" y="549" width="0.4572%" height="15" fill="rgb(228,12,23)" fg:x="533266" fg:w="3244"/><text x="75.4029%" y="559.50"></text></g><g><title>clap::app::parser::Parser::contains_long::{{closure}} (9,696 samples, 1.37%)</title><rect x="74.6606%" y="565" width="1.3665%" height="15" fill="rgb(216,12,1)" fg:x="529773" fg:w="9696"/><text x="74.9106%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (2,959 samples, 0.42%)</title><rect x="75.6100%" y="549" width="0.4170%" height="15" fill="rgb(219,59,3)" fg:x="536510" fg:w="2959"/><text x="75.8600%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any::check::{{closure}} (7,165 samples, 1.01%)</title><rect x="76.0271%" y="565" width="1.0098%" height="15" fill="rgb(215,208,46)" fg:x="539469" fg:w="7165"/><text x="76.2771%" y="575.50"></text></g><g><title>clap::app::parser::Parser::contains_long::{{closure}} (6,163 samples, 0.87%)</title><rect x="76.1683%" y="549" width="0.8685%" height="15" fill="rgb(254,224,29)" fg:x="540471" fg:w="6163"/><text x="76.4183%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5,424 samples, 0.76%)</title><rect x="76.2724%" y="533" width="0.7644%" height="15" fill="rgb(232,14,29)" fg:x="541210" fg:w="5424"/><text x="76.5224%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4,734 samples, 0.67%)</title><rect x="76.3697%" y="517" width="0.6672%" height="15" fill="rgb(208,45,52)" fg:x="541900" fg:w="4734"/><text x="76.6197%" y="527.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3,847 samples, 0.54%)</title><rect x="76.4947%" y="501" width="0.5422%" height="15" fill="rgb(234,191,28)" fg:x="542787" fg:w="3847"/><text x="76.7447%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2,335 samples, 0.33%)</title><rect x="76.7077%" y="485" width="0.3291%" height="15" fill="rgb(244,67,43)" fg:x="544299" fg:w="2335"/><text x="76.9577%" y="495.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1,579 samples, 0.22%)</title><rect x="76.8143%" y="469" width="0.2225%" height="15" fill="rgb(236,189,24)" fg:x="545055" fg:w="1579"/><text x="77.0643%" y="479.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,004 samples, 0.14%)</title><rect x="76.8953%" y="453" width="0.1415%" height="15" fill="rgb(239,214,33)" fg:x="545630" fg:w="1004"/><text x="77.1453%" y="463.50"></text></g><g><title>core::mem::size_of_val (97 samples, 0.01%)</title><rect x="80.5055%" y="421" width="0.0137%" height="15" fill="rgb(226,176,41)" fg:x="571247" fg:w="97"/><text x="80.7555%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (104,773 samples, 14.77%)</title><rect x="65.7697%" y="629" width="14.7656%" height="15" fill="rgb(248,47,8)" fg:x="466685" fg:w="104773"/><text x="66.0197%" y="639.50">&lt;core::iter::adapters::..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (104,505 samples, 14.73%)</title><rect x="65.8074%" y="613" width="14.7278%" height="15" fill="rgb(218,81,44)" fg:x="466953" fg:w="104505"/><text x="66.0574%" y="623.50">core::iter::traits::it..</text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (62,686 samples, 8.83%)</title><rect x="71.7009%" y="597" width="8.8343%" height="15" fill="rgb(213,98,6)" fg:x="508772" fg:w="62686"/><text x="71.9509%" y="607.50">core::iter::..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (47,953 samples, 6.76%)</title><rect x="73.7773%" y="581" width="6.7580%" height="15" fill="rgb(222,85,22)" fg:x="523505" fg:w="47953"/><text x="74.0273%" y="591.50">core::ite..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (24,824 samples, 3.50%)</title><rect x="77.0368%" y="565" width="3.4984%" height="15" fill="rgb(239,46,39)" fg:x="546634" fg:w="24824"/><text x="77.2868%" y="575.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::any::check::{{closure}} (22,727 samples, 3.20%)</title><rect x="77.3323%" y="549" width="3.2029%" height="15" fill="rgb(237,12,29)" fg:x="548731" fg:w="22727"/><text x="77.5823%" y="559.50">cor..</text></g><g><title>clap::app::parser::Parser::contains_long::{{closure}} (19,599 samples, 2.76%)</title><rect x="77.7732%" y="533" width="2.7621%" height="15" fill="rgb(214,77,8)" fg:x="551859" fg:w="19599"/><text x="78.0232%" y="543.50">cl..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (17,131 samples, 2.41%)</title><rect x="78.1210%" y="517" width="2.4143%" height="15" fill="rgb(217,168,37)" fg:x="554327" fg:w="17131"/><text x="78.3710%" y="527.50">co..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (15,045 samples, 2.12%)</title><rect x="78.4150%" y="501" width="2.1203%" height="15" fill="rgb(221,217,23)" fg:x="556413" fg:w="15045"/><text x="78.6650%" y="511.50">c..</text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (12,328 samples, 1.74%)</title><rect x="78.7979%" y="485" width="1.7374%" height="15" fill="rgb(243,229,36)" fg:x="559130" fg:w="12328"/><text x="79.0479%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (7,581 samples, 1.07%)</title><rect x="79.4669%" y="469" width="1.0684%" height="15" fill="rgb(251,163,40)" fg:x="563877" fg:w="7581"/><text x="79.7169%" y="479.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (5,211 samples, 0.73%)</title><rect x="79.8009%" y="453" width="0.7344%" height="15" fill="rgb(237,222,12)" fg:x="566247" fg:w="5211"/><text x="80.0509%" y="463.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3,376 samples, 0.48%)</title><rect x="80.0595%" y="437" width="0.4758%" height="15" fill="rgb(248,132,6)" fg:x="568082" fg:w="3376"/><text x="80.3095%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (114 samples, 0.02%)</title><rect x="80.5192%" y="421" width="0.0161%" height="15" fill="rgb(227,167,50)" fg:x="571344" fg:w="114"/><text x="80.7692%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (105,002 samples, 14.80%)</title><rect x="65.7451%" y="645" width="14.7979%" height="15" fill="rgb(242,84,37)" fg:x="466511" fg:w="105002"/><text x="65.9951%" y="655.50">&lt;core::iter::adapters::..</text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (109 samples, 0.02%)</title><rect x="80.5430%" y="645" width="0.0154%" height="15" fill="rgb(212,4,50)" fg:x="571513" fg:w="109"/><text x="80.7930%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (105,441 samples, 14.86%)</title><rect x="65.7006%" y="661" width="14.8597%" height="15" fill="rgb(230,228,32)" fg:x="466195" fg:w="105441"/><text x="65.9506%" y="671.50">&lt;core::iter::adapters::..</text></g><g><title>core::iter::traits::iterator::Iterator::any (105,596 samples, 14.88%)</title><rect x="65.6897%" y="677" width="14.8816%" height="15" fill="rgb(248,217,23)" fg:x="466118" fg:w="105596"/><text x="65.9397%" y="687.50">core::iter::traits::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::chain (171 samples, 0.02%)</title><rect x="80.5713%" y="677" width="0.0241%" height="15" fill="rgb(238,197,32)" fg:x="571714" fg:w="171"/><text x="80.8213%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::filter (126 samples, 0.02%)</title><rect x="80.5954%" y="677" width="0.0178%" height="15" fill="rgb(236,106,1)" fg:x="571885" fg:w="126"/><text x="80.8454%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (127 samples, 0.02%)</title><rect x="80.6132%" y="677" width="0.0179%" height="15" fill="rgb(219,228,13)" fg:x="572011" fg:w="127"/><text x="80.8632%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (153 samples, 0.02%)</title><rect x="80.6798%" y="645" width="0.0216%" height="15" fill="rgb(238,30,35)" fg:x="572484" fg:w="153"/><text x="80.9298%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (77 samples, 0.01%)</title><rect x="80.6906%" y="629" width="0.0109%" height="15" fill="rgb(236,70,23)" fg:x="572560" fg:w="77"/><text x="80.9406%" y="639.50"></text></g><g><title>clap::app::parser::Parser::contains_long (107,532 samples, 15.15%)</title><rect x="65.5554%" y="693" width="15.1544%" height="15" fill="rgb(249,104,48)" fg:x="465165" fg:w="107532"/><text x="65.8054%" y="703.50">clap::app::parser::Pars..</text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (559 samples, 0.08%)</title><rect x="80.6311%" y="677" width="0.0788%" height="15" fill="rgb(254,117,50)" fg:x="572138" fg:w="559"/><text x="80.8811%" y="687.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (477 samples, 0.07%)</title><rect x="80.6426%" y="661" width="0.0672%" height="15" fill="rgb(223,152,4)" fg:x="572220" fg:w="477"/><text x="80.8926%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (87 samples, 0.01%)</title><rect x="80.7220%" y="661" width="0.0123%" height="15" fill="rgb(245,6,2)" fg:x="572783" fg:w="87"/><text x="80.9720%" y="671.50"></text></g><g><title>core::ptr::slice_from_raw_parts (71 samples, 0.01%)</title><rect x="80.7388%" y="645" width="0.0100%" height="15" fill="rgb(249,150,24)" fg:x="572902" fg:w="71"/><text x="80.9888%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (223 samples, 0.03%)</title><rect x="80.7178%" y="677" width="0.0314%" height="15" fill="rgb(228,185,42)" fg:x="572753" fg:w="223"/><text x="80.9678%" y="687.50"></text></g><g><title>core::slice::raw::from_raw_parts (106 samples, 0.01%)</title><rect x="80.7342%" y="661" width="0.0149%" height="15" fill="rgb(226,39,33)" fg:x="572870" fg:w="106"/><text x="80.9842%" y="671.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (930 samples, 0.13%)</title><rect x="81.1476%" y="597" width="0.1311%" height="15" fill="rgb(221,166,19)" fg:x="575803" fg:w="930"/><text x="81.3976%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1,567 samples, 0.22%)</title><rect x="81.8104%" y="581" width="0.2208%" height="15" fill="rgb(209,109,2)" fg:x="580506" fg:w="1567"/><text x="82.0604%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (803 samples, 0.11%)</title><rect x="81.9180%" y="565" width="0.1132%" height="15" fill="rgb(252,216,26)" fg:x="581270" fg:w="803"/><text x="82.1680%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1,533 samples, 0.22%)</title><rect x="82.0312%" y="581" width="0.2160%" height="15" fill="rgb(227,173,36)" fg:x="582073" fg:w="1533"/><text x="82.2812%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (771 samples, 0.11%)</title><rect x="82.1386%" y="565" width="0.1087%" height="15" fill="rgb(209,90,7)" fg:x="582835" fg:w="771"/><text x="82.3886%" y="575.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1,196 samples, 0.17%)</title><rect x="82.2473%" y="581" width="0.1686%" height="15" fill="rgb(250,194,11)" fg:x="583606" fg:w="1196"/><text x="82.4973%" y="591.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,382 samples, 1.18%)</title><rect x="81.2809%" y="597" width="1.1813%" height="15" fill="rgb(220,72,50)" fg:x="576749" fg:w="8382"/><text x="81.5309%" y="607.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (329 samples, 0.05%)</title><rect x="82.4158%" y="581" width="0.0464%" height="15" fill="rgb(222,106,48)" fg:x="584802" fg:w="329"/><text x="82.6658%" y="591.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::from_output (314 samples, 0.04%)</title><rect x="82.8311%" y="581" width="0.0443%" height="15" fill="rgb(216,220,45)" fg:x="587749" fg:w="314"/><text x="83.0811%" y="591.50"></text></g><g><title>clap::app::parser::Parser::contains_short::{{closure}} (1,810 samples, 0.26%)</title><rect x="82.8754%" y="581" width="0.2551%" height="15" fill="rgb(234,112,18)" fg:x="588063" fg:w="1810"/><text x="83.1254%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1,013 samples, 0.14%)</title><rect x="82.9877%" y="565" width="0.1428%" height="15" fill="rgb(206,179,9)" fg:x="588860" fg:w="1013"/><text x="83.2377%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (265 samples, 0.04%)</title><rect x="83.2381%" y="549" width="0.0373%" height="15" fill="rgb(215,115,40)" fg:x="590637" fg:w="265"/><text x="83.4881%" y="559.50"></text></g><g><title>clap::app::parser::Parser::contains_short::{{closure}} (768 samples, 0.11%)</title><rect x="83.1981%" y="565" width="0.1082%" height="15" fill="rgb(222,69,34)" fg:x="590353" fg:w="768"/><text x="83.4481%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (219 samples, 0.03%)</title><rect x="83.2755%" y="549" width="0.0309%" height="15" fill="rgb(209,161,10)" fg:x="590902" fg:w="219"/><text x="83.5255%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any::check::{{closure}} (330 samples, 0.05%)</title><rect x="83.3063%" y="565" width="0.0465%" height="15" fill="rgb(217,6,38)" fg:x="591121" fg:w="330"/><text x="83.5563%" y="575.50"></text></g><g><title>clap::app::parser::Parser::contains_short::{{closure}} (236 samples, 0.03%)</title><rect x="83.3196%" y="549" width="0.0333%" height="15" fill="rgb(229,229,48)" fg:x="591215" fg:w="236"/><text x="83.5696%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (146 samples, 0.02%)</title><rect x="83.3323%" y="533" width="0.0206%" height="15" fill="rgb(225,21,28)" fg:x="591305" fg:w="146"/><text x="83.5823%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18,995 samples, 2.68%)</title><rect x="80.7700%" y="629" width="2.6770%" height="15" fill="rgb(206,33,13)" fg:x="573124" fg:w="18995"/><text x="81.0200%" y="639.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (18,918 samples, 2.67%)</title><rect x="80.7809%" y="613" width="2.6661%" height="15" fill="rgb(242,178,17)" fg:x="573201" fg:w="18918"/><text x="81.0309%" y="623.50">co..</text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (6,988 samples, 0.98%)</title><rect x="82.4622%" y="597" width="0.9848%" height="15" fill="rgb(220,162,5)" fg:x="585131" fg:w="6988"/><text x="82.7122%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2,246 samples, 0.32%)</title><rect x="83.1305%" y="581" width="0.3165%" height="15" fill="rgb(210,33,43)" fg:x="589873" fg:w="2246"/><text x="83.3805%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (668 samples, 0.09%)</title><rect x="83.3529%" y="565" width="0.0941%" height="15" fill="rgb(216,116,54)" fg:x="591451" fg:w="668"/><text x="83.6029%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any::check::{{closure}} (554 samples, 0.08%)</title><rect x="83.3689%" y="549" width="0.0781%" height="15" fill="rgb(249,92,24)" fg:x="591565" fg:w="554"/><text x="83.6189%" y="559.50"></text></g><g><title>clap::app::parser::Parser::contains_short::{{closure}} (359 samples, 0.05%)</title><rect x="83.3964%" y="533" width="0.0506%" height="15" fill="rgb(231,189,14)" fg:x="591760" fg:w="359"/><text x="83.6464%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (213 samples, 0.03%)</title><rect x="83.4170%" y="517" width="0.0300%" height="15" fill="rgb(230,8,41)" fg:x="591906" fg:w="213"/><text x="83.6670%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for char&gt;::eq (92 samples, 0.01%)</title><rect x="83.4340%" y="501" width="0.0130%" height="15" fill="rgb(249,7,27)" fg:x="592027" fg:w="92"/><text x="83.6840%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (19,077 samples, 2.69%)</title><rect x="80.7620%" y="645" width="2.6885%" height="15" fill="rgb(232,86,5)" fg:x="573067" fg:w="19077"/><text x="81.0120%" y="655.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (19,187 samples, 2.70%)</title><rect x="80.7521%" y="661" width="2.7040%" height="15" fill="rgb(224,175,18)" fg:x="572997" fg:w="19187"/><text x="81.0021%" y="671.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::any (19,237 samples, 2.71%)</title><rect x="80.7492%" y="677" width="2.7111%" height="15" fill="rgb(220,129,12)" fg:x="572976" fg:w="19237"/><text x="80.9992%" y="687.50">co..</text></g><g><title>clap::app::parser::Parser::contains_short (19,735 samples, 2.78%)</title><rect x="80.7099%" y="693" width="2.7812%" height="15" fill="rgb(210,19,36)" fg:x="572697" fg:w="19735"/><text x="80.9599%" y="703.50">cl..</text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (119 samples, 0.02%)</title><rect x="83.4743%" y="677" width="0.0168%" height="15" fill="rgb(219,96,14)" fg:x="592313" fg:w="119"/><text x="83.7243%" y="687.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (99 samples, 0.01%)</title><rect x="83.4772%" y="661" width="0.0140%" height="15" fill="rgb(249,106,1)" fg:x="592333" fg:w="99"/><text x="83.7272%" y="671.50"></text></g><g><title>clap::args::arg::Arg::is_set (172 samples, 0.02%)</title><rect x="83.4911%" y="693" width="0.0242%" height="15" fill="rgb(249,155,20)" fg:x="592432" fg:w="172"/><text x="83.7411%" y="703.50"></text></g><g><title>clap::args::arg_builder::base::Base::is_set (139 samples, 0.02%)</title><rect x="83.4958%" y="677" width="0.0196%" height="15" fill="rgb(244,168,9)" fg:x="592465" fg:w="139"/><text x="83.7458%" y="687.50"></text></g><g><title>clap::args::settings::ArgFlags::is_set (97 samples, 0.01%)</title><rect x="83.5017%" y="661" width="0.0137%" height="15" fill="rgb(216,23,50)" fg:x="592507" fg:w="97"/><text x="83.7517%" y="671.50"></text></g><g><title>clap::args::arg_builder::base::Base::is_set (171 samples, 0.02%)</title><rect x="83.5153%" y="693" width="0.0241%" height="15" fill="rgb(224,219,20)" fg:x="592604" fg:w="171"/><text x="83.7653%" y="703.50"></text></g><g><title>clap::args::settings::ArgFlags::is_set (129 samples, 0.02%)</title><rect x="83.5213%" y="677" width="0.0182%" height="15" fill="rgb(222,156,15)" fg:x="592646" fg:w="129"/><text x="83.7713%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (161 samples, 0.02%)</title><rect x="83.6017%" y="629" width="0.0227%" height="15" fill="rgb(231,97,17)" fg:x="593217" fg:w="161"/><text x="83.8517%" y="639.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (142 samples, 0.02%)</title><rect x="83.7654%" y="581" width="0.0200%" height="15" fill="rgb(218,70,48)" fg:x="594378" fg:w="142"/><text x="84.0154%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (220 samples, 0.03%)</title><rect x="83.8486%" y="565" width="0.0310%" height="15" fill="rgb(212,196,52)" fg:x="594969" fg:w="220"/><text x="84.0986%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (99 samples, 0.01%)</title><rect x="83.8657%" y="549" width="0.0140%" height="15" fill="rgb(243,203,18)" fg:x="595090" fg:w="99"/><text x="84.1157%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (218 samples, 0.03%)</title><rect x="83.8796%" y="565" width="0.0307%" height="15" fill="rgb(252,125,41)" fg:x="595189" fg:w="218"/><text x="84.1296%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (101 samples, 0.01%)</title><rect x="83.8961%" y="549" width="0.0142%" height="15" fill="rgb(223,180,33)" fg:x="595306" fg:w="101"/><text x="84.1461%" y="559.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (159 samples, 0.02%)</title><rect x="83.9104%" y="565" width="0.0224%" height="15" fill="rgb(254,159,46)" fg:x="595407" fg:w="159"/><text x="84.1604%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,627 samples, 0.23%)</title><rect x="83.7097%" y="597" width="0.2293%" height="15" fill="rgb(254,38,10)" fg:x="593983" fg:w="1627"/><text x="83.9597%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,090 samples, 0.15%)</title><rect x="83.7854%" y="581" width="0.1536%" height="15" fill="rgb(208,217,32)" fg:x="594520" fg:w="1090"/><text x="84.0354%" y="591.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::into_leaf (77 samples, 0.01%)</title><rect x="83.9556%" y="581" width="0.0109%" height="15" fill="rgb(221,120,13)" fg:x="595728" fg:w="77"/><text x="84.2056%" y="591.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (521 samples, 0.07%)</title><rect x="83.9433%" y="597" width="0.0734%" height="15" fill="rgb(246,54,52)" fg:x="595641" fg:w="521"/><text x="84.1933%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (344 samples, 0.05%)</title><rect x="83.9683%" y="581" width="0.0485%" height="15" fill="rgb(242,34,25)" fg:x="595818" fg:w="344"/><text x="84.2183%" y="591.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (301 samples, 0.04%)</title><rect x="83.9744%" y="565" width="0.0424%" height="15" fill="rgb(247,209,9)" fg:x="595861" fg:w="301"/><text x="84.2244%" y="575.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (252 samples, 0.04%)</title><rect x="83.9813%" y="549" width="0.0355%" height="15" fill="rgb(228,71,26)" fg:x="595910" fg:w="252"/><text x="84.2313%" y="559.50"></text></g><g><title>core::ptr::slice_from_raw_parts (107 samples, 0.02%)</title><rect x="84.0017%" y="533" width="0.0151%" height="15" fill="rgb(222,145,49)" fg:x="596055" fg:w="107"/><text x="84.2517%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (130 samples, 0.02%)</title><rect x="84.0168%" y="597" width="0.0183%" height="15" fill="rgb(218,121,17)" fg:x="596162" fg:w="130"/><text x="84.2668%" y="607.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (255 samples, 0.04%)</title><rect x="84.0613%" y="565" width="0.0359%" height="15" fill="rgb(244,50,7)" fg:x="596478" fg:w="255"/><text x="84.3113%" y="575.50"></text></g><g><title>core::ptr::slice_from_raw_parts (114 samples, 0.02%)</title><rect x="84.0812%" y="549" width="0.0161%" height="15" fill="rgb(246,229,37)" fg:x="596619" fg:w="114"/><text x="84.3312%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (450 samples, 0.06%)</title><rect x="84.0412%" y="597" width="0.0634%" height="15" fill="rgb(225,18,5)" fg:x="596335" fg:w="450"/><text x="84.2912%" y="607.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (410 samples, 0.06%)</title><rect x="84.0468%" y="581" width="0.0578%" height="15" fill="rgb(213,204,8)" fg:x="596375" fg:w="410"/><text x="84.2968%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (77 samples, 0.01%)</title><rect x="84.1260%" y="565" width="0.0109%" height="15" fill="rgb(238,103,6)" fg:x="596937" fg:w="77"/><text x="84.3760%" y="575.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (4,022 samples, 0.57%)</title><rect x="83.5761%" y="645" width="0.5668%" height="15" fill="rgb(222,25,35)" fg:x="593035" fg:w="4022"/><text x="83.8261%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (3,679 samples, 0.52%)</title><rect x="83.6244%" y="629" width="0.5185%" height="15" fill="rgb(213,203,35)" fg:x="593378" fg:w="3679"/><text x="83.8744%" y="639.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (3,535 samples, 0.50%)</title><rect x="83.6447%" y="613" width="0.4982%" height="15" fill="rgb(221,79,53)" fg:x="593522" fg:w="3535"/><text x="83.8947%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (272 samples, 0.04%)</title><rect x="84.1046%" y="597" width="0.0383%" height="15" fill="rgb(243,200,35)" fg:x="596785" fg:w="272"/><text x="84.3546%" y="607.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (249 samples, 0.04%)</title><rect x="84.1078%" y="581" width="0.0351%" height="15" fill="rgb(248,60,25)" fg:x="596808" fg:w="249"/><text x="84.3578%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (4,233 samples, 0.60%)</title><rect x="83.5510%" y="661" width="0.5966%" height="15" fill="rgb(227,53,46)" fg:x="592857" fg:w="4233"/><text x="83.8010%" y="671.50"></text></g><g><title>clap::map::vec_map::VecMap&lt;V&gt;::contains_key (4,361 samples, 0.61%)</title><rect x="83.5394%" y="693" width="0.6146%" height="15" fill="rgb(216,120,32)" fg:x="592775" fg:w="4361"/><text x="83.7894%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (4,323 samples, 0.61%)</title><rect x="83.5448%" y="677" width="0.6092%" height="15" fill="rgb(220,134,1)" fg:x="592813" fg:w="4323"/><text x="83.7948%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (139 samples, 0.02%)</title><rect x="84.2162%" y="645" width="0.0196%" height="15" fill="rgb(237,168,5)" fg:x="597577" fg:w="139"/><text x="84.4662%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (108 samples, 0.02%)</title><rect x="84.2206%" y="629" width="0.0152%" height="15" fill="rgb(231,100,33)" fg:x="597608" fg:w="108"/><text x="84.4706%" y="639.50"></text></g><g><title>clap::map::vec_map::VecMap&lt;V&gt;::values (566 samples, 0.08%)</title><rect x="84.1609%" y="693" width="0.0798%" height="15" fill="rgb(236,177,47)" fg:x="597185" fg:w="566"/><text x="84.4109%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::values (534 samples, 0.08%)</title><rect x="84.1655%" y="677" width="0.0753%" height="15" fill="rgb(235,7,49)" fg:x="597217" fg:w="534"/><text x="84.4155%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (418 samples, 0.06%)</title><rect x="84.1818%" y="661" width="0.0589%" height="15" fill="rgb(232,119,22)" fg:x="597333" fg:w="418"/><text x="84.4318%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_leaf_ptr (87 samples, 0.01%)</title><rect x="84.9879%" y="469" width="0.0123%" height="15" fill="rgb(254,73,53)" fg:x="603053" fg:w="87"/><text x="85.2379%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (462 samples, 0.07%)</title><rect x="84.9410%" y="501" width="0.0651%" height="15" fill="rgb(251,35,20)" fg:x="602720" fg:w="462"/><text x="85.1910%" y="511.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (202 samples, 0.03%)</title><rect x="84.9776%" y="485" width="0.0285%" height="15" fill="rgb(241,119,20)" fg:x="602980" fg:w="202"/><text x="85.2276%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (1,021 samples, 0.14%)</title><rect x="84.8965%" y="517" width="0.1439%" height="15" fill="rgb(207,102,14)" fg:x="602404" fg:w="1021"/><text x="85.1465%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::forget_node_type (243 samples, 0.03%)</title><rect x="85.0061%" y="501" width="0.0342%" height="15" fill="rgb(248,201,50)" fg:x="603182" fg:w="243"/><text x="85.2561%" y="511.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;::forget_type (74 samples, 0.01%)</title><rect x="85.0299%" y="485" width="0.0104%" height="15" fill="rgb(222,185,44)" fg:x="603351" fg:w="74"/><text x="85.2799%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::right_edge (129 samples, 0.02%)</title><rect x="85.0699%" y="501" width="0.0182%" height="15" fill="rgb(218,107,18)" fg:x="603635" fg:w="129"/><text x="85.3199%" y="511.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (681 samples, 0.10%)</title><rect x="85.0403%" y="517" width="0.0960%" height="15" fill="rgb(237,177,39)" fg:x="603425" fg:w="681"/><text x="85.2903%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (342 samples, 0.05%)</title><rect x="85.0881%" y="501" width="0.0482%" height="15" fill="rgb(246,69,6)" fg:x="603764" fg:w="342"/><text x="85.3381%" y="511.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (120 samples, 0.02%)</title><rect x="85.1194%" y="485" width="0.0169%" height="15" fill="rgb(234,208,37)" fg:x="603986" fg:w="120"/><text x="85.3694%" y="495.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::into_leaf (151 samples, 0.02%)</title><rect x="85.1676%" y="501" width="0.0213%" height="15" fill="rgb(225,4,6)" fg:x="604328" fg:w="151"/><text x="85.4176%" y="511.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_leaf_ptr (76 samples, 0.01%)</title><rect x="85.1782%" y="485" width="0.0107%" height="15" fill="rgb(233,45,0)" fg:x="604403" fg:w="76"/><text x="85.4282%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (923 samples, 0.13%)</title><rect x="85.1363%" y="517" width="0.1301%" height="15" fill="rgb(226,136,5)" fg:x="604106" fg:w="923"/><text x="85.3863%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (550 samples, 0.08%)</title><rect x="85.1889%" y="501" width="0.0775%" height="15" fill="rgb(211,91,47)" fg:x="604479" fg:w="550"/><text x="85.4389%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (387 samples, 0.05%)</title><rect x="85.2119%" y="485" width="0.0545%" height="15" fill="rgb(242,88,51)" fg:x="604642" fg:w="387"/><text x="85.4619%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::as_ptr (75 samples, 0.01%)</title><rect x="85.2558%" y="469" width="0.0106%" height="15" fill="rgb(230,91,28)" fg:x="604954" fg:w="75"/><text x="85.5058%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (122 samples, 0.02%)</title><rect x="85.2664%" y="517" width="0.0172%" height="15" fill="rgb(254,186,29)" fg:x="605029" fg:w="122"/><text x="85.5164%" y="527.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::{{closure}} (3,313 samples, 0.47%)</title><rect x="84.8459%" y="533" width="0.4669%" height="15" fill="rgb(238,6,4)" fg:x="602045" fg:w="3313"/><text x="85.0959%" y="543.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::ok (207 samples, 0.03%)</title><rect x="85.2836%" y="517" width="0.0292%" height="15" fill="rgb(221,151,16)" fg:x="605151" fg:w="207"/><text x="85.5336%" y="527.50"></text></g><g><title>core::ptr::read (193 samples, 0.03%)</title><rect x="85.3167%" y="533" width="0.0272%" height="15" fill="rgb(251,143,52)" fg:x="605386" fg:w="193"/><text x="85.5667%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (3,985 samples, 0.56%)</title><rect x="84.7889%" y="565" width="0.5616%" height="15" fill="rgb(206,90,15)" fg:x="601641" fg:w="3985"/><text x="85.0389%" y="575.50"></text></g><g><title>alloc::collections::btree::mem::replace (3,901 samples, 0.55%)</title><rect x="84.8008%" y="549" width="0.5498%" height="15" fill="rgb(218,35,8)" fg:x="601725" fg:w="3901"/><text x="85.0508%" y="559.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::first_leaf_edge (211 samples, 0.03%)</title><rect x="85.3984%" y="549" width="0.0297%" height="15" fill="rgb(239,215,6)" fg:x="605966" fg:w="211"/><text x="85.6484%" y="559.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::init_front (628 samples, 0.09%)</title><rect x="85.3505%" y="565" width="0.0885%" height="15" fill="rgb(245,116,39)" fg:x="605626" fg:w="628"/><text x="85.6005%" y="575.50"></text></g><g><title>core::ptr::read (77 samples, 0.01%)</title><rect x="85.4282%" y="549" width="0.0109%" height="15" fill="rgb(242,65,28)" fg:x="606177" fg:w="77"/><text x="85.6782%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,986 samples, 0.70%)</title><rect x="84.7476%" y="597" width="0.7027%" height="15" fill="rgb(252,132,53)" fg:x="601348" fg:w="4986"/><text x="84.9976%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (4,816 samples, 0.68%)</title><rect x="84.7716%" y="581" width="0.6787%" height="15" fill="rgb(224,159,50)" fg:x="601518" fg:w="4816"/><text x="85.0216%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (80 samples, 0.01%)</title><rect x="85.4390%" y="565" width="0.0113%" height="15" fill="rgb(224,93,4)" fg:x="606254" fg:w="80"/><text x="85.6890%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5,442 samples, 0.77%)</title><rect x="84.7290%" y="613" width="0.7669%" height="15" fill="rgb(208,81,34)" fg:x="601216" fg:w="5442"/><text x="84.9790%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (324 samples, 0.05%)</title><rect x="85.4503%" y="597" width="0.0457%" height="15" fill="rgb(233,92,54)" fg:x="606334" fg:w="324"/><text x="85.7003%" y="607.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (977 samples, 0.14%)</title><rect x="85.4960%" y="613" width="0.1377%" height="15" fill="rgb(237,21,14)" fg:x="606658" fg:w="977"/><text x="85.7460%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1,367 samples, 0.19%)</title><rect x="86.0955%" y="597" width="0.1927%" height="15" fill="rgb(249,128,51)" fg:x="610912" fg:w="1367"/><text x="86.3455%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (662 samples, 0.09%)</title><rect x="86.1948%" y="581" width="0.0933%" height="15" fill="rgb(223,129,24)" fg:x="611617" fg:w="662"/><text x="86.4448%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1,412 samples, 0.20%)</title><rect x="86.2881%" y="597" width="0.1990%" height="15" fill="rgb(231,168,25)" fg:x="612279" fg:w="1412"/><text x="86.5381%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (719 samples, 0.10%)</title><rect x="86.3858%" y="581" width="0.1013%" height="15" fill="rgb(224,39,20)" fg:x="612972" fg:w="719"/><text x="86.6358%" y="591.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1,051 samples, 0.15%)</title><rect x="86.4871%" y="597" width="0.1481%" height="15" fill="rgb(225,152,53)" fg:x="613691" fg:w="1051"/><text x="86.7371%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,307 samples, 1.03%)</title><rect x="85.6396%" y="613" width="1.0298%" height="15" fill="rgb(252,17,24)" fg:x="607677" fg:w="7307"/><text x="85.8896%" y="623.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (242 samples, 0.03%)</title><rect x="86.6352%" y="597" width="0.0341%" height="15" fill="rgb(250,114,30)" fg:x="614742" fg:w="242"/><text x="86.8852%" y="607.50"></text></g><g><title>clap::app::parser::Parser::debug_asserts::{{closure}} (365 samples, 0.05%)</title><rect x="86.9368%" y="597" width="0.0514%" height="15" fill="rgb(229,5,4)" fg:x="616882" fg:w="365"/><text x="87.1868%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any::check::{{closure}} (808 samples, 0.11%)</title><rect x="86.9883%" y="597" width="0.1139%" height="15" fill="rgb(225,176,49)" fg:x="617247" fg:w="808"/><text x="87.2383%" y="607.50"></text></g><g><title>clap::app::parser::Parser::debug_asserts::{{closure}} (668 samples, 0.09%)</title><rect x="87.0080%" y="581" width="0.0941%" height="15" fill="rgb(224,221,49)" fg:x="617387" fg:w="668"/><text x="87.2580%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (572 samples, 0.08%)</title><rect x="87.0215%" y="565" width="0.0806%" height="15" fill="rgb(253,169,27)" fg:x="617483" fg:w="572"/><text x="87.2715%" y="575.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (454 samples, 0.06%)</title><rect x="87.0382%" y="549" width="0.0640%" height="15" fill="rgb(211,206,16)" fg:x="617601" fg:w="454"/><text x="87.2882%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (273 samples, 0.04%)</title><rect x="87.0637%" y="533" width="0.0385%" height="15" fill="rgb(244,87,35)" fg:x="617782" fg:w="273"/><text x="87.3137%" y="543.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (188 samples, 0.03%)</title><rect x="87.0756%" y="517" width="0.0265%" height="15" fill="rgb(246,28,10)" fg:x="617867" fg:w="188"/><text x="87.3256%" y="527.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (119 samples, 0.02%)</title><rect x="87.0854%" y="501" width="0.0168%" height="15" fill="rgb(229,12,44)" fg:x="617936" fg:w="119"/><text x="87.3354%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (27,055 samples, 3.81%)</title><rect x="84.3453%" y="645" width="3.8128%" height="15" fill="rgb(210,145,37)" fg:x="598493" fg:w="27055"/><text x="84.5953%" y="655.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (26,850 samples, 3.78%)</title><rect x="84.3742%" y="629" width="3.7840%" height="15" fill="rgb(227,112,52)" fg:x="598698" fg:w="26850"/><text x="84.6242%" y="639.50">core..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (10,564 samples, 1.49%)</title><rect x="86.6693%" y="613" width="1.4888%" height="15" fill="rgb(238,155,34)" fg:x="614984" fg:w="10564"/><text x="86.9193%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7,493 samples, 1.06%)</title><rect x="87.1021%" y="597" width="1.0560%" height="15" fill="rgb(239,226,36)" fg:x="618055" fg:w="7493"/><text x="87.3521%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any::check::{{closure}} (6,687 samples, 0.94%)</title><rect x="87.2157%" y="581" width="0.9424%" height="15" fill="rgb(230,16,23)" fg:x="618861" fg:w="6687"/><text x="87.4657%" y="591.50"></text></g><g><title>clap::app::parser::Parser::debug_asserts::{{closure}} (5,478 samples, 0.77%)</title><rect x="87.3861%" y="565" width="0.7720%" height="15" fill="rgb(236,171,36)" fg:x="620070" fg:w="5478"/><text x="87.6361%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4,758 samples, 0.67%)</title><rect x="87.4876%" y="549" width="0.6705%" height="15" fill="rgb(221,22,14)" fg:x="620790" fg:w="4758"/><text x="87.7376%" y="559.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3,902 samples, 0.55%)</title><rect x="87.6082%" y="533" width="0.5499%" height="15" fill="rgb(242,43,11)" fg:x="621646" fg:w="3902"/><text x="87.8582%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2,405 samples, 0.34%)</title><rect x="87.8192%" y="517" width="0.3389%" height="15" fill="rgb(232,69,23)" fg:x="623143" fg:w="2405"/><text x="88.0692%" y="527.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1,618 samples, 0.23%)</title><rect x="87.9301%" y="501" width="0.2280%" height="15" fill="rgb(216,180,54)" fg:x="623930" fg:w="1618"/><text x="88.1801%" y="511.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,068 samples, 0.15%)</title><rect x="88.0076%" y="485" width="0.1505%" height="15" fill="rgb(216,5,24)" fg:x="624480" fg:w="1068"/><text x="88.2576%" y="495.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (100 samples, 0.01%)</title><rect x="88.1581%" y="645" width="0.0141%" height="15" fill="rgb(225,89,9)" fg:x="625548" fg:w="100"/><text x="88.4081%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (27,500 samples, 3.88%)</title><rect x="84.2989%" y="661" width="3.8756%" height="15" fill="rgb(243,75,33)" fg:x="598164" fg:w="27500"/><text x="84.5489%" y="671.50">&lt;cor..</text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (2,495 samples, 0.35%)</title><rect x="89.1487%" y="629" width="0.3516%" height="15" fill="rgb(247,141,45)" fg:x="632577" fg:w="2495"/><text x="89.3987%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (4,128 samples, 0.58%)</title><rect x="90.8586%" y="613" width="0.5818%" height="15" fill="rgb(232,177,36)" fg:x="644710" fg:w="4128"/><text x="91.1086%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (2,060 samples, 0.29%)</title><rect x="91.1501%" y="597" width="0.2903%" height="15" fill="rgb(219,125,36)" fg:x="646778" fg:w="2060"/><text x="91.4001%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (4,075 samples, 0.57%)</title><rect x="91.4404%" y="613" width="0.5743%" height="15" fill="rgb(227,94,9)" fg:x="648838" fg:w="4075"/><text x="91.6904%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (2,034 samples, 0.29%)</title><rect x="91.7280%" y="597" width="0.2867%" height="15" fill="rgb(240,34,52)" fg:x="650879" fg:w="2034"/><text x="91.9780%" y="607.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (3,014 samples, 0.42%)</title><rect x="92.0147%" y="613" width="0.4248%" height="15" fill="rgb(216,45,12)" fg:x="652913" fg:w="3014"/><text x="92.2647%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21,701 samples, 3.06%)</title><rect x="89.5037%" y="629" width="3.0583%" height="15" fill="rgb(246,21,19)" fg:x="635096" fg:w="21701"/><text x="89.7537%" y="639.50">&lt;co..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (870 samples, 0.12%)</title><rect x="92.4394%" y="613" width="0.1226%" height="15" fill="rgb(213,98,42)" fg:x="655927" fg:w="870"/><text x="92.6894%" y="623.50"></text></g><g><title>clap::app::parser::Parser::debug_asserts::{{closure}} (1,061 samples, 0.15%)</title><rect x="93.3056%" y="613" width="0.1495%" height="15" fill="rgb(250,136,47)" fg:x="662073" fg:w="1061"/><text x="93.5556%" y="623.50"></text></g><g><title>core::mem::size_of_val (81 samples, 0.01%)</title><rect x="96.7598%" y="485" width="0.0114%" height="15" fill="rgb(251,124,27)" fg:x="686583" fg:w="81"/><text x="97.0098%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (61,114 samples, 8.61%)</title><rect x="88.1745%" y="661" width="8.6128%" height="15" fill="rgb(229,180,14)" fg:x="625664" fg:w="61114"/><text x="88.4245%" y="671.50">&lt;core::iter:..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (60,966 samples, 8.59%)</title><rect x="88.1953%" y="645" width="8.5919%" height="15" fill="rgb(245,216,25)" fg:x="625812" fg:w="60966"/><text x="88.4453%" y="655.50">core::iter::..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (29,981 samples, 4.23%)</title><rect x="92.5620%" y="629" width="4.2252%" height="15" fill="rgb(251,43,5)" fg:x="656797" fg:w="29981"/><text x="92.8120%" y="639.50">core:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (23,644 samples, 3.33%)</title><rect x="93.4551%" y="613" width="3.3321%" height="15" fill="rgb(250,128,24)" fg:x="663134" fg:w="23644"/><text x="93.7051%" y="623.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::any::check::{{closure}} (21,199 samples, 2.99%)</title><rect x="93.7997%" y="597" width="2.9876%" height="15" fill="rgb(217,117,27)" fg:x="665579" fg:w="21199"/><text x="94.0497%" y="607.50">cor..</text></g><g><title>clap::app::parser::Parser::debug_asserts::{{closure}} (17,632 samples, 2.48%)</title><rect x="94.3024%" y="581" width="2.4849%" height="15" fill="rgb(245,147,4)" fg:x="669146" fg:w="17632"/><text x="94.5524%" y="591.50">cl..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (15,170 samples, 2.14%)</title><rect x="94.6493%" y="565" width="2.1379%" height="15" fill="rgb(242,201,35)" fg:x="671608" fg:w="15170"/><text x="94.8993%" y="575.50">c..</text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (12,358 samples, 1.74%)</title><rect x="95.0456%" y="549" width="1.7416%" height="15" fill="rgb(218,181,1)" fg:x="674420" fg:w="12358"/><text x="95.2956%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (7,597 samples, 1.07%)</title><rect x="95.7166%" y="533" width="1.0706%" height="15" fill="rgb(222,6,29)" fg:x="679181" fg:w="7597"/><text x="95.9666%" y="543.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (5,238 samples, 0.74%)</title><rect x="96.0490%" y="517" width="0.7382%" height="15" fill="rgb(208,186,3)" fg:x="681540" fg:w="5238"/><text x="96.2990%" y="527.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3,332 samples, 0.47%)</title><rect x="96.3177%" y="501" width="0.4696%" height="15" fill="rgb(216,36,26)" fg:x="683446" fg:w="3332"/><text x="96.5677%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (114 samples, 0.02%)</title><rect x="96.7712%" y="485" width="0.0161%" height="15" fill="rgb(248,201,23)" fg:x="686664" fg:w="114"/><text x="97.0212%" y="495.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (124 samples, 0.02%)</title><rect x="96.7872%" y="661" width="0.0175%" height="15" fill="rgb(251,170,31)" fg:x="686778" fg:w="124"/><text x="97.0372%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (89,087 samples, 12.55%)</title><rect x="84.2518%" y="677" width="12.5550%" height="15" fill="rgb(207,110,25)" fg:x="597830" fg:w="89087"/><text x="84.5018%" y="687.50">&lt;core::iter::adapte..</text></g><g><title>core::iter::traits::iterator::Iterator::any (89,252 samples, 12.58%)</title><rect x="84.2407%" y="693" width="12.5782%" height="15" fill="rgb(250,54,15)" fg:x="597751" fg:w="89252"/><text x="84.4907%" y="703.50">core::iter::traits:..</text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (191 samples, 0.03%)</title><rect x="96.8502%" y="677" width="0.0269%" height="15" fill="rgb(227,68,33)" fg:x="687225" fg:w="191"/><text x="97.1002%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::chain (959 samples, 0.14%)</title><rect x="96.8189%" y="693" width="0.1352%" height="15" fill="rgb(238,34,41)" fg:x="687003" fg:w="959"/><text x="97.0689%" y="703.50"></text></g><g><title>core::iter::adapters::chain::Chain&lt;A,B&gt;::new (546 samples, 0.08%)</title><rect x="96.8771%" y="677" width="0.0769%" height="15" fill="rgb(220,11,15)" fg:x="687416" fg:w="546"/><text x="97.1271%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (387 samples, 0.05%)</title><rect x="96.9541%" y="693" width="0.0545%" height="15" fill="rgb(246,111,35)" fg:x="687962" fg:w="387"/><text x="97.2041%" y="703.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (224 samples, 0.03%)</title><rect x="96.9771%" y="677" width="0.0316%" height="15" fill="rgb(209,88,53)" fg:x="688125" fg:w="224"/><text x="97.2271%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (149 samples, 0.02%)</title><rect x="97.0605%" y="661" width="0.0210%" height="15" fill="rgb(231,185,47)" fg:x="688717" fg:w="149"/><text x="97.3105%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (80 samples, 0.01%)</title><rect x="97.0702%" y="645" width="0.0113%" height="15" fill="rgb(233,154,1)" fg:x="688786" fg:w="80"/><text x="97.3202%" y="655.50"></text></g><g><title>clap::app::parser::Parser::debug_asserts (225,116 samples, 31.73%)</title><rect x="65.3676%" y="709" width="31.7255%" height="15" fill="rgb(225,15,46)" fg:x="463832" fg:w="225116"/><text x="65.6176%" y="719.50">clap::app::parser::Parser::debug_asserts</text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (534 samples, 0.08%)</title><rect x="97.0178%" y="693" width="0.0753%" height="15" fill="rgb(211,135,41)" fg:x="688414" fg:w="534"/><text x="97.2678%" y="703.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (471 samples, 0.07%)</title><rect x="97.0267%" y="677" width="0.0664%" height="15" fill="rgb(208,54,0)" fg:x="688477" fg:w="471"/><text x="97.2767%" y="687.50"></text></g><g><title>clap::args::arg::Arg::is_set (176 samples, 0.02%)</title><rect x="97.1205%" y="693" width="0.0248%" height="15" fill="rgb(244,136,14)" fg:x="689143" fg:w="176"/><text x="97.3705%" y="703.50"></text></g><g><title>clap::args::arg_builder::base::Base::is_set (143 samples, 0.02%)</title><rect x="97.1252%" y="677" width="0.0202%" height="15" fill="rgb(241,56,14)" fg:x="689176" fg:w="143"/><text x="97.3752%" y="687.50"></text></g><g><title>clap::args::settings::ArgFlags::is_set (104 samples, 0.01%)</title><rect x="97.1307%" y="661" width="0.0147%" height="15" fill="rgb(205,80,24)" fg:x="689215" fg:w="104"/><text x="97.3807%" y="671.50"></text></g><g><title>clap::app::parser::Parser::implied_settings (940 samples, 0.13%)</title><rect x="97.0930%" y="709" width="0.1325%" height="15" fill="rgb(220,57,4)" fg:x="688948" fg:w="940"/><text x="97.3430%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (569 samples, 0.08%)</title><rect x="97.1453%" y="693" width="0.0802%" height="15" fill="rgb(226,193,50)" fg:x="689319" fg:w="569"/><text x="97.3953%" y="703.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (462 samples, 0.07%)</title><rect x="97.1604%" y="677" width="0.0651%" height="15" fill="rgb(231,168,22)" fg:x="689426" fg:w="462"/><text x="97.4104%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (266 samples, 0.04%)</title><rect x="97.1880%" y="661" width="0.0375%" height="15" fill="rgb(254,215,14)" fg:x="689622" fg:w="266"/><text x="97.4380%" y="671.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (185 samples, 0.03%)</title><rect x="97.1995%" y="645" width="0.0261%" height="15" fill="rgb(211,115,16)" fg:x="689703" fg:w="185"/><text x="97.4495%" y="655.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (118 samples, 0.02%)</title><rect x="97.2089%" y="629" width="0.0166%" height="15" fill="rgb(236,210,16)" fg:x="689770" fg:w="118"/><text x="97.4589%" y="639.50"></text></g><g><title>clap::args::arg::Arg::is_set (368 samples, 0.05%)</title><rect x="97.2255%" y="709" width="0.0519%" height="15" fill="rgb(221,94,12)" fg:x="689888" fg:w="368"/><text x="97.4755%" y="719.50"></text></g><g><title>clap::args::arg_builder::base::Base::is_set (299 samples, 0.04%)</title><rect x="97.2352%" y="693" width="0.0421%" height="15" fill="rgb(235,218,49)" fg:x="689957" fg:w="299"/><text x="97.4852%" y="703.50"></text></g><g><title>clap::args::settings::ArgFlags::is_set (231 samples, 0.03%)</title><rect x="97.2448%" y="677" width="0.0326%" height="15" fill="rgb(217,114,14)" fg:x="690025" fg:w="231"/><text x="97.4948%" y="687.50"></text></g><g><title>clap::args::settings::Flags::contains (78 samples, 0.01%)</title><rect x="97.2664%" y="661" width="0.0110%" height="15" fill="rgb(216,145,22)" fg:x="690178" fg:w="78"/><text x="97.5164%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (80 samples, 0.01%)</title><rect x="97.2847%" y="677" width="0.0113%" height="15" fill="rgb(217,112,39)" fg:x="690308" fg:w="80"/><text x="97.5347%" y="687.50"></text></g><g><title>clap::map::vec_map::VecMap&lt;V&gt;::insert (148 samples, 0.02%)</title><rect x="97.2836%" y="709" width="0.0209%" height="15" fill="rgb(225,85,32)" fg:x="690300" fg:w="148"/><text x="97.5336%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (143 samples, 0.02%)</title><rect x="97.2843%" y="693" width="0.0202%" height="15" fill="rgb(245,209,47)" fg:x="690305" fg:w="143"/><text x="97.5343%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (157 samples, 0.02%)</title><rect x="97.3046%" y="709" width="0.0221%" height="15" fill="rgb(218,220,15)" fg:x="690449" fg:w="157"/><text x="97.5546%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (93 samples, 0.01%)</title><rect x="97.3136%" y="693" width="0.0131%" height="15" fill="rgb(222,202,31)" fg:x="690513" fg:w="93"/><text x="97.5636%" y="703.50"></text></g><g><title>clap::app::App::arg (232,940 samples, 32.83%)</title><rect x="64.5027%" y="741" width="32.8281%" height="15" fill="rgb(243,203,4)" fg:x="457695" fg:w="232940"/><text x="64.7527%" y="751.50">clap::app::App::arg</text></g><g><title>clap::app::parser::Parser::add_arg (231,899 samples, 32.68%)</title><rect x="64.6494%" y="725" width="32.6814%" height="15" fill="rgb(237,92,17)" fg:x="458736" fg:w="231899"/><text x="64.8994%" y="735.50">clap::app::parser::Parser::add_arg</text></g><g><title>core::ptr::drop_in_place&lt;rg::app::RGArgKind&gt; (172 samples, 0.02%)</title><rect x="97.3359%" y="741" width="0.0242%" height="15" fill="rgb(231,119,7)" fg:x="690671" fg:w="172"/><text x="97.5859%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;str&gt;&gt; (131 samples, 0.02%)</title><rect x="97.3416%" y="725" width="0.0185%" height="15" fill="rgb(237,82,41)" fg:x="690712" fg:w="131"/><text x="97.5916%" y="735.50"></text></g><g><title>rg::app::arg_path (113 samples, 0.02%)</title><rect x="97.3614%" y="725" width="0.0159%" height="15" fill="rgb(226,81,48)" fg:x="690852" fg:w="113"/><text x="97.6114%" y="735.50"></text></g><g><title>rg::app::RGArg::positional (75 samples, 0.01%)</title><rect x="97.3667%" y="709" width="0.0106%" height="15" fill="rgb(234,70,51)" fg:x="690890" fg:w="75"/><text x="97.6167%" y="719.50"></text></g><g><title>rg::app::arg_pattern (163 samples, 0.02%)</title><rect x="97.3773%" y="725" width="0.0230%" height="15" fill="rgb(251,86,4)" fg:x="690965" fg:w="163"/><text x="97.6273%" y="735.50"></text></g><g><title>rg::app::RGArg::required_unless (77 samples, 0.01%)</title><rect x="97.3894%" y="709" width="0.0109%" height="15" fill="rgb(244,144,28)" fg:x="691051" fg:w="77"/><text x="97.6394%" y="719.50"></text></g><g><title>rg::app::RGArg::flag (100 samples, 0.01%)</title><rect x="97.4027%" y="709" width="0.0141%" height="15" fill="rgb(232,161,39)" fg:x="691145" fg:w="100"/><text x="97.6527%" y="719.50"></text></g><g><title>rg::app::RGArg::overrides (80 samples, 0.01%)</title><rect x="97.4200%" y="709" width="0.0113%" height="15" fill="rgb(247,34,51)" fg:x="691268" fg:w="80"/><text x="97.6700%" y="719.50"></text></g><g><title>rg::app::flag_after_context (250 samples, 0.04%)</title><rect x="97.4003%" y="725" width="0.0352%" height="15" fill="rgb(225,132,2)" fg:x="691128" fg:w="250"/><text x="97.6503%" y="735.50"></text></g><g><title>rg::app::RGArg::overrides (175 samples, 0.02%)</title><rect x="97.4482%" y="709" width="0.0247%" height="15" fill="rgb(209,159,44)" fg:x="691468" fg:w="175"/><text x="97.6982%" y="719.50"></text></g><g><title>clap::args::arg::Arg::overrides_with (124 samples, 0.02%)</title><rect x="97.4554%" y="693" width="0.0175%" height="15" fill="rgb(251,214,1)" fg:x="691519" fg:w="124"/><text x="97.7054%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (86 samples, 0.01%)</title><rect x="97.4607%" y="677" width="0.0121%" height="15" fill="rgb(247,84,47)" fg:x="691557" fg:w="86"/><text x="97.7107%" y="687.50"></text></g><g><title>rg::app::flag_auto_hybrid_regex (344 samples, 0.05%)</title><rect x="97.4355%" y="725" width="0.0485%" height="15" fill="rgb(240,111,43)" fg:x="691378" fg:w="344"/><text x="97.6855%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (79 samples, 0.01%)</title><rect x="97.4729%" y="709" width="0.0111%" height="15" fill="rgb(215,214,35)" fg:x="691643" fg:w="79"/><text x="97.7229%" y="719.50"></text></g><g><title>rg::app::RGArg::flag (108 samples, 0.02%)</title><rect x="97.4850%" y="709" width="0.0152%" height="15" fill="rgb(248,207,23)" fg:x="691729" fg:w="108"/><text x="97.7350%" y="719.50"></text></g><g><title>rg::app::RGArg::overrides (93 samples, 0.01%)</title><rect x="97.5047%" y="709" width="0.0131%" height="15" fill="rgb(214,186,4)" fg:x="691869" fg:w="93"/><text x="97.7547%" y="719.50"></text></g><g><title>clap::args::arg::Arg::overrides_with (79 samples, 0.01%)</title><rect x="97.5067%" y="693" width="0.0111%" height="15" fill="rgb(220,133,22)" fg:x="691883" fg:w="79"/><text x="97.7567%" y="703.50"></text></g><g><title>rg::app::flag_before_context (277 samples, 0.04%)</title><rect x="97.4840%" y="725" width="0.0390%" height="15" fill="rgb(239,134,19)" fg:x="691722" fg:w="277"/><text x="97.7340%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (78 samples, 0.01%)</title><rect x="97.5457%" y="645" width="0.0110%" height="15" fill="rgb(250,140,9)" fg:x="692160" fg:w="78"/><text x="97.7957%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (81 samples, 0.01%)</title><rect x="97.5454%" y="661" width="0.0114%" height="15" fill="rgb(225,59,14)" fg:x="692158" fg:w="81"/><text x="97.7954%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (89 samples, 0.01%)</title><rect x="97.5446%" y="677" width="0.0125%" height="15" fill="rgb(214,152,51)" fg:x="692152" fg:w="89"/><text x="97.7946%" y="687.50"></text></g><g><title>rg::app::RGArg::overrides (194 samples, 0.03%)</title><rect x="97.5301%" y="709" width="0.0273%" height="15" fill="rgb(251,227,43)" fg:x="692049" fg:w="194"/><text x="97.7801%" y="719.50"></text></g><g><title>clap::args::arg::Arg::overrides_with (148 samples, 0.02%)</title><rect x="97.5366%" y="693" width="0.0209%" height="15" fill="rgb(241,96,17)" fg:x="692095" fg:w="148"/><text x="97.7866%" y="703.50"></text></g><g><title>rg::app::flag_binary (330 samples, 0.05%)</title><rect x="97.5230%" y="725" width="0.0465%" height="15" fill="rgb(234,198,43)" fg:x="691999" fg:w="330"/><text x="97.7730%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (86 samples, 0.01%)</title><rect x="97.5574%" y="709" width="0.0121%" height="15" fill="rgb(220,108,29)" fg:x="692243" fg:w="86"/><text x="97.8074%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (87 samples, 0.01%)</title><rect x="97.5931%" y="661" width="0.0123%" height="15" fill="rgb(226,163,33)" fg:x="692496" fg:w="87"/><text x="97.8431%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (85 samples, 0.01%)</title><rect x="97.5933%" y="645" width="0.0120%" height="15" fill="rgb(205,194,45)" fg:x="692498" fg:w="85"/><text x="97.8433%" y="655.50"></text></g><g><title>rg::app::RGArg::overrides (187 samples, 0.03%)</title><rect x="97.5800%" y="709" width="0.0264%" height="15" fill="rgb(206,143,44)" fg:x="692403" fg:w="187"/><text x="97.8300%" y="719.50"></text></g><g><title>clap::args::arg::Arg::overrides_with (152 samples, 0.02%)</title><rect x="97.5849%" y="693" width="0.0214%" height="15" fill="rgb(236,136,36)" fg:x="692438" fg:w="152"/><text x="97.8349%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (103 samples, 0.01%)</title><rect x="97.5918%" y="677" width="0.0145%" height="15" fill="rgb(249,172,42)" fg:x="692487" fg:w="103"/><text x="97.8418%" y="687.50"></text></g><g><title>rg::app::flag_block_buffered (353 samples, 0.05%)</title><rect x="97.5695%" y="725" width="0.0497%" height="15" fill="rgb(216,139,23)" fg:x="692329" fg:w="353"/><text x="97.8195%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (92 samples, 0.01%)</title><rect x="97.6063%" y="709" width="0.0130%" height="15" fill="rgb(207,166,20)" fg:x="692590" fg:w="92"/><text x="97.8563%" y="719.50"></text></g><g><title>rg::app::flag_byte_offset (101 samples, 0.01%)</title><rect x="97.6193%" y="725" width="0.0142%" height="15" fill="rgb(210,209,22)" fg:x="692682" fg:w="101"/><text x="97.8693%" y="735.50"></text></g><g><title>rg::app::RGArg::overrides (83 samples, 0.01%)</title><rect x="97.6360%" y="709" width="0.0117%" height="15" fill="rgb(232,118,20)" fg:x="692801" fg:w="83"/><text x="97.8860%" y="719.50"></text></g><g><title>rg::app::flag_case_sensitive (192 samples, 0.03%)</title><rect x="97.6335%" y="725" width="0.0271%" height="15" fill="rgb(238,113,42)" fg:x="692783" fg:w="192"/><text x="97.8835%" y="735.50"></text></g><g><title>rg::app::RGArg::flag (106 samples, 0.01%)</title><rect x="97.6710%" y="709" width="0.0149%" height="15" fill="rgb(231,42,5)" fg:x="693049" fg:w="106"/><text x="97.9210%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (74 samples, 0.01%)</title><rect x="97.6928%" y="677" width="0.0104%" height="15" fill="rgb(243,166,24)" fg:x="693204" fg:w="74"/><text x="97.9428%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (72 samples, 0.01%)</title><rect x="97.6931%" y="661" width="0.0101%" height="15" fill="rgb(237,226,12)" fg:x="693206" fg:w="72"/><text x="97.9431%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (72 samples, 0.01%)</title><rect x="97.6931%" y="645" width="0.0101%" height="15" fill="rgb(229,133,24)" fg:x="693206" fg:w="72"/><text x="97.9431%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (72 samples, 0.01%)</title><rect x="97.6931%" y="629" width="0.0101%" height="15" fill="rgb(238,33,43)" fg:x="693206" fg:w="72"/><text x="97.9431%" y="639.50"></text></g><g><title>clap::args::arg::Arg::possible_values (80 samples, 0.01%)</title><rect x="97.6921%" y="693" width="0.0113%" height="15" fill="rgb(227,59,38)" fg:x="693199" fg:w="80"/><text x="97.9421%" y="703.50"></text></g><g><title>rg::app::flag_color (308 samples, 0.04%)</title><rect x="97.6606%" y="725" width="0.0434%" height="15" fill="rgb(230,97,0)" fg:x="692975" fg:w="308"/><text x="97.9106%" y="735.50"></text></g><g><title>rg::app::RGArg::possible_values (116 samples, 0.02%)</title><rect x="97.6876%" y="709" width="0.0163%" height="15" fill="rgb(250,173,50)" fg:x="693167" fg:w="116"/><text x="97.9376%" y="719.50"></text></g><g><title>clap::map::vec_map::VecMap&lt;V&gt;::insert (71 samples, 0.01%)</title><rect x="97.7122%" y="677" width="0.0100%" height="15" fill="rgb(240,15,50)" fg:x="693341" fg:w="71"/><text x="97.9622%" y="687.50"></text></g><g><title>clap::args::arg::Arg::value_name (80 samples, 0.01%)</title><rect x="97.7116%" y="693" width="0.0113%" height="15" fill="rgb(221,93,22)" fg:x="693337" fg:w="80"/><text x="97.9616%" y="703.50"></text></g><g><title>rg::app::RGArg::flag (149 samples, 0.02%)</title><rect x="97.7047%" y="709" width="0.0210%" height="15" fill="rgb(245,180,53)" fg:x="693288" fg:w="149"/><text x="97.9547%" y="719.50"></text></g><g><title>rg::app::flag_colors (183 samples, 0.03%)</title><rect x="97.7040%" y="725" width="0.0258%" height="15" fill="rgb(231,88,51)" fg:x="693283" fg:w="183"/><text x="97.9540%" y="735.50"></text></g><g><title>rg::app::flag_column (189 samples, 0.03%)</title><rect x="97.7298%" y="725" width="0.0266%" height="15" fill="rgb(240,58,21)" fg:x="693466" fg:w="189"/><text x="97.9798%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (89 samples, 0.01%)</title><rect x="97.7439%" y="709" width="0.0125%" height="15" fill="rgb(237,21,10)" fg:x="693566" fg:w="89"/><text x="97.9939%" y="719.50"></text></g><g><title>clap::args::arg::Arg::value_name (76 samples, 0.01%)</title><rect x="97.7658%" y="693" width="0.0107%" height="15" fill="rgb(218,43,11)" fg:x="693722" fg:w="76"/><text x="98.0158%" y="703.50"></text></g><g><title>rg::app::RGArg::flag (123 samples, 0.02%)</title><rect x="97.7609%" y="709" width="0.0173%" height="15" fill="rgb(218,221,29)" fg:x="693687" fg:w="123"/><text x="98.0109%" y="719.50"></text></g><g><title>rg::app::RGArg::overrides (80 samples, 0.01%)</title><rect x="97.7821%" y="709" width="0.0113%" height="15" fill="rgb(214,118,42)" fg:x="693837" fg:w="80"/><text x="98.0321%" y="719.50"></text></g><g><title>clap::args::arg::Arg::overrides_with (71 samples, 0.01%)</title><rect x="97.7833%" y="693" width="0.0100%" height="15" fill="rgb(251,200,26)" fg:x="693846" fg:w="71"/><text x="98.0333%" y="703.50"></text></g><g><title>rg::app::flag_context (297 samples, 0.04%)</title><rect x="97.7564%" y="725" width="0.0419%" height="15" fill="rgb(237,101,39)" fg:x="693655" fg:w="297"/><text x="98.0064%" y="735.50"></text></g><g><title>clap::map::vec_map::VecMap&lt;V&gt;::insert (74 samples, 0.01%)</title><rect x="97.8060%" y="677" width="0.0104%" height="15" fill="rgb(251,117,11)" fg:x="694007" fg:w="74"/><text x="98.0560%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (74 samples, 0.01%)</title><rect x="97.8060%" y="661" width="0.0104%" height="15" fill="rgb(216,223,23)" fg:x="694007" fg:w="74"/><text x="98.0560%" y="671.50"></text></g><g><title>clap::args::arg::Arg::value_name (79 samples, 0.01%)</title><rect x="97.8059%" y="693" width="0.0111%" height="15" fill="rgb(251,54,12)" fg:x="694006" fg:w="79"/><text x="98.0559%" y="703.50"></text></g><g><title>rg::app::RGArg::flag (137 samples, 0.02%)</title><rect x="97.8002%" y="709" width="0.0193%" height="15" fill="rgb(254,176,54)" fg:x="693966" fg:w="137"/><text x="98.0502%" y="719.50"></text></g><g><title>rg::app::flag_context_separator (287 samples, 0.04%)</title><rect x="97.7983%" y="725" width="0.0404%" height="15" fill="rgb(210,32,8)" fg:x="693952" fg:w="287"/><text x="98.0483%" y="735.50"></text></g><g><title>rg::app::flag_count (133 samples, 0.02%)</title><rect x="97.8387%" y="725" width="0.0187%" height="15" fill="rgb(235,52,38)" fg:x="694239" fg:w="133"/><text x="98.0887%" y="735.50"></text></g><g><title>rg::app::RGArg::overrides (94 samples, 0.01%)</title><rect x="97.8728%" y="709" width="0.0132%" height="15" fill="rgb(231,4,44)" fg:x="694481" fg:w="94"/><text x="98.1228%" y="719.50"></text></g><g><title>clap::args::arg::Arg::overrides_with (83 samples, 0.01%)</title><rect x="97.8744%" y="693" width="0.0117%" height="15" fill="rgb(249,2,32)" fg:x="694492" fg:w="83"/><text x="98.1244%" y="703.50"></text></g><g><title>rg::app::flag_crlf (226 samples, 0.03%)</title><rect x="97.8673%" y="725" width="0.0319%" height="15" fill="rgb(224,65,26)" fg:x="694442" fg:w="226"/><text x="98.1173%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (93 samples, 0.01%)</title><rect x="97.8861%" y="709" width="0.0131%" height="15" fill="rgb(250,73,40)" fg:x="694575" fg:w="93"/><text x="98.1361%" y="719.50"></text></g><g><title>rg::app::flag_debug (160 samples, 0.02%)</title><rect x="97.8992%" y="725" width="0.0225%" height="15" fill="rgb(253,177,16)" fg:x="694668" fg:w="160"/><text x="98.1492%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (90 samples, 0.01%)</title><rect x="97.9090%" y="709" width="0.0127%" height="15" fill="rgb(217,32,34)" fg:x="694738" fg:w="90"/><text x="98.1590%" y="719.50"></text></g><g><title>clap::args::arg::Arg::value_name (80 samples, 0.01%)</title><rect x="97.9289%" y="693" width="0.0113%" height="15" fill="rgb(212,7,10)" fg:x="694879" fg:w="80"/><text x="98.1789%" y="703.50"></text></g><g><title>clap::map::vec_map::VecMap&lt;V&gt;::insert (80 samples, 0.01%)</title><rect x="97.9289%" y="677" width="0.0113%" height="15" fill="rgb(245,89,8)" fg:x="694879" fg:w="80"/><text x="98.1789%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (80 samples, 0.01%)</title><rect x="97.9289%" y="661" width="0.0113%" height="15" fill="rgb(237,16,53)" fg:x="694879" fg:w="80"/><text x="98.1789%" y="671.50"></text></g><g><title>rg::app::RGArg::flag (139 samples, 0.02%)</title><rect x="97.9224%" y="709" width="0.0196%" height="15" fill="rgb(250,204,30)" fg:x="694833" fg:w="139"/><text x="98.1724%" y="719.50"></text></g><g><title>rg::app::flag_dfa_size_limit (156 samples, 0.02%)</title><rect x="97.9217%" y="725" width="0.0220%" height="15" fill="rgb(208,77,27)" fg:x="694828" fg:w="156"/><text x="98.1717%" y="735.50"></text></g><g><title>rg::app::RGArg::flag (116 samples, 0.02%)</title><rect x="97.9467%" y="709" width="0.0163%" height="15" fill="rgb(250,204,28)" fg:x="695005" fg:w="116"/><text x="98.1967%" y="719.50"></text></g><g><title>rg::app::flag_encoding (297 samples, 0.04%)</title><rect x="97.9437%" y="725" width="0.0419%" height="15" fill="rgb(244,63,21)" fg:x="694984" fg:w="297"/><text x="98.1937%" y="735.50"></text></g><g><title>clap::args::arg::Arg::value_name (81 samples, 0.01%)</title><rect x="97.9902%" y="693" width="0.0114%" height="15" fill="rgb(236,85,44)" fg:x="695314" fg:w="81"/><text x="98.2402%" y="703.50"></text></g><g><title>clap::map::vec_map::VecMap&lt;V&gt;::insert (79 samples, 0.01%)</title><rect x="97.9905%" y="677" width="0.0111%" height="15" fill="rgb(215,98,4)" fg:x="695316" fg:w="79"/><text x="98.2405%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (79 samples, 0.01%)</title><rect x="97.9905%" y="661" width="0.0111%" height="15" fill="rgb(235,38,11)" fg:x="695316" fg:w="79"/><text x="98.2405%" y="671.50"></text></g><g><title>rg::app::RGArg::flag (128 samples, 0.02%)</title><rect x="97.9870%" y="709" width="0.0180%" height="15" fill="rgb(254,186,25)" fg:x="695291" fg:w="128"/><text x="98.2370%" y="719.50"></text></g><g><title>rg::app::RGArg::overrides (94 samples, 0.01%)</title><rect x="98.0080%" y="709" width="0.0132%" height="15" fill="rgb(225,55,31)" fg:x="695440" fg:w="94"/><text x="98.2580%" y="719.50"></text></g><g><title>rg::app::flag_engine (331 samples, 0.05%)</title><rect x="97.9856%" y="725" width="0.0466%" height="15" fill="rgb(211,15,21)" fg:x="695281" fg:w="331"/><text x="98.2356%" y="735.50"></text></g><g><title>rg::app::RGArg::possible_values (78 samples, 0.01%)</title><rect x="98.0212%" y="709" width="0.0110%" height="15" fill="rgb(215,187,41)" fg:x="695534" fg:w="78"/><text x="98.2712%" y="719.50"></text></g><g><title>clap::map::vec_map::VecMap&lt;V&gt;::insert (77 samples, 0.01%)</title><rect x="98.0391%" y="677" width="0.0109%" height="15" fill="rgb(248,69,32)" fg:x="695661" fg:w="77"/><text x="98.2891%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (76 samples, 0.01%)</title><rect x="98.0392%" y="661" width="0.0107%" height="15" fill="rgb(252,102,52)" fg:x="695662" fg:w="76"/><text x="98.2892%" y="671.50"></text></g><g><title>clap::args::arg::Arg::value_name (85 samples, 0.01%)</title><rect x="98.0381%" y="693" width="0.0120%" height="15" fill="rgb(253,140,32)" fg:x="695654" fg:w="85"/><text x="98.2881%" y="703.50"></text></g><g><title>rg::app::RGArg::flag (139 samples, 0.02%)</title><rect x="98.0332%" y="709" width="0.0196%" height="15" fill="rgb(216,56,42)" fg:x="695619" fg:w="139"/><text x="98.2832%" y="719.50"></text></g><g><title>rg::app::flag_field_context_separator (164 samples, 0.02%)</title><rect x="98.0322%" y="725" width="0.0231%" height="15" fill="rgb(216,184,14)" fg:x="695612" fg:w="164"/><text x="98.2822%" y="735.50"></text></g><g><title>rg::app::RGArg::flag (113 samples, 0.02%)</title><rect x="98.0567%" y="709" width="0.0159%" height="15" fill="rgb(237,187,27)" fg:x="695786" fg:w="113"/><text x="98.3067%" y="719.50"></text></g><g><title>rg::app::flag_field_match_separator (135 samples, 0.02%)</title><rect x="98.0553%" y="725" width="0.0190%" height="15" fill="rgb(219,65,3)" fg:x="695776" fg:w="135"/><text x="98.3053%" y="735.50"></text></g><g><title>rg::app::RGArg::flag (125 samples, 0.02%)</title><rect x="98.0800%" y="709" width="0.0176%" height="15" fill="rgb(245,83,25)" fg:x="695951" fg:w="125"/><text x="98.3300%" y="719.50"></text></g><g><title>rg::app::flag_file (209 samples, 0.03%)</title><rect x="98.0743%" y="725" width="0.0295%" height="15" fill="rgb(214,205,45)" fg:x="695911" fg:w="209"/><text x="98.3243%" y="735.50"></text></g><g><title>rg::app::flag_files (169 samples, 0.02%)</title><rect x="98.1038%" y="725" width="0.0238%" height="15" fill="rgb(241,20,18)" fg:x="696120" fg:w="169"/><text x="98.3538%" y="735.50"></text></g><g><title>rg::app::flag_files_with_matches (121 samples, 0.02%)</title><rect x="98.1276%" y="725" width="0.0171%" height="15" fill="rgb(232,163,23)" fg:x="696289" fg:w="121"/><text x="98.3776%" y="735.50"></text></g><g><title>rg::app::flag_files_without_match (81 samples, 0.01%)</title><rect x="98.1447%" y="725" width="0.0114%" height="15" fill="rgb(214,5,46)" fg:x="696410" fg:w="81"/><text x="98.3947%" y="735.50"></text></g><g><title>rg::app::flag_fixed_strings (233 samples, 0.03%)</title><rect x="98.1561%" y="725" width="0.0328%" height="15" fill="rgb(229,78,17)" fg:x="696491" fg:w="233"/><text x="98.4061%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (97 samples, 0.01%)</title><rect x="98.1752%" y="709" width="0.0137%" height="15" fill="rgb(248,89,10)" fg:x="696627" fg:w="97"/><text x="98.4252%" y="719.50"></text></g><g><title>rg::app::flag_follow (195 samples, 0.03%)</title><rect x="98.1889%" y="725" width="0.0275%" height="15" fill="rgb(248,54,15)" fg:x="696724" fg:w="195"/><text x="98.4389%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (73 samples, 0.01%)</title><rect x="98.2061%" y="709" width="0.0103%" height="15" fill="rgb(223,116,6)" fg:x="696846" fg:w="73"/><text x="98.4561%" y="719.50"></text></g><g><title>rg::app::RGArg::flag (120 samples, 0.02%)</title><rect x="98.2184%" y="709" width="0.0169%" height="15" fill="rgb(205,125,38)" fg:x="696933" fg:w="120"/><text x="98.4684%" y="719.50"></text></g><g><title>rg::app::flag_glob (185 samples, 0.03%)</title><rect x="98.2164%" y="725" width="0.0261%" height="15" fill="rgb(251,78,38)" fg:x="696919" fg:w="185"/><text x="98.4664%" y="735.50"></text></g><g><title>rg::app::flag_glob_case_insensitive (190 samples, 0.03%)</title><rect x="98.2425%" y="725" width="0.0268%" height="15" fill="rgb(253,78,28)" fg:x="697104" fg:w="190"/><text x="98.4925%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (86 samples, 0.01%)</title><rect x="98.2571%" y="709" width="0.0121%" height="15" fill="rgb(209,120,3)" fg:x="697208" fg:w="86"/><text x="98.5071%" y="719.50"></text></g><g><title>rg::app::flag_heading (173 samples, 0.02%)</title><rect x="98.2692%" y="725" width="0.0244%" height="15" fill="rgb(238,229,9)" fg:x="697294" fg:w="173"/><text x="98.5192%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (88 samples, 0.01%)</title><rect x="98.2812%" y="709" width="0.0124%" height="15" fill="rgb(253,159,18)" fg:x="697379" fg:w="88"/><text x="98.5312%" y="719.50"></text></g><g><title>rg::app::flag_hidden (204 samples, 0.03%)</title><rect x="98.2936%" y="725" width="0.0287%" height="15" fill="rgb(244,42,34)" fg:x="697467" fg:w="204"/><text x="98.5436%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (90 samples, 0.01%)</title><rect x="98.3097%" y="709" width="0.0127%" height="15" fill="rgb(224,8,7)" fg:x="697581" fg:w="90"/><text x="98.5597%" y="719.50"></text></g><g><title>clap::args::arg::Arg::value_name (75 samples, 0.01%)</title><rect x="98.3294%" y="693" width="0.0106%" height="15" fill="rgb(210,201,45)" fg:x="697721" fg:w="75"/><text x="98.5794%" y="703.50"></text></g><g><title>rg::app::RGArg::flag (117 samples, 0.02%)</title><rect x="98.3249%" y="709" width="0.0165%" height="15" fill="rgb(252,185,21)" fg:x="697689" fg:w="117"/><text x="98.5749%" y="719.50"></text></g><g><title>rg::app::flag_iglob (164 samples, 0.02%)</title><rect x="98.3224%" y="725" width="0.0231%" height="15" fill="rgb(223,131,1)" fg:x="697671" fg:w="164"/><text x="98.5724%" y="735.50"></text></g><g><title>rg::app::RGArg::overrides (75 samples, 0.01%)</title><rect x="98.3476%" y="709" width="0.0106%" height="15" fill="rgb(245,141,16)" fg:x="697850" fg:w="75"/><text x="98.5976%" y="719.50"></text></g><g><title>rg::app::flag_ignore_case (172 samples, 0.02%)</title><rect x="98.3455%" y="725" width="0.0242%" height="15" fill="rgb(229,55,45)" fg:x="697835" fg:w="172"/><text x="98.5955%" y="735.50"></text></g><g><title>clap::args::arg::Arg::value_name (84 samples, 0.01%)</title><rect x="98.3749%" y="693" width="0.0118%" height="15" fill="rgb(208,92,15)" fg:x="698044" fg:w="84"/><text x="98.6249%" y="703.50"></text></g><g><title>clap::map::vec_map::VecMap&lt;V&gt;::insert (79 samples, 0.01%)</title><rect x="98.3756%" y="677" width="0.0111%" height="15" fill="rgb(234,185,47)" fg:x="698049" fg:w="79"/><text x="98.6256%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (79 samples, 0.01%)</title><rect x="98.3756%" y="661" width="0.0111%" height="15" fill="rgb(253,104,50)" fg:x="698049" fg:w="79"/><text x="98.6256%" y="671.50"></text></g><g><title>rg::app::RGArg::flag (129 samples, 0.02%)</title><rect x="98.3717%" y="709" width="0.0182%" height="15" fill="rgb(205,70,7)" fg:x="698021" fg:w="129"/><text x="98.6217%" y="719.50"></text></g><g><title>rg::app::flag_ignore_file (179 samples, 0.03%)</title><rect x="98.3697%" y="725" width="0.0252%" height="15" fill="rgb(240,178,43)" fg:x="698007" fg:w="179"/><text x="98.6197%" y="735.50"></text></g><g><title>rg::app::flag_ignore_file_case_insensitive (201 samples, 0.03%)</title><rect x="98.3950%" y="725" width="0.0283%" height="15" fill="rgb(214,112,2)" fg:x="698186" fg:w="201"/><text x="98.6450%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (109 samples, 0.02%)</title><rect x="98.4079%" y="709" width="0.0154%" height="15" fill="rgb(206,46,17)" fg:x="698278" fg:w="109"/><text x="98.6579%" y="719.50"></text></g><g><title>rg::app::flag_include_zero (86 samples, 0.01%)</title><rect x="98.4233%" y="725" width="0.0121%" height="15" fill="rgb(225,220,16)" fg:x="698387" fg:w="86"/><text x="98.6733%" y="735.50"></text></g><g><title>rg::app::flag_invert_match (102 samples, 0.01%)</title><rect x="98.4354%" y="725" width="0.0144%" height="15" fill="rgb(238,65,40)" fg:x="698473" fg:w="102"/><text x="98.6854%" y="735.50"></text></g><g><title>rg::app::RGArg::conflicts (71 samples, 0.01%)</title><rect x="98.4520%" y="709" width="0.0100%" height="15" fill="rgb(230,151,21)" fg:x="698591" fg:w="71"/><text x="98.7020%" y="719.50"></text></g><g><title>rg::app::flag_json (251 samples, 0.04%)</title><rect x="98.4498%" y="725" width="0.0354%" height="15" fill="rgb(218,58,49)" fg:x="698575" fg:w="251"/><text x="98.6998%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (88 samples, 0.01%)</title><rect x="98.4727%" y="709" width="0.0124%" height="15" fill="rgb(219,179,14)" fg:x="698738" fg:w="88"/><text x="98.7227%" y="719.50"></text></g><g><title>rg::app::RGArg::overrides (148 samples, 0.02%)</title><rect x="98.4911%" y="709" width="0.0209%" height="15" fill="rgb(223,72,1)" fg:x="698868" fg:w="148"/><text x="98.7411%" y="719.50"></text></g><g><title>clap::args::arg::Arg::overrides_with (115 samples, 0.02%)</title><rect x="98.4957%" y="693" width="0.0162%" height="15" fill="rgb(238,126,10)" fg:x="698901" fg:w="115"/><text x="98.7457%" y="703.50"></text></g><g><title>rg::app::flag_line_buffered (276 samples, 0.04%)</title><rect x="98.4851%" y="725" width="0.0389%" height="15" fill="rgb(224,206,38)" fg:x="698826" fg:w="276"/><text x="98.7351%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (86 samples, 0.01%)</title><rect x="98.5119%" y="709" width="0.0121%" height="15" fill="rgb(212,201,54)" fg:x="699016" fg:w="86"/><text x="98.7619%" y="719.50"></text></g><g><title>rg::app::RGArg::short (72 samples, 0.01%)</title><rect x="98.5369%" y="709" width="0.0101%" height="15" fill="rgb(218,154,48)" fg:x="699193" fg:w="72"/><text x="98.7869%" y="719.50"></text></g><g><title>rg::app::flag_line_number (239 samples, 0.03%)</title><rect x="98.5240%" y="725" width="0.0337%" height="15" fill="rgb(232,93,24)" fg:x="699102" fg:w="239"/><text x="98.7740%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (76 samples, 0.01%)</title><rect x="98.5470%" y="709" width="0.0107%" height="15" fill="rgb(245,30,21)" fg:x="699265" fg:w="76"/><text x="98.7970%" y="719.50"></text></g><g><title>rg::app::flag_line_regexp (110 samples, 0.02%)</title><rect x="98.5577%" y="725" width="0.0155%" height="15" fill="rgb(242,148,29)" fg:x="699341" fg:w="110"/><text x="98.8077%" y="735.50"></text></g><g><title>clap::map::vec_map::VecMap&lt;V&gt;::insert (80 samples, 0.01%)</title><rect x="98.5782%" y="677" width="0.0113%" height="15" fill="rgb(244,153,54)" fg:x="699486" fg:w="80"/><text x="98.8282%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (80 samples, 0.01%)</title><rect x="98.5782%" y="661" width="0.0113%" height="15" fill="rgb(252,87,22)" fg:x="699486" fg:w="80"/><text x="98.8282%" y="671.50"></text></g><g><title>clap::args::arg::Arg::value_name (83 samples, 0.01%)</title><rect x="98.5779%" y="693" width="0.0117%" height="15" fill="rgb(210,51,29)" fg:x="699484" fg:w="83"/><text x="98.8279%" y="703.50"></text></g><g><title>rg::app::RGArg::flag (125 samples, 0.02%)</title><rect x="98.5737%" y="709" width="0.0176%" height="15" fill="rgb(242,136,47)" fg:x="699454" fg:w="125"/><text x="98.8237%" y="719.50"></text></g><g><title>rg::app::flag_max_columns (183 samples, 0.03%)</title><rect x="98.5732%" y="725" width="0.0258%" height="15" fill="rgb(238,68,4)" fg:x="699451" fg:w="183"/><text x="98.8232%" y="735.50"></text></g><g><title>rg::app::flag_max_columns_preview (158 samples, 0.02%)</title><rect x="98.5990%" y="725" width="0.0223%" height="15" fill="rgb(242,161,30)" fg:x="699634" fg:w="158"/><text x="98.8490%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (79 samples, 0.01%)</title><rect x="98.6102%" y="709" width="0.0111%" height="15" fill="rgb(218,58,44)" fg:x="699713" fg:w="79"/><text x="98.8602%" y="719.50"></text></g><g><title>clap::map::vec_map::VecMap&lt;V&gt;::insert (71 samples, 0.01%)</title><rect x="98.6295%" y="677" width="0.0100%" height="15" fill="rgb(252,125,32)" fg:x="699850" fg:w="71"/><text x="98.8795%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (71 samples, 0.01%)</title><rect x="98.6295%" y="661" width="0.0100%" height="15" fill="rgb(219,178,0)" fg:x="699850" fg:w="71"/><text x="98.8795%" y="671.50"></text></g><g><title>clap::args::arg::Arg::value_name (78 samples, 0.01%)</title><rect x="98.6286%" y="693" width="0.0110%" height="15" fill="rgb(213,152,7)" fg:x="699844" fg:w="78"/><text x="98.8786%" y="703.50"></text></g><g><title>rg::app::RGArg::flag (140 samples, 0.02%)</title><rect x="98.6226%" y="709" width="0.0197%" height="15" fill="rgb(249,109,34)" fg:x="699801" fg:w="140"/><text x="98.8726%" y="719.50"></text></g><g><title>rg::app::flag_max_count (206 samples, 0.03%)</title><rect x="98.6213%" y="725" width="0.0290%" height="15" fill="rgb(232,96,21)" fg:x="699792" fg:w="206"/><text x="98.8713%" y="735.50"></text></g><g><title>clap::args::arg::Arg::value_name (76 samples, 0.01%)</title><rect x="98.6661%" y="693" width="0.0107%" height="15" fill="rgb(228,27,39)" fg:x="700110" fg:w="76"/><text x="98.9161%" y="703.50"></text></g><g><title>clap::map::vec_map::VecMap&lt;V&gt;::insert (72 samples, 0.01%)</title><rect x="98.6667%" y="677" width="0.0101%" height="15" fill="rgb(211,182,52)" fg:x="700114" fg:w="72"/><text x="98.9167%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (72 samples, 0.01%)</title><rect x="98.6667%" y="661" width="0.0101%" height="15" fill="rgb(234,178,38)" fg:x="700114" fg:w="72"/><text x="98.9167%" y="671.50"></text></g><g><title>rg::app::RGArg::flag (124 samples, 0.02%)</title><rect x="98.6610%" y="709" width="0.0175%" height="15" fill="rgb(221,111,3)" fg:x="700074" fg:w="124"/><text x="98.9110%" y="719.50"></text></g><g><title>rg::app::flag_max_depth (256 samples, 0.04%)</title><rect x="98.6503%" y="725" width="0.0361%" height="15" fill="rgb(228,175,21)" fg:x="699998" fg:w="256"/><text x="98.9003%" y="735.50"></text></g><g><title>rg::app::RGArg::flag (119 samples, 0.02%)</title><rect x="98.6874%" y="709" width="0.0168%" height="15" fill="rgb(228,174,43)" fg:x="700261" fg:w="119"/><text x="98.9374%" y="719.50"></text></g><g><title>rg::app::flag_max_filesize (141 samples, 0.02%)</title><rect x="98.6864%" y="725" width="0.0199%" height="15" fill="rgb(211,191,0)" fg:x="700254" fg:w="141"/><text x="98.9364%" y="735.50"></text></g><g><title>rg::app::flag_mmap (165 samples, 0.02%)</title><rect x="98.7063%" y="725" width="0.0233%" height="15" fill="rgb(253,117,3)" fg:x="700395" fg:w="165"/><text x="98.9563%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (81 samples, 0.01%)</title><rect x="98.7181%" y="709" width="0.0114%" height="15" fill="rgb(241,127,19)" fg:x="700479" fg:w="81"/><text x="98.9681%" y="719.50"></text></g><g><title>rg::app::flag_multiline (178 samples, 0.03%)</title><rect x="98.7295%" y="725" width="0.0251%" height="15" fill="rgb(218,103,12)" fg:x="700560" fg:w="178"/><text x="98.9795%" y="735.50"></text></g><g><title>rg::app::flag_multiline_dotall (171 samples, 0.02%)</title><rect x="98.7546%" y="725" width="0.0241%" height="15" fill="rgb(236,214,43)" fg:x="700738" fg:w="171"/><text x="99.0046%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (89 samples, 0.01%)</title><rect x="98.7662%" y="709" width="0.0125%" height="15" fill="rgb(244,144,19)" fg:x="700820" fg:w="89"/><text x="99.0162%" y="719.50"></text></g><g><title>rg::app::flag_no_config (91 samples, 0.01%)</title><rect x="98.7787%" y="725" width="0.0128%" height="15" fill="rgb(246,188,10)" fg:x="700909" fg:w="91"/><text x="99.0287%" y="735.50"></text></g><g><title>rg::app::flag_no_ignore (164 samples, 0.02%)</title><rect x="98.7915%" y="725" width="0.0231%" height="15" fill="rgb(212,193,33)" fg:x="701000" fg:w="164"/><text x="99.0415%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (91 samples, 0.01%)</title><rect x="98.8018%" y="709" width="0.0128%" height="15" fill="rgb(241,51,29)" fg:x="701073" fg:w="91"/><text x="99.0518%" y="719.50"></text></g><g><title>rg::app::flag_no_ignore_dot (217 samples, 0.03%)</title><rect x="98.8146%" y="725" width="0.0306%" height="15" fill="rgb(211,58,19)" fg:x="701164" fg:w="217"/><text x="99.0646%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (121 samples, 0.02%)</title><rect x="98.8282%" y="709" width="0.0171%" height="15" fill="rgb(229,111,26)" fg:x="701260" fg:w="121"/><text x="99.0782%" y="719.50"></text></g><g><title>rg::app::flag_no_ignore_exclude (174 samples, 0.02%)</title><rect x="98.8452%" y="725" width="0.0245%" height="15" fill="rgb(213,115,40)" fg:x="701381" fg:w="174"/><text x="99.0952%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (95 samples, 0.01%)</title><rect x="98.8564%" y="709" width="0.0134%" height="15" fill="rgb(209,56,44)" fg:x="701460" fg:w="95"/><text x="99.1064%" y="719.50"></text></g><g><title>rg::app::flag_no_ignore_files (164 samples, 0.02%)</title><rect x="98.8697%" y="725" width="0.0231%" height="15" fill="rgb(230,108,32)" fg:x="701555" fg:w="164"/><text x="99.1197%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (83 samples, 0.01%)</title><rect x="98.8812%" y="709" width="0.0117%" height="15" fill="rgb(216,165,31)" fg:x="701636" fg:w="83"/><text x="99.1312%" y="719.50"></text></g><g><title>rg::app::flag_no_ignore_global (144 samples, 0.02%)</title><rect x="98.8929%" y="725" width="0.0203%" height="15" fill="rgb(218,122,21)" fg:x="701719" fg:w="144"/><text x="99.1429%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (72 samples, 0.01%)</title><rect x="98.9030%" y="709" width="0.0101%" height="15" fill="rgb(223,224,47)" fg:x="701791" fg:w="72"/><text x="99.1530%" y="719.50"></text></g><g><title>rg::app::flag_no_ignore_messages (197 samples, 0.03%)</title><rect x="98.9132%" y="725" width="0.0278%" height="15" fill="rgb(238,102,44)" fg:x="701863" fg:w="197"/><text x="99.1632%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (87 samples, 0.01%)</title><rect x="98.9287%" y="709" width="0.0123%" height="15" fill="rgb(236,46,40)" fg:x="701973" fg:w="87"/><text x="99.1787%" y="719.50"></text></g><g><title>rg::app::flag_no_ignore_parent (161 samples, 0.02%)</title><rect x="98.9409%" y="725" width="0.0227%" height="15" fill="rgb(247,202,50)" fg:x="702060" fg:w="161"/><text x="99.1909%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (77 samples, 0.01%)</title><rect x="98.9528%" y="709" width="0.0109%" height="15" fill="rgb(209,99,20)" fg:x="702144" fg:w="77"/><text x="99.2028%" y="719.50"></text></g><g><title>rg::app::flag_no_ignore_vcs (147 samples, 0.02%)</title><rect x="98.9636%" y="725" width="0.0207%" height="15" fill="rgb(252,27,34)" fg:x="702221" fg:w="147"/><text x="99.2136%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (83 samples, 0.01%)</title><rect x="98.9726%" y="709" width="0.0117%" height="15" fill="rgb(215,206,23)" fg:x="702285" fg:w="83"/><text x="99.2226%" y="719.50"></text></g><g><title>rg::app::flag_no_messages (174 samples, 0.02%)</title><rect x="98.9843%" y="725" width="0.0245%" height="15" fill="rgb(212,135,36)" fg:x="702368" fg:w="174"/><text x="99.2343%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (91 samples, 0.01%)</title><rect x="98.9960%" y="709" width="0.0128%" height="15" fill="rgb(240,189,1)" fg:x="702451" fg:w="91"/><text x="99.2460%" y="719.50"></text></g><g><title>rg::app::RGArg::overrides (127 samples, 0.02%)</title><rect x="99.0155%" y="709" width="0.0179%" height="15" fill="rgb(242,56,20)" fg:x="702589" fg:w="127"/><text x="99.2655%" y="719.50"></text></g><g><title>clap::args::arg::Arg::overrides_with (104 samples, 0.01%)</title><rect x="99.0187%" y="693" width="0.0147%" height="15" fill="rgb(247,132,33)" fg:x="702612" fg:w="104"/><text x="99.2687%" y="703.50"></text></g><g><title>rg::app::flag_no_pcre2_unicode (281 samples, 0.04%)</title><rect x="99.0088%" y="725" width="0.0396%" height="15" fill="rgb(208,149,11)" fg:x="702542" fg:w="281"/><text x="99.2588%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (107 samples, 0.02%)</title><rect x="99.0334%" y="709" width="0.0151%" height="15" fill="rgb(211,33,11)" fg:x="702716" fg:w="107"/><text x="99.2834%" y="719.50"></text></g><g><title>rg::app::flag_no_require_git (166 samples, 0.02%)</title><rect x="99.0484%" y="725" width="0.0234%" height="15" fill="rgb(221,29,38)" fg:x="702823" fg:w="166"/><text x="99.2984%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (87 samples, 0.01%)</title><rect x="99.0596%" y="709" width="0.0123%" height="15" fill="rgb(206,182,49)" fg:x="702902" fg:w="87"/><text x="99.3096%" y="719.50"></text></g><g><title>rg::app::RGArg::overrides (139 samples, 0.02%)</title><rect x="99.0780%" y="709" width="0.0196%" height="15" fill="rgb(216,140,1)" fg:x="703033" fg:w="139"/><text x="99.3280%" y="719.50"></text></g><g><title>clap::args::arg::Arg::overrides_with (124 samples, 0.02%)</title><rect x="99.0802%" y="693" width="0.0175%" height="15" fill="rgb(232,57,40)" fg:x="703048" fg:w="124"/><text x="99.3302%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (73 samples, 0.01%)</title><rect x="99.0873%" y="677" width="0.0103%" height="15" fill="rgb(224,186,18)" fg:x="703099" fg:w="73"/><text x="99.3373%" y="687.50"></text></g><g><title>rg::app::flag_no_unicode (275 samples, 0.04%)</title><rect x="99.0718%" y="725" width="0.0388%" height="15" fill="rgb(215,121,11)" fg:x="702989" fg:w="275"/><text x="99.3218%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (92 samples, 0.01%)</title><rect x="99.0976%" y="709" width="0.0130%" height="15" fill="rgb(245,147,10)" fg:x="703172" fg:w="92"/><text x="99.3476%" y="719.50"></text></g><g><title>rg::app::flag_null (99 samples, 0.01%)</title><rect x="99.1106%" y="725" width="0.0140%" height="15" fill="rgb(238,153,13)" fg:x="703264" fg:w="99"/><text x="99.3606%" y="735.50"></text></g><g><title>rg::app::flag_null_data (101 samples, 0.01%)</title><rect x="99.1245%" y="725" width="0.0142%" height="15" fill="rgb(233,108,0)" fg:x="703363" fg:w="101"/><text x="99.3745%" y="735.50"></text></g><g><title>rg::app::flag_one_file_system (189 samples, 0.03%)</title><rect x="99.1388%" y="725" width="0.0266%" height="15" fill="rgb(212,157,17)" fg:x="703464" fg:w="189"/><text x="99.3888%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (105 samples, 0.01%)</title><rect x="99.1506%" y="709" width="0.0148%" height="15" fill="rgb(225,213,38)" fg:x="703548" fg:w="105"/><text x="99.4006%" y="719.50"></text></g><g><title>rg::app::flag_only_matching (101 samples, 0.01%)</title><rect x="99.1654%" y="725" width="0.0142%" height="15" fill="rgb(248,16,11)" fg:x="703653" fg:w="101"/><text x="99.4154%" y="735.50"></text></g><g><title>rg::app::RGArg::overrides (93 samples, 0.01%)</title><rect x="99.1861%" y="709" width="0.0131%" height="15" fill="rgb(241,33,4)" fg:x="703800" fg:w="93"/><text x="99.4361%" y="719.50"></text></g><g><title>clap::args::arg::Arg::overrides_with (76 samples, 0.01%)</title><rect x="99.1885%" y="693" width="0.0107%" height="15" fill="rgb(222,26,43)" fg:x="703817" fg:w="76"/><text x="99.4385%" y="703.50"></text></g><g><title>rg::app::flag_passthru (195 samples, 0.03%)</title><rect x="99.1796%" y="725" width="0.0275%" height="15" fill="rgb(243,29,36)" fg:x="703754" fg:w="195"/><text x="99.4296%" y="735.50"></text></g><g><title>clap::args::arg::Arg::value_name (77 samples, 0.01%)</title><rect x="99.2145%" y="693" width="0.0109%" height="15" fill="rgb(241,9,27)" fg:x="704001" fg:w="77"/><text x="99.4645%" y="703.50"></text></g><g><title>rg::app::RGArg::flag (135 samples, 0.02%)</title><rect x="99.2081%" y="709" width="0.0190%" height="15" fill="rgb(205,117,26)" fg:x="703956" fg:w="135"/><text x="99.4581%" y="719.50"></text></g><g><title>rg::app::flag_path_separator (164 samples, 0.02%)</title><rect x="99.2071%" y="725" width="0.0231%" height="15" fill="rgb(209,80,39)" fg:x="703949" fg:w="164"/><text x="99.4571%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (76 samples, 0.01%)</title><rect x="99.2528%" y="645" width="0.0107%" height="15" fill="rgb(239,155,6)" fg:x="704273" fg:w="76"/><text x="99.5028%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (79 samples, 0.01%)</title><rect x="99.2528%" y="661" width="0.0111%" height="15" fill="rgb(212,104,12)" fg:x="704273" fg:w="79"/><text x="99.5028%" y="671.50"></text></g><g><title>rg::app::RGArg::overrides (195 samples, 0.03%)</title><rect x="99.2376%" y="709" width="0.0275%" height="15" fill="rgb(234,204,3)" fg:x="704165" fg:w="195"/><text x="99.4876%" y="719.50"></text></g><g><title>clap::args::arg::Arg::overrides_with (148 samples, 0.02%)</title><rect x="99.2442%" y="693" width="0.0209%" height="15" fill="rgb(251,218,7)" fg:x="704212" fg:w="148"/><text x="99.4942%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (101 samples, 0.01%)</title><rect x="99.2508%" y="677" width="0.0142%" height="15" fill="rgb(221,81,32)" fg:x="704259" fg:w="101"/><text x="99.5008%" y="687.50"></text></g><g><title>rg::app::flag_pcre2 (380 samples, 0.05%)</title><rect x="99.2302%" y="725" width="0.0536%" height="15" fill="rgb(214,152,26)" fg:x="704113" fg:w="380"/><text x="99.4802%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (89 samples, 0.01%)</title><rect x="99.2713%" y="709" width="0.0125%" height="15" fill="rgb(223,22,3)" fg:x="704404" fg:w="89"/><text x="99.5213%" y="719.50"></text></g><g><title>rg::app::flag_pcre2_version (71 samples, 0.01%)</title><rect x="99.2838%" y="725" width="0.0100%" height="15" fill="rgb(207,174,7)" fg:x="704493" fg:w="71"/><text x="99.5338%" y="735.50"></text></g><g><title>clap::args::arg::Arg::value_name (82 samples, 0.01%)</title><rect x="99.3008%" y="693" width="0.0116%" height="15" fill="rgb(224,19,52)" fg:x="704614" fg:w="82"/><text x="99.5508%" y="703.50"></text></g><g><title>clap::map::vec_map::VecMap&lt;V&gt;::insert (81 samples, 0.01%)</title><rect x="99.3010%" y="677" width="0.0114%" height="15" fill="rgb(228,24,14)" fg:x="704615" fg:w="81"/><text x="99.5510%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (81 samples, 0.01%)</title><rect x="99.3010%" y="661" width="0.0114%" height="15" fill="rgb(230,153,43)" fg:x="704615" fg:w="81"/><text x="99.5510%" y="671.50"></text></g><g><title>rg::app::RGArg::flag (129 samples, 0.02%)</title><rect x="99.2970%" y="709" width="0.0182%" height="15" fill="rgb(231,106,12)" fg:x="704587" fg:w="129"/><text x="99.5470%" y="719.50"></text></g><g><title>rg::app::RGArg::overrides (95 samples, 0.01%)</title><rect x="99.3193%" y="709" width="0.0134%" height="15" fill="rgb(215,92,2)" fg:x="704745" fg:w="95"/><text x="99.5693%" y="719.50"></text></g><g><title>clap::args::arg::Arg::overrides_with (84 samples, 0.01%)</title><rect x="99.3209%" y="693" width="0.0118%" height="15" fill="rgb(249,143,25)" fg:x="704756" fg:w="84"/><text x="99.5709%" y="703.50"></text></g><g><title>rg::app::flag_pre (315 samples, 0.04%)</title><rect x="99.2938%" y="725" width="0.0444%" height="15" fill="rgb(252,7,35)" fg:x="704564" fg:w="315"/><text x="99.5438%" y="735.50"></text></g><g><title>rg::app::RGArg::flag (123 samples, 0.02%)</title><rect x="99.3396%" y="709" width="0.0173%" height="15" fill="rgb(216,69,40)" fg:x="704889" fg:w="123"/><text x="99.5896%" y="719.50"></text></g><g><title>rg::app::flag_pre_glob (155 samples, 0.02%)</title><rect x="99.3382%" y="725" width="0.0218%" height="15" fill="rgb(240,36,33)" fg:x="704879" fg:w="155"/><text x="99.5882%" y="735.50"></text></g><g><title>rg::app::flag_pretty (85 samples, 0.01%)</title><rect x="99.3600%" y="725" width="0.0120%" height="15" fill="rgb(231,128,14)" fg:x="705034" fg:w="85"/><text x="99.6100%" y="735.50"></text></g><g><title>rg::app::flag_quiet (84 samples, 0.01%)</title><rect x="99.3720%" y="725" width="0.0118%" height="15" fill="rgb(245,143,14)" fg:x="705119" fg:w="84"/><text x="99.6220%" y="735.50"></text></g><g><title>rg::app::RGArg::flag (106 samples, 0.01%)</title><rect x="99.3846%" y="709" width="0.0149%" height="15" fill="rgb(222,130,28)" fg:x="705208" fg:w="106"/><text x="99.6346%" y="719.50"></text></g><g><title>rg::app::flag_regex_size_limit (124 samples, 0.02%)</title><rect x="99.3839%" y="725" width="0.0175%" height="15" fill="rgb(212,10,48)" fg:x="705203" fg:w="124"/><text x="99.6339%" y="735.50"></text></g><g><title>rg::app::RGArg::flag (111 samples, 0.02%)</title><rect x="99.4049%" y="709" width="0.0156%" height="15" fill="rgb(254,118,45)" fg:x="705352" fg:w="111"/><text x="99.6549%" y="719.50"></text></g><g><title>rg::app::flag_regexp (194 samples, 0.03%)</title><rect x="99.4013%" y="725" width="0.0273%" height="15" fill="rgb(228,6,45)" fg:x="705327" fg:w="194"/><text x="99.6513%" y="735.50"></text></g><g><title>rg::app::RGArg::flag (138 samples, 0.02%)</title><rect x="99.4308%" y="709" width="0.0194%" height="15" fill="rgb(241,18,35)" fg:x="705536" fg:w="138"/><text x="99.6808%" y="719.50"></text></g><g><title>rg::app::flag_replace (212 samples, 0.03%)</title><rect x="99.4287%" y="725" width="0.0299%" height="15" fill="rgb(227,214,53)" fg:x="705521" fg:w="212"/><text x="99.6787%" y="735.50"></text></g><g><title>rg::app::RGArg::overrides (112 samples, 0.02%)</title><rect x="99.4667%" y="709" width="0.0158%" height="15" fill="rgb(224,107,51)" fg:x="705791" fg:w="112"/><text x="99.7167%" y="719.50"></text></g><g><title>clap::args::arg::Arg::overrides_with (102 samples, 0.01%)</title><rect x="99.4681%" y="693" width="0.0144%" height="15" fill="rgb(248,60,28)" fg:x="705801" fg:w="102"/><text x="99.7181%" y="703.50"></text></g><g><title>rg::app::flag_search_zip (288 samples, 0.04%)</title><rect x="99.4585%" y="725" width="0.0406%" height="15" fill="rgb(249,101,23)" fg:x="705733" fg:w="288"/><text x="99.7085%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (90 samples, 0.01%)</title><rect x="99.4865%" y="709" width="0.0127%" height="15" fill="rgb(228,51,19)" fg:x="705931" fg:w="90"/><text x="99.7365%" y="719.50"></text></g><g><title>rg::app::RGArg::overrides (74 samples, 0.01%)</title><rect x="99.5020%" y="709" width="0.0104%" height="15" fill="rgb(213,20,6)" fg:x="706041" fg:w="74"/><text x="99.7520%" y="719.50"></text></g><g><title>rg::app::flag_smart_case (171 samples, 0.02%)</title><rect x="99.4991%" y="725" width="0.0241%" height="15" fill="rgb(212,124,10)" fg:x="706021" fg:w="171"/><text x="99.7491%" y="735.50"></text></g><g><title>rg::app::RGArg::flag (113 samples, 0.02%)</title><rect x="99.5248%" y="709" width="0.0159%" height="15" fill="rgb(248,3,40)" fg:x="706203" fg:w="113"/><text x="99.7748%" y="719.50"></text></g><g><title>rg::app::RGArg::overrides (71 samples, 0.01%)</title><rect x="99.5425%" y="709" width="0.0100%" height="15" fill="rgb(223,178,23)" fg:x="706329" fg:w="71"/><text x="99.7925%" y="719.50"></text></g><g><title>rg::app::flag_sort (318 samples, 0.04%)</title><rect x="99.5232%" y="725" width="0.0448%" height="15" fill="rgb(240,132,45)" fg:x="706192" fg:w="318"/><text x="99.7732%" y="735.50"></text></g><g><title>rg::app::RGArg::possible_values (110 samples, 0.02%)</title><rect x="99.5525%" y="709" width="0.0155%" height="15" fill="rgb(245,164,36)" fg:x="706400" fg:w="110"/><text x="99.8025%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (78 samples, 0.01%)</title><rect x="99.5913%" y="661" width="0.0110%" height="15" fill="rgb(231,188,53)" fg:x="706675" fg:w="78"/><text x="99.8413%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (77 samples, 0.01%)</title><rect x="99.5914%" y="645" width="0.0109%" height="15" fill="rgb(237,198,39)" fg:x="706676" fg:w="77"/><text x="99.8414%" y="655.50"></text></g><g><title>rg::app::RGArg::overrides (181 samples, 0.03%)</title><rect x="99.5779%" y="709" width="0.0255%" height="15" fill="rgb(223,120,35)" fg:x="706580" fg:w="181"/><text x="99.8279%" y="719.50"></text></g><g><title>clap::args::arg::Arg::overrides_with (151 samples, 0.02%)</title><rect x="99.5821%" y="693" width="0.0213%" height="15" fill="rgb(253,107,49)" fg:x="706610" fg:w="151"/><text x="99.8321%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (92 samples, 0.01%)</title><rect x="99.5905%" y="677" width="0.0130%" height="15" fill="rgb(216,44,31)" fg:x="706669" fg:w="92"/><text x="99.8405%" y="687.50"></text></g><g><title>rg::app::flag_sort_files (337 samples, 0.05%)</title><rect x="99.5681%" y="725" width="0.0475%" height="15" fill="rgb(253,87,21)" fg:x="706510" fg:w="337"/><text x="99.8181%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (86 samples, 0.01%)</title><rect x="99.6034%" y="709" width="0.0121%" height="15" fill="rgb(226,18,2)" fg:x="706761" fg:w="86"/><text x="99.8534%" y="719.50"></text></g><g><title>clap::args::arg::Arg::value_name (84 samples, 0.01%)</title><rect x="99.6223%" y="693" width="0.0118%" height="15" fill="rgb(216,8,46)" fg:x="706895" fg:w="84"/><text x="99.8723%" y="703.50"></text></g><g><title>clap::map::vec_map::VecMap&lt;V&gt;::insert (79 samples, 0.01%)</title><rect x="99.6230%" y="677" width="0.0111%" height="15" fill="rgb(226,140,39)" fg:x="706900" fg:w="79"/><text x="99.8730%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (78 samples, 0.01%)</title><rect x="99.6232%" y="661" width="0.0110%" height="15" fill="rgb(221,194,54)" fg:x="706901" fg:w="78"/><text x="99.8732%" y="671.50"></text></g><g><title>rg::app::RGArg::flag (138 samples, 0.02%)</title><rect x="99.6177%" y="709" width="0.0194%" height="15" fill="rgb(213,92,11)" fg:x="706862" fg:w="138"/><text x="99.8677%" y="719.50"></text></g><g><title>rg::app::RGArg::overrides (87 samples, 0.01%)</title><rect x="99.6391%" y="709" width="0.0123%" height="15" fill="rgb(229,162,46)" fg:x="707014" fg:w="87"/><text x="99.8891%" y="719.50"></text></g><g><title>rg::app::flag_sortr (370 samples, 0.05%)</title><rect x="99.6155%" y="725" width="0.0521%" height="15" fill="rgb(214,111,36)" fg:x="706847" fg:w="370"/><text x="99.8655%" y="735.50"></text></g><g><title>rg::app::RGArg::possible_values (116 samples, 0.02%)</title><rect x="99.6513%" y="709" width="0.0163%" height="15" fill="rgb(207,6,21)" fg:x="707101" fg:w="116"/><text x="99.9013%" y="719.50"></text></g><g><title>rg::app::flag_stats (185 samples, 0.03%)</title><rect x="99.6677%" y="725" width="0.0261%" height="15" fill="rgb(213,127,38)" fg:x="707217" fg:w="185"/><text x="99.9177%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (87 samples, 0.01%)</title><rect x="99.6815%" y="709" width="0.0123%" height="15" fill="rgb(238,118,32)" fg:x="707315" fg:w="87"/><text x="99.9315%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (71 samples, 0.01%)</title><rect x="99.7126%" y="661" width="0.0100%" height="15" fill="rgb(240,139,39)" fg:x="707536" fg:w="71"/><text x="99.9626%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (85 samples, 0.01%)</title><rect x="99.7117%" y="677" width="0.0120%" height="15" fill="rgb(235,10,37)" fg:x="707529" fg:w="85"/><text x="99.9617%" y="687.50"></text></g><g><title>rg::app::RGArg::overrides (168 samples, 0.02%)</title><rect x="99.7002%" y="709" width="0.0237%" height="15" fill="rgb(249,171,38)" fg:x="707448" fg:w="168"/><text x="99.9502%" y="719.50"></text></g><g><title>clap::args::arg::Arg::overrides_with (144 samples, 0.02%)</title><rect x="99.7036%" y="693" width="0.0203%" height="15" fill="rgb(242,144,32)" fg:x="707472" fg:w="144"/><text x="99.9536%" y="703.50"></text></g><g><title>rg::app::flag_text (340 samples, 0.05%)</title><rect x="99.6938%" y="725" width="0.0479%" height="15" fill="rgb(217,117,21)" fg:x="707402" fg:w="340"/><text x="99.9438%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (93 samples, 0.01%)</title><rect x="99.7286%" y="709" width="0.0131%" height="15" fill="rgb(249,87,1)" fg:x="707649" fg:w="93"/><text x="99.9786%" y="719.50"></text></g><g><title>clap::args::arg::Arg::value_name (80 samples, 0.01%)</title><rect x="99.7472%" y="693" width="0.0113%" height="15" fill="rgb(248,196,48)" fg:x="707781" fg:w="80"/><text x="99.9972%" y="703.50"></text></g><g><title>clap::map::vec_map::VecMap&lt;V&gt;::insert (77 samples, 0.01%)</title><rect x="99.7476%" y="677" width="0.0109%" height="15" fill="rgb(251,206,33)" fg:x="707784" fg:w="77"/><text x="99.9976%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (74 samples, 0.01%)</title><rect x="99.7480%" y="661" width="0.0104%" height="15" fill="rgb(232,141,28)" fg:x="707787" fg:w="74"/><text x="99.9980%" y="671.50"></text></g><g><title>rg::app::RGArg::flag (129 samples, 0.02%)</title><rect x="99.7427%" y="709" width="0.0182%" height="15" fill="rgb(209,167,14)" fg:x="707749" fg:w="129"/><text x="99.9927%" y="719.50"></text></g><g><title>rg::app::flag_threads (194 samples, 0.03%)</title><rect x="99.7417%" y="725" width="0.0273%" height="15" fill="rgb(225,11,50)" fg:x="707742" fg:w="194"/><text x="99.9917%" y="735.50"></text></g><g><title>rg::app::flag_trim (208 samples, 0.03%)</title><rect x="99.7690%" y="725" width="0.0293%" height="15" fill="rgb(209,50,20)" fg:x="707936" fg:w="208"/><text x="100.0190%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (98 samples, 0.01%)</title><rect x="99.7845%" y="709" width="0.0138%" height="15" fill="rgb(212,17,46)" fg:x="708046" fg:w="98"/><text x="100.0345%" y="719.50"></text></g><g><title>clap::map::vec_map::VecMap&lt;V&gt;::insert (72 samples, 0.01%)</title><rect x="99.8062%" y="677" width="0.0101%" height="15" fill="rgb(216,101,39)" fg:x="708200" fg:w="72"/><text x="100.0562%" y="687.50"></text></g><g><title>clap::args::arg::Arg::value_name (77 samples, 0.01%)</title><rect x="99.8057%" y="693" width="0.0109%" height="15" fill="rgb(212,228,48)" fg:x="708196" fg:w="77"/><text x="100.0557%" y="703.50"></text></g><g><title>rg::app::RGArg::flag (126 samples, 0.02%)</title><rect x="99.8000%" y="709" width="0.0178%" height="15" fill="rgb(250,6,50)" fg:x="708156" fg:w="126"/><text x="100.0500%" y="719.50"></text></g><g><title>rg::app::flag_type (187 samples, 0.03%)</title><rect x="99.7983%" y="725" width="0.0264%" height="15" fill="rgb(250,160,48)" fg:x="708144" fg:w="187"/><text x="100.0483%" y="735.50"></text></g><g><title>rg::app::RGArg::flag (111 samples, 0.02%)</title><rect x="99.8265%" y="709" width="0.0156%" height="15" fill="rgb(244,216,33)" fg:x="708344" fg:w="111"/><text x="100.0765%" y="719.50"></text></g><g><title>rg::app::flag_type_add (151 samples, 0.02%)</title><rect x="99.8247%" y="725" width="0.0213%" height="15" fill="rgb(207,157,5)" fg:x="708331" fg:w="151"/><text x="100.0747%" y="735.50"></text></g><g><title>clap::args::arg::Arg::value_name (78 samples, 0.01%)</title><rect x="99.8517%" y="693" width="0.0110%" height="15" fill="rgb(228,199,8)" fg:x="708523" fg:w="78"/><text x="100.1017%" y="703.50"></text></g><g><title>rg::app::RGArg::flag (133 samples, 0.02%)</title><rect x="99.8465%" y="709" width="0.0187%" height="15" fill="rgb(227,80,20)" fg:x="708486" fg:w="133"/><text x="100.0965%" y="719.50"></text></g><g><title>rg::app::flag_type_clear (156 samples, 0.02%)</title><rect x="99.8460%" y="725" width="0.0220%" height="15" fill="rgb(222,9,33)" fg:x="708482" fg:w="156"/><text x="100.0960%" y="735.50"></text></g><g><title>rg::app::flag_type_list (137 samples, 0.02%)</title><rect x="99.8679%" y="725" width="0.0193%" height="15" fill="rgb(239,44,28)" fg:x="708638" fg:w="137"/><text x="100.1179%" y="735.50"></text></g><g><title>rg::app::RGArg::flag (123 samples, 0.02%)</title><rect x="99.8892%" y="709" width="0.0173%" height="15" fill="rgb(249,187,43)" fg:x="708789" fg:w="123"/><text x="100.1392%" y="719.50"></text></g><g><title>rg::app::flag_type_not (208 samples, 0.03%)</title><rect x="99.8873%" y="725" width="0.0293%" height="15" fill="rgb(216,141,28)" fg:x="708775" fg:w="208"/><text x="100.1373%" y="735.50"></text></g><g><title>rg::app::flag_unrestricted (118 samples, 0.02%)</title><rect x="99.9166%" y="725" width="0.0166%" height="15" fill="rgb(230,154,53)" fg:x="708983" fg:w="118"/><text x="100.1666%" y="735.50"></text></g><g><title>rg::app::flag_with_filename (251 samples, 0.04%)</title><rect x="99.9419%" y="725" width="0.0354%" height="15" fill="rgb(227,82,4)" fg:x="709163" fg:w="251"/><text x="100.1919%" y="735.50"></text></g><g><title>rg::app::RGArg::switch (78 samples, 0.01%)</title><rect x="99.9663%" y="709" width="0.0110%" height="15" fill="rgb(220,107,16)" fg:x="709336" fg:w="78"/><text x="100.2163%" y="719.50"></text></g><g><title>rg::args::clap_matches (273,193 samples, 38.50%)</title><rect x="61.4968%" y="773" width="38.5009%" height="15" fill="rgb(207,187,2)" fg:x="436366" fg:w="273193"/><text x="61.7468%" y="783.50">rg::args::clap_matches</text></g><g><title>rg::app::app (254,661 samples, 35.89%)</title><rect x="64.1085%" y="757" width="35.8892%" height="15" fill="rgb(210,162,52)" fg:x="454898" fg:w="254661"/><text x="64.3585%" y="767.50">rg::app::app</text></g><g><title>rg::app::all_args_and_flags (18,716 samples, 2.64%)</title><rect x="97.3601%" y="741" width="2.6376%" height="15" fill="rgb(217,216,49)" fg:x="690843" fg:w="18716"/><text x="97.6101%" y="751.50">rg..</text></g><g><title>rg::app::flag_word_regexp (145 samples, 0.02%)</title><rect x="99.9773%" y="725" width="0.0204%" height="15" fill="rgb(218,146,49)" fg:x="709414" fg:w="145"/><text x="100.2273%" y="735.50"></text></g><g><title>all (709,575 samples, 100%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(216,55,40)" fg:x="0" fg:w="709575"/><text x="0.2500%" y="959.50"></text></g><g><title>_start (709,484 samples, 99.99%)</title><rect x="0.0128%" y="933" width="99.9872%" height="15" fill="rgb(208,196,21)" fg:x="91" fg:w="709484"/><text x="0.2628%" y="943.50">_start</text></g><g><title>__libc_start_main (709,484 samples, 99.99%)</title><rect x="0.0128%" y="917" width="99.9872%" height="15" fill="rgb(242,117,42)" fg:x="91" fg:w="709484"/><text x="0.2628%" y="927.50">__libc_start_main</text></g><g><title>main (709,484 samples, 99.99%)</title><rect x="0.0128%" y="901" width="99.9872%" height="15" fill="rgb(210,11,23)" fg:x="91" fg:w="709484"/><text x="0.2628%" y="911.50">main</text></g><g><title>std::rt::lang_start (709,484 samples, 99.99%)</title><rect x="0.0128%" y="885" width="99.9872%" height="15" fill="rgb(217,110,2)" fg:x="91" fg:w="709484"/><text x="0.2628%" y="895.50">std::rt::lang_start</text></g><g><title>std::rt::lang_start_internal (709,484 samples, 99.99%)</title><rect x="0.0128%" y="869" width="99.9872%" height="15" fill="rgb(229,77,54)" fg:x="91" fg:w="709484"/><text x="0.2628%" y="879.50">std::rt::lang_start_internal</text></g><g><title>std::rt::lang_start::{{closure}} (709,484 samples, 99.99%)</title><rect x="0.0128%" y="853" width="99.9872%" height="15" fill="rgb(218,53,16)" fg:x="91" fg:w="709484"/><text x="0.2628%" y="863.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (709,484 samples, 99.99%)</title><rect x="0.0128%" y="837" width="99.9872%" height="15" fill="rgb(215,38,13)" fg:x="91" fg:w="709484"/><text x="0.2628%" y="847.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (709,484 samples, 99.99%)</title><rect x="0.0128%" y="821" width="99.9872%" height="15" fill="rgb(235,42,18)" fg:x="91" fg:w="709484"/><text x="0.2628%" y="831.50">core::ops::function::FnOnce::call_once</text></g><g><title>rg::main (709,484 samples, 99.99%)</title><rect x="0.0128%" y="805" width="99.9872%" height="15" fill="rgb(219,66,54)" fg:x="91" fg:w="709484"/><text x="0.2628%" y="815.50">rg::main</text></g><g><title>rg::args::Args::parse (304,157 samples, 42.86%)</title><rect x="57.1353%" y="789" width="42.8647%" height="15" fill="rgb(222,205,4)" fg:x="405418" fg:w="304157"/><text x="57.3853%" y="799.50">rg::args::Args::parse</text></g></svg></svg>